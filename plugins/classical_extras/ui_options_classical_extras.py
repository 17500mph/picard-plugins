# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'M:\Documents\Mark's documents\Music\Picard20\Classical Extras development\classical_extras\options_classical_extras.ui'
#
# Created by: PyQt5 UI code generator 5.11.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_ClassicalExtrasOptionsPage(object):
    def setupUi(self, ClassicalExtrasOptionsPage):
        ClassicalExtrasOptionsPage.setObjectName("ClassicalExtrasOptionsPage")
        ClassicalExtrasOptionsPage.resize(1145, 918)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(ClassicalExtrasOptionsPage.sizePolicy().hasHeightForWidth())
        ClassicalExtrasOptionsPage.setSizePolicy(sizePolicy)
        ClassicalExtrasOptionsPage.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        ClassicalExtrasOptionsPage.setAcceptDrops(False)
        self.vboxlayout = QtWidgets.QVBoxLayout(ClassicalExtrasOptionsPage)
        self.vboxlayout.setContentsMargins(9, 9, 9, 9)
        self.vboxlayout.setSpacing(6)
        self.vboxlayout.setObjectName("vboxlayout")
        self.tabWidget = QtWidgets.QTabWidget(ClassicalExtrasOptionsPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setMaximumSize(QtCore.QSize(1200, 1200))
        palette = QtGui.QPalette()
        self.tabWidget.setPalette(palette)
        self.tabWidget.setAutoFillBackground(False)
        self.tabWidget.setStyleSheet("")
        self.tabWidget.setObjectName("tabWidget")
        self.Artists = QtWidgets.QWidget()
        self.Artists.setObjectName("Artists")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.Artists)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.scrollArea = QtWidgets.QScrollArea(self.Artists)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea.sizePolicy().hasHeightForWidth())
        self.scrollArea.setSizePolicy(sizePolicy)
        self.scrollArea.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.scrollArea.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.scrollArea.setFrameShadow(QtWidgets.QFrame.Plain)
        self.scrollArea.setLineWidth(1)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 1086, 1071))
        self.scrollAreaWidgetContents.setAcceptDrops(False)
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.frame_9 = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.frame_9.setPalette(palette)
        self.frame_9.setAutoFillBackground(False)
        self.frame_9.setStyleSheet("background-color: rgb(255, 255, 222);")
        self.frame_9.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_9.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_9.setObjectName("frame_9")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.frame_9)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.use_cea = QtWidgets.QCheckBox(self.frame_9)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.use_cea.setPalette(palette)
        self.use_cea.setStyleSheet("")
        self.use_cea.setObjectName("use_cea")
        self.horizontalLayout_9.addWidget(self.use_cea)
        self.label_79 = QtWidgets.QLabel(self.frame_9)
        self.label_79.setObjectName("label_79")
        self.horizontalLayout_9.addWidget(self.label_79)
        self.verticalLayout_13.addWidget(self.frame_9)
        self.line_4 = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.verticalLayout_13.addWidget(self.line_4)
        self.label_43 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_43.setObjectName("label_43")
        self.verticalLayout_13.addWidget(self.label_43)
        self.frame_18 = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        self.frame_18.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_18.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_18.setObjectName("frame_18")
        self.verticalLayout_36 = QtWidgets.QVBoxLayout(self.frame_18)
        self.verticalLayout_36.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_36.setSpacing(0)
        self.verticalLayout_36.setObjectName("verticalLayout_36")
        self.label_93 = QtWidgets.QLabel(self.frame_18)
        self.label_93.setStyleSheet("background-color: rgb(176, 220, 192);")
        self.label_93.setObjectName("label_93")
        self.verticalLayout_36.addWidget(self.label_93)
        self.frame_23 = QtWidgets.QFrame(self.frame_18)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.frame_23.setPalette(palette)
        self.frame_23.setCursor(QtGui.QCursor(QtCore.Qt.UpArrowCursor))
        self.frame_23.setAutoFillBackground(False)
        self.frame_23.setStyleSheet("background-color: rgb(211, 248, 224);")
        self.frame_23.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_23.setObjectName("frame_23")
        self.formLayout_3 = QtWidgets.QFormLayout(self.frame_23)
        self.formLayout_3.setFieldGrowthPolicy(QtWidgets.QFormLayout.AllNonFixedFieldsGrow)
        self.formLayout_3.setContentsMargins(9, 0, 9, -1)
        self.formLayout_3.setVerticalSpacing(6)
        self.formLayout_3.setObjectName("formLayout_3")
        self.label_22 = QtWidgets.QLabel(self.frame_23)
        self.label_22.setObjectName("label_22")
        self.formLayout_3.setWidget(2, QtWidgets.QFormLayout.SpanningRole, self.label_22)
        self.groupBox_7 = QtWidgets.QGroupBox(self.frame_23)
        self.groupBox_7.setObjectName("groupBox_7")
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout(self.groupBox_7)
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        self.groupBox_26 = QtWidgets.QGroupBox(self.groupBox_7)
        self.groupBox_26.setAutoFillBackground(False)
        self.groupBox_26.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.groupBox_26.setObjectName("groupBox_26")
        self.verticalLayout_26 = QtWidgets.QVBoxLayout(self.groupBox_26)
        self.verticalLayout_26.setObjectName("verticalLayout_26")
        self.cea_recording_credited = QtWidgets.QCheckBox(self.groupBox_26)
        self.cea_recording_credited.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_recording_credited.setObjectName("cea_recording_credited")
        self.verticalLayout_26.addWidget(self.cea_recording_credited)
        self.cea_group_credited = QtWidgets.QCheckBox(self.groupBox_26)
        self.cea_group_credited.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_group_credited.setAutoFillBackground(False)
        self.cea_group_credited.setStyleSheet("")
        self.cea_group_credited.setObjectName("cea_group_credited")
        self.verticalLayout_26.addWidget(self.cea_group_credited)
        self.cea_credited = QtWidgets.QCheckBox(self.groupBox_26)
        self.cea_credited.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_credited.setObjectName("cea_credited")
        self.verticalLayout_26.addWidget(self.cea_credited)
        self.cea_release_relationship_credited = QtWidgets.QCheckBox(self.groupBox_26)
        self.cea_release_relationship_credited.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_release_relationship_credited.setObjectName("cea_release_relationship_credited")
        self.verticalLayout_26.addWidget(self.cea_release_relationship_credited)
        self.cea_recording_relationship_credited = QtWidgets.QCheckBox(self.groupBox_26)
        self.cea_recording_relationship_credited.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_recording_relationship_credited.setObjectName("cea_recording_relationship_credited")
        self.verticalLayout_26.addWidget(self.cea_recording_relationship_credited)
        self.cea_track_credited = QtWidgets.QCheckBox(self.groupBox_26)
        self.cea_track_credited.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_track_credited.setObjectName("cea_track_credited")
        self.verticalLayout_26.addWidget(self.cea_track_credited)
        self.label_24 = QtWidgets.QLabel(self.groupBox_26)
        self.label_24.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.label_24.setObjectName("label_24")
        self.verticalLayout_26.addWidget(self.label_24)
        self.label_88 = QtWidgets.QLabel(self.groupBox_26)
        self.label_88.setObjectName("label_88")
        self.verticalLayout_26.addWidget(self.label_88)
        self.horizontalLayout_18.addWidget(self.groupBox_26)
        self.groupBox_27 = QtWidgets.QGroupBox(self.groupBox_7)
        self.groupBox_27.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.groupBox_27.setObjectName("groupBox_27")
        self.verticalLayout_27 = QtWidgets.QVBoxLayout(self.groupBox_27)
        self.verticalLayout_27.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout_27.setContentsMargins(9, -1, -1, -1)
        self.verticalLayout_27.setObjectName("verticalLayout_27")
        self.cea_performer_credited = QtWidgets.QCheckBox(self.groupBox_27)
        self.cea_performer_credited.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_performer_credited.setObjectName("cea_performer_credited")
        self.verticalLayout_27.addWidget(self.cea_performer_credited)
        self.cea_composer_credited = QtWidgets.QCheckBox(self.groupBox_27)
        self.cea_composer_credited.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_composer_credited.setObjectName("cea_composer_credited")
        self.verticalLayout_27.addWidget(self.cea_composer_credited)
        self.horizontalLayout_18.addWidget(self.groupBox_27)
        self.formLayout_3.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.groupBox_7)
        self.groupBox_25 = QtWidgets.QGroupBox(self.frame_23)
        self.groupBox_25.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.groupBox_25.setObjectName("groupBox_25")
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout(self.groupBox_25)
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.cea_alias_overrides = QtWidgets.QRadioButton(self.groupBox_25)
        self.cea_alias_overrides.setObjectName("cea_alias_overrides")
        self.horizontalLayout_11.addWidget(self.cea_alias_overrides)
        self.cea_credited_overrides = QtWidgets.QRadioButton(self.groupBox_25)
        self.cea_credited_overrides.setObjectName("cea_credited_overrides")
        self.horizontalLayout_11.addWidget(self.cea_credited_overrides)
        self.cea_cyrillic = QtWidgets.QCheckBox(self.groupBox_25)
        self.cea_cyrillic.setObjectName("cea_cyrillic")
        self.horizontalLayout_11.addWidget(self.cea_cyrillic)
        self.formLayout_3.setWidget(4, QtWidgets.QFormLayout.SpanningRole, self.groupBox_25)
        self.groupBox_24 = QtWidgets.QGroupBox(self.frame_23)
        self.groupBox_24.setStyleSheet("background-color: rgb(211, 248, 224);")
        self.groupBox_24.setObjectName("groupBox_24")
        self.verticalLayout_24 = QtWidgets.QVBoxLayout(self.groupBox_24)
        self.verticalLayout_24.setObjectName("verticalLayout_24")
        self.groupBox_23 = QtWidgets.QGroupBox(self.groupBox_24)
        self.groupBox_23.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.groupBox_23.setTitle("")
        self.groupBox_23.setObjectName("groupBox_23")
        self.verticalLayout_40 = QtWidgets.QVBoxLayout(self.groupBox_23)
        self.verticalLayout_40.setObjectName("verticalLayout_40")
        self.cea_no_aliases = QtWidgets.QRadioButton(self.groupBox_23)
        self.cea_no_aliases.setObjectName("cea_no_aliases")
        self.verticalLayout_40.addWidget(self.cea_no_aliases)
        self.cea_aliases = QtWidgets.QRadioButton(self.groupBox_23)
        self.cea_aliases.setObjectName("cea_aliases")
        self.verticalLayout_40.addWidget(self.cea_aliases)
        self.cea_aliases_composer = QtWidgets.QRadioButton(self.groupBox_23)
        self.cea_aliases_composer.setObjectName("cea_aliases_composer")
        self.verticalLayout_40.addWidget(self.cea_aliases_composer)
        self.verticalLayout_24.addWidget(self.groupBox_23)
        self.formLayout_3.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.groupBox_24)
        self.verticalLayout_36.addWidget(self.frame_23)
        self.verticalLayout_13.addWidget(self.frame_18)
        self.frame_19 = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        self.frame_19.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_19.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_19.setObjectName("frame_19")
        self.verticalLayout_37 = QtWidgets.QVBoxLayout(self.frame_19)
        self.verticalLayout_37.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_37.setSpacing(0)
        self.verticalLayout_37.setObjectName("verticalLayout_37")
        self.label_94 = QtWidgets.QLabel(self.frame_19)
        self.label_94.setStyleSheet("background-color: rgb(176, 220, 192);")
        self.label_94.setObjectName("label_94")
        self.verticalLayout_37.addWidget(self.label_94)
        self.groupBox_29 = QtWidgets.QGroupBox(self.frame_19)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_29.setPalette(palette)
        self.groupBox_29.setAutoFillBackground(False)
        self.groupBox_29.setStyleSheet("background-color: rgb(211, 248, 224);")
        self.groupBox_29.setTitle("")
        self.groupBox_29.setObjectName("groupBox_29")
        self.horizontalLayout_24 = QtWidgets.QHBoxLayout(self.groupBox_29)
        self.horizontalLayout_24.setObjectName("horizontalLayout_24")
        self.groupBox_34 = QtWidgets.QGroupBox(self.groupBox_29)
        self.groupBox_34.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.groupBox_34.setObjectName("groupBox_34")
        self.verticalLayout_31 = QtWidgets.QVBoxLayout(self.groupBox_34)
        self.verticalLayout_31.setObjectName("verticalLayout_31")
        self.cea_ra_trackartist = QtWidgets.QRadioButton(self.groupBox_34)
        self.cea_ra_trackartist.setObjectName("cea_ra_trackartist")
        self.verticalLayout_31.addWidget(self.cea_ra_trackartist)
        self.cea_ra_performer = QtWidgets.QRadioButton(self.groupBox_34)
        self.cea_ra_performer.setObjectName("cea_ra_performer")
        self.verticalLayout_31.addWidget(self.cea_ra_performer)
        self.horizontalLayout_24.addWidget(self.groupBox_34)
        self.line_7 = QtWidgets.QFrame(self.groupBox_29)
        self.line_7.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_7.setObjectName("line_7")
        self.horizontalLayout_24.addWidget(self.line_7)
        self.cea_ra_use = QtWidgets.QCheckBox(self.groupBox_29)
        self.cea_ra_use.setObjectName("cea_ra_use")
        self.horizontalLayout_24.addWidget(self.cea_ra_use)
        self.groupBox_30 = QtWidgets.QGroupBox(self.groupBox_29)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_30.sizePolicy().hasHeightForWidth())
        self.groupBox_30.setSizePolicy(sizePolicy)
        self.groupBox_30.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.groupBox_30.setObjectName("groupBox_30")
        self.verticalLayout_29 = QtWidgets.QVBoxLayout(self.groupBox_30)
        self.verticalLayout_29.setObjectName("verticalLayout_29")
        self.cea_ra_replace_ta = QtWidgets.QRadioButton(self.groupBox_30)
        self.cea_ra_replace_ta.setObjectName("cea_ra_replace_ta")
        self.verticalLayout_29.addWidget(self.cea_ra_replace_ta)
        self.cea_ra_noblank_ta = QtWidgets.QCheckBox(self.groupBox_30)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cea_ra_noblank_ta.sizePolicy().hasHeightForWidth())
        self.cea_ra_noblank_ta.setSizePolicy(sizePolicy)
        self.cea_ra_noblank_ta.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.cea_ra_noblank_ta.setObjectName("cea_ra_noblank_ta")
        self.verticalLayout_29.addWidget(self.cea_ra_noblank_ta)
        self.cea_ra_merge_ta = QtWidgets.QRadioButton(self.groupBox_30)
        self.cea_ra_merge_ta.setObjectName("cea_ra_merge_ta")
        self.verticalLayout_29.addWidget(self.cea_ra_merge_ta)
        self.horizontalLayout_24.addWidget(self.groupBox_30)
        self.verticalLayout_37.addWidget(self.groupBox_29)
        self.verticalLayout_13.addWidget(self.frame_19)
        self.frame_20 = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        self.frame_20.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_20.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_20.setObjectName("frame_20")
        self.verticalLayout_38 = QtWidgets.QVBoxLayout(self.frame_20)
        self.verticalLayout_38.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_38.setSpacing(0)
        self.verticalLayout_38.setObjectName("verticalLayout_38")
        self.label_95 = QtWidgets.QLabel(self.frame_20)
        self.label_95.setStyleSheet("background-color: rgb(176, 220, 192);")
        self.label_95.setObjectName("label_95")
        self.verticalLayout_38.addWidget(self.label_95)
        self.groupBox_5 = QtWidgets.QGroupBox(self.frame_20)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(211, 248, 224))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_5.setPalette(palette)
        self.groupBox_5.setAutoFillBackground(False)
        self.groupBox_5.setStyleSheet("background-color: rgb(211, 248, 224);")
        self.groupBox_5.setTitle("")
        self.groupBox_5.setObjectName("groupBox_5")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox_5)
        self.gridLayout.setVerticalSpacing(6)
        self.gridLayout.setObjectName("gridLayout")
        self.groupBox_9 = QtWidgets.QGroupBox(self.groupBox_5)
        self.groupBox_9.setStyleSheet("background-color: rgba(250, 250, 250, 250);")
        self.groupBox_9.setObjectName("groupBox_9")
        self.verticalLayout_15 = QtWidgets.QVBoxLayout(self.groupBox_9)
        self.verticalLayout_15.setObjectName("verticalLayout_15")
        self.frame_5 = QtWidgets.QFrame(self.groupBox_9)
        self.frame_5.setStyleSheet("background-color: rgb(211, 248, 224);")
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.frame_5)
        self.horizontalLayout_8.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.horizontalLayout_8.setContentsMargins(-1, 1, -1, 9)
        self.horizontalLayout_8.setSpacing(6)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.label_44 = QtWidgets.QLabel(self.frame_5)
        self.label_44.setObjectName("label_44")
        self.horizontalLayout_8.addWidget(self.label_44)
        self.cea_chorusmaster = QtWidgets.QLineEdit(self.frame_5)
        self.cea_chorusmaster.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_chorusmaster.setObjectName("cea_chorusmaster")
        self.horizontalLayout_8.addWidget(self.cea_chorusmaster)
        self.verticalLayout_15.addWidget(self.frame_5)
        self.frame_3 = QtWidgets.QFrame(self.groupBox_9)
        self.frame_3.setStyleSheet("background-color: rgb(211, 248, 224);")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.frame_3)
        self.horizontalLayout_6.setContentsMargins(-1, 1, -1, -1)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_46 = QtWidgets.QLabel(self.frame_3)
        self.label_46.setObjectName("label_46")
        self.horizontalLayout_6.addWidget(self.label_46)
        self.cea_concertmaster = QtWidgets.QLineEdit(self.frame_3)
        self.cea_concertmaster.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_concertmaster.setObjectName("cea_concertmaster")
        self.horizontalLayout_6.addWidget(self.cea_concertmaster)
        self.verticalLayout_15.addWidget(self.frame_3)
        self.frame_12 = QtWidgets.QFrame(self.groupBox_9)
        self.frame_12.setStyleSheet("background-color: rgb(211, 248, 224);")
        self.frame_12.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_12.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_12.setObjectName("frame_12")
        self.horizontalLayout_23 = QtWidgets.QHBoxLayout(self.frame_12)
        self.horizontalLayout_23.setObjectName("horizontalLayout_23")
        self.label_34 = QtWidgets.QLabel(self.frame_12)
        self.label_34.setObjectName("label_34")
        self.horizontalLayout_23.addWidget(self.label_34)
        self.cea_lyricist = QtWidgets.QLineEdit(self.frame_12)
        self.cea_lyricist.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_lyricist.setObjectName("cea_lyricist")
        self.horizontalLayout_23.addWidget(self.cea_lyricist)
        self.verticalLayout_15.addWidget(self.frame_12)
        self.frame_7 = QtWidgets.QFrame(self.groupBox_9)
        self.frame_7.setStyleSheet("background-color: rgb(211, 248, 224);")
        self.frame_7.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_7.setObjectName("frame_7")
        self.horizontalLayout_19 = QtWidgets.QHBoxLayout(self.frame_7)
        self.horizontalLayout_19.setObjectName("horizontalLayout_19")
        self.label_26 = QtWidgets.QLabel(self.frame_7)
        self.label_26.setObjectName("label_26")
        self.horizontalLayout_19.addWidget(self.label_26)
        self.cea_librettist = QtWidgets.QLineEdit(self.frame_7)
        self.cea_librettist.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_librettist.setObjectName("cea_librettist")
        self.horizontalLayout_19.addWidget(self.cea_librettist)
        self.verticalLayout_15.addWidget(self.frame_7)
        self.frame_10 = QtWidgets.QFrame(self.groupBox_9)
        self.frame_10.setStyleSheet("background-color: rgb(211, 248, 224);")
        self.frame_10.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_10.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_10.setObjectName("frame_10")
        self.horizontalLayout_21 = QtWidgets.QHBoxLayout(self.frame_10)
        self.horizontalLayout_21.setObjectName("horizontalLayout_21")
        self.label_30 = QtWidgets.QLabel(self.frame_10)
        self.label_30.setObjectName("label_30")
        self.horizontalLayout_21.addWidget(self.label_30)
        self.cea_translator = QtWidgets.QLineEdit(self.frame_10)
        self.cea_translator.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_translator.setObjectName("cea_translator")
        self.horizontalLayout_21.addWidget(self.cea_translator)
        self.verticalLayout_15.addWidget(self.frame_10)
        self.gridLayout.addWidget(self.groupBox_9, 0, 1, 1, 1)
        self.groupBox_8 = QtWidgets.QGroupBox(self.groupBox_5)
        self.groupBox_8.setStyleSheet("background-color: rgba(250, 250, 250, 250);")
        self.groupBox_8.setTitle("")
        self.groupBox_8.setObjectName("groupBox_8")
        self.verticalLayout_14 = QtWidgets.QVBoxLayout(self.groupBox_8)
        self.verticalLayout_14.setSpacing(6)
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.cea_arrangers = QtWidgets.QCheckBox(self.groupBox_8)
        self.cea_arrangers.setObjectName("cea_arrangers")
        self.verticalLayout_14.addWidget(self.cea_arrangers)
        self.cea_composer_album = QtWidgets.QCheckBox(self.groupBox_8)
        self.cea_composer_album.setObjectName("cea_composer_album")
        self.verticalLayout_14.addWidget(self.cea_composer_album)
        self.cea_no_lyricists = QtWidgets.QCheckBox(self.groupBox_8)
        self.cea_no_lyricists.setObjectName("cea_no_lyricists")
        self.verticalLayout_14.addWidget(self.cea_no_lyricists)
        self.cea_inst_credit = QtWidgets.QCheckBox(self.groupBox_8)
        self.cea_inst_credit.setObjectName("cea_inst_credit")
        self.verticalLayout_14.addWidget(self.cea_inst_credit)
        self.cea_no_solo = QtWidgets.QCheckBox(self.groupBox_8)
        self.cea_no_solo.setObjectName("cea_no_solo")
        self.verticalLayout_14.addWidget(self.cea_no_solo)
        self.gridLayout.addWidget(self.groupBox_8, 0, 0, 1, 1)
        self.groupBox_28 = QtWidgets.QGroupBox(self.groupBox_5)
        self.groupBox_28.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.groupBox_28.setObjectName("groupBox_28")
        self.verticalLayout_21 = QtWidgets.QVBoxLayout(self.groupBox_28)
        self.verticalLayout_21.setObjectName("verticalLayout_21")
        self.frame_17 = QtWidgets.QFrame(self.groupBox_28)
        self.frame_17.setStyleSheet("background-color: rgb(211, 248, 224);")
        self.frame_17.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_17.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_17.setObjectName("frame_17")
        self.horizontalLayout_30 = QtWidgets.QHBoxLayout(self.frame_17)
        self.horizontalLayout_30.setObjectName("horizontalLayout_30")
        self.label_56 = QtWidgets.QLabel(self.frame_17)
        self.label_56.setObjectName("label_56")
        self.horizontalLayout_30.addWidget(self.label_56)
        self.cea_writer = QtWidgets.QLineEdit(self.frame_17)
        self.cea_writer.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_writer.setObjectName("cea_writer")
        self.horizontalLayout_30.addWidget(self.cea_writer)
        self.verticalLayout_21.addWidget(self.frame_17)
        self.frame_16 = QtWidgets.QFrame(self.groupBox_28)
        self.frame_16.setStyleSheet("background-color: rgb(211, 248, 224);")
        self.frame_16.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_16.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_16.setObjectName("frame_16")
        self.horizontalLayout_29 = QtWidgets.QHBoxLayout(self.frame_16)
        self.horizontalLayout_29.setObjectName("horizontalLayout_29")
        self.label_54 = QtWidgets.QLabel(self.frame_16)
        self.label_54.setObjectName("label_54")
        self.horizontalLayout_29.addWidget(self.label_54)
        self.cea_arranger = QtWidgets.QLineEdit(self.frame_16)
        self.cea_arranger.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_arranger.setObjectName("cea_arranger")
        self.horizontalLayout_29.addWidget(self.cea_arranger)
        self.verticalLayout_21.addWidget(self.frame_16)
        self.frame_4 = QtWidgets.QFrame(self.groupBox_28)
        self.frame_4.setStyleSheet("background-color: rgb(211, 248, 224);")
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.frame_4)
        self.horizontalLayout_7.setContentsMargins(-1, 1, -1, -1)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.label_45 = QtWidgets.QLabel(self.frame_4)
        self.label_45.setObjectName("label_45")
        self.horizontalLayout_7.addWidget(self.label_45)
        self.cea_orchestrator = QtWidgets.QLineEdit(self.frame_4)
        self.cea_orchestrator.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_orchestrator.setObjectName("cea_orchestrator")
        self.horizontalLayout_7.addWidget(self.cea_orchestrator)
        self.verticalLayout_21.addWidget(self.frame_4)
        self.frame_11 = QtWidgets.QFrame(self.groupBox_28)
        self.frame_11.setStyleSheet("background-color: rgb(211, 248, 224);")
        self.frame_11.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_11.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_11.setObjectName("frame_11")
        self.horizontalLayout_22 = QtWidgets.QHBoxLayout(self.frame_11)
        self.horizontalLayout_22.setObjectName("horizontalLayout_22")
        self.label_32 = QtWidgets.QLabel(self.frame_11)
        self.label_32.setObjectName("label_32")
        self.horizontalLayout_22.addWidget(self.label_32)
        self.cea_reconstructed = QtWidgets.QLineEdit(self.frame_11)
        self.cea_reconstructed.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_reconstructed.setObjectName("cea_reconstructed")
        self.horizontalLayout_22.addWidget(self.cea_reconstructed)
        self.verticalLayout_21.addWidget(self.frame_11)
        self.frame_8 = QtWidgets.QFrame(self.groupBox_28)
        self.frame_8.setStyleSheet("background-color: rgb(211, 248, 224);")
        self.frame_8.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_8.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_8.setObjectName("frame_8")
        self.horizontalLayout_20 = QtWidgets.QHBoxLayout(self.frame_8)
        self.horizontalLayout_20.setObjectName("horizontalLayout_20")
        self.label_28 = QtWidgets.QLabel(self.frame_8)
        self.label_28.setObjectName("label_28")
        self.horizontalLayout_20.addWidget(self.label_28)
        self.cea_revised = QtWidgets.QLineEdit(self.frame_8)
        self.cea_revised.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_revised.setObjectName("cea_revised")
        self.horizontalLayout_20.addWidget(self.cea_revised)
        self.verticalLayout_21.addWidget(self.frame_8)
        self.gridLayout.addWidget(self.groupBox_28, 0, 2, 1, 1)
        self.verticalLayout_38.addWidget(self.groupBox_5)
        self.verticalLayout_13.addWidget(self.frame_20)
        self.line_3 = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        self.line_3.setLineWidth(1)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.verticalLayout_13.addWidget(self.line_3)
        self.frame_21 = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        self.frame_21.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_21.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_21.setObjectName("frame_21")
        self.verticalLayout_39 = QtWidgets.QVBoxLayout(self.frame_21)
        self.verticalLayout_39.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_39.setSpacing(0)
        self.verticalLayout_39.setObjectName("verticalLayout_39")
        self.label_96 = QtWidgets.QLabel(self.frame_21)
        self.label_96.setStyleSheet("background-color: rgb(204, 168, 161);")
        self.label_96.setObjectName("label_96")
        self.verticalLayout_39.addWidget(self.label_96)
        self.groupBox_31 = QtWidgets.QGroupBox(self.frame_21)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(230, 215, 211))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(230, 215, 211))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(230, 215, 211))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(230, 215, 211))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(230, 215, 211))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(230, 215, 211))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(230, 215, 211))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(230, 215, 211))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(230, 215, 211))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_31.setPalette(palette)
        self.groupBox_31.setAutoFillBackground(False)
        self.groupBox_31.setStyleSheet("background-color: rgb(230, 215, 211);")
        self.groupBox_31.setTitle("")
        self.groupBox_31.setObjectName("groupBox_31")
        self.horizontalLayout_25 = QtWidgets.QHBoxLayout(self.groupBox_31)
        self.horizontalLayout_25.setObjectName("horizontalLayout_25")
        self.cea_split_lyrics = QtWidgets.QCheckBox(self.groupBox_31)
        self.cea_split_lyrics.setObjectName("cea_split_lyrics")
        self.horizontalLayout_25.addWidget(self.cea_split_lyrics)
        self.groupBox_32 = QtWidgets.QGroupBox(self.groupBox_31)
        self.groupBox_32.setTitle("")
        self.groupBox_32.setObjectName("groupBox_32")
        self.verticalLayout_30 = QtWidgets.QVBoxLayout(self.groupBox_32)
        self.verticalLayout_30.setObjectName("verticalLayout_30")
        self.frame_13 = QtWidgets.QFrame(self.groupBox_32)
        self.frame_13.setStyleSheet("background-color: rgb(204, 168, 161);")
        self.frame_13.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_13.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_13.setObjectName("frame_13")
        self.horizontalLayout_26 = QtWidgets.QHBoxLayout(self.frame_13)
        self.horizontalLayout_26.setObjectName("horizontalLayout_26")
        self.label_50 = QtWidgets.QLabel(self.frame_13)
        self.label_50.setObjectName("label_50")
        self.horizontalLayout_26.addWidget(self.label_50)
        self.cea_lyrics_tag = QtWidgets.QLineEdit(self.frame_13)
        self.cea_lyrics_tag.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_lyrics_tag.setObjectName("cea_lyrics_tag")
        self.horizontalLayout_26.addWidget(self.cea_lyrics_tag)
        self.verticalLayout_30.addWidget(self.frame_13)
        self.frame_14 = QtWidgets.QFrame(self.groupBox_32)
        self.frame_14.setStyleSheet("background-color: rgb(204, 168, 161);")
        self.frame_14.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_14.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_14.setObjectName("frame_14")
        self.horizontalLayout_27 = QtWidgets.QHBoxLayout(self.frame_14)
        self.horizontalLayout_27.setObjectName("horizontalLayout_27")
        self.label_51 = QtWidgets.QLabel(self.frame_14)
        self.label_51.setObjectName("label_51")
        self.horizontalLayout_27.addWidget(self.label_51)
        self.cea_album_lyrics = QtWidgets.QLineEdit(self.frame_14)
        self.cea_album_lyrics.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_album_lyrics.setObjectName("cea_album_lyrics")
        self.horizontalLayout_27.addWidget(self.cea_album_lyrics)
        self.verticalLayout_30.addWidget(self.frame_14)
        self.frame_15 = QtWidgets.QFrame(self.groupBox_32)
        self.frame_15.setStyleSheet("background-color: rgb(204, 168, 161);")
        self.frame_15.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_15.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_15.setObjectName("frame_15")
        self.horizontalLayout_28 = QtWidgets.QHBoxLayout(self.frame_15)
        self.horizontalLayout_28.setObjectName("horizontalLayout_28")
        self.label_52 = QtWidgets.QLabel(self.frame_15)
        self.label_52.setObjectName("label_52")
        self.horizontalLayout_28.addWidget(self.label_52)
        self.cea_track_lyrics = QtWidgets.QLineEdit(self.frame_15)
        self.cea_track_lyrics.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_track_lyrics.setObjectName("cea_track_lyrics")
        self.horizontalLayout_28.addWidget(self.cea_track_lyrics)
        self.verticalLayout_30.addWidget(self.frame_15)
        self.horizontalLayout_25.addWidget(self.groupBox_32)
        self.verticalLayout_39.addWidget(self.groupBox_31)
        self.verticalLayout_13.addWidget(self.frame_21)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_13.addItem(spacerItem)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout_10.addWidget(self.scrollArea)
        self.tabWidget.addTab(self.Artists, "")
        self.Works = QtWidgets.QWidget()
        self.Works.setObjectName("Works")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.Works)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.scrollArea_3 = QtWidgets.QScrollArea(self.Works)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_3.sizePolicy().hasHeightForWidth())
        self.scrollArea_3.setSizePolicy(sizePolicy)
        self.scrollArea_3.setWidgetResizable(True)
        self.scrollArea_3.setObjectName("scrollArea_3")
        self.scrollAreaWidgetContents_3 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_3.setGeometry(QtCore.QRect(0, 0, 1084, 1022))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollAreaWidgetContents_3.sizePolicy().hasHeightForWidth())
        self.scrollAreaWidgetContents_3.setSizePolicy(sizePolicy)
        self.scrollAreaWidgetContents_3.setObjectName("scrollAreaWidgetContents_3")
        self.verticalLayout_25 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_3)
        self.verticalLayout_25.setObjectName("verticalLayout_25")
        self.frame_2 = QtWidgets.QFrame(self.scrollAreaWidgetContents_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_2.sizePolicy().hasHeightForWidth())
        self.frame_2.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.frame_2.setPalette(palette)
        self.frame_2.setAutoFillBackground(False)
        self.frame_2.setStyleSheet("background-color: rgb(255, 255, 222);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.use_cwp = QtWidgets.QCheckBox(self.frame_2)
        self.use_cwp.setObjectName("use_cwp")
        self.horizontalLayout_3.addWidget(self.use_cwp)
        self.cwp_collections = QtWidgets.QCheckBox(self.frame_2)
        self.cwp_collections.setObjectName("cwp_collections")
        self.horizontalLayout_3.addWidget(self.cwp_collections)
        self.use_cache = QtWidgets.QCheckBox(self.frame_2)
        self.use_cache.setObjectName("use_cache")
        self.horizontalLayout_3.addWidget(self.use_cache)
        self.verticalLayout_25.addWidget(self.frame_2)
        self.frame_26 = QtWidgets.QFrame(self.scrollAreaWidgetContents_3)
        self.frame_26.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_26.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_26.setObjectName("frame_26")
        self.verticalLayout_44 = QtWidgets.QVBoxLayout(self.frame_26)
        self.verticalLayout_44.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_44.setSpacing(0)
        self.verticalLayout_44.setObjectName("verticalLayout_44")
        self.label_99 = QtWidgets.QLabel(self.frame_26)
        self.label_99.setStyleSheet("background-color: rgb(205, 230, 255);")
        self.label_99.setObjectName("label_99")
        self.verticalLayout_44.addWidget(self.label_99)
        self.Style = QtWidgets.QGroupBox(self.frame_26)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Style.sizePolicy().hasHeightForWidth())
        self.Style.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(225, 240, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 240, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 240, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 240, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 240, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 240, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 240, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 240, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 240, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.Style.setPalette(palette)
        self.Style.setAutoFillBackground(False)
        self.Style.setStyleSheet("background-color: rgb(225, 240, 255);")
        self.Style.setTitle("")
        self.Style.setObjectName("Style")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.Style)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.groupBox_4 = QtWidgets.QGroupBox(self.Style)
        self.groupBox_4.setObjectName("groupBox_4")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.groupBox_4)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.cwp_titles = QtWidgets.QRadioButton(self.groupBox_4)
        self.cwp_titles.setObjectName("cwp_titles")
        self.verticalLayout_11.addWidget(self.cwp_titles)
        self.cwp_works = QtWidgets.QRadioButton(self.groupBox_4)
        self.cwp_works.setObjectName("cwp_works")
        self.verticalLayout_11.addWidget(self.cwp_works)
        self.cwp_extended = QtWidgets.QRadioButton(self.groupBox_4)
        self.cwp_extended.setObjectName("cwp_extended")
        self.verticalLayout_11.addWidget(self.cwp_extended)
        self.horizontalLayout.addWidget(self.groupBox_4)
        self.groupBox_16 = QtWidgets.QGroupBox(self.Style)
        self.groupBox_16.setEnabled(True)
        self.groupBox_16.setObjectName("groupBox_16")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.groupBox_16)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.cwp_hierarchical_works = QtWidgets.QRadioButton(self.groupBox_16)
        self.cwp_hierarchical_works.setObjectName("cwp_hierarchical_works")
        self.verticalLayout_6.addWidget(self.cwp_hierarchical_works)
        self.cwp_level0_works = QtWidgets.QRadioButton(self.groupBox_16)
        self.cwp_level0_works.setObjectName("cwp_level0_works")
        self.verticalLayout_6.addWidget(self.cwp_level0_works)
        self.horizontalLayout.addWidget(self.groupBox_16)
        self.verticalLayout_44.addWidget(self.Style)
        self.verticalLayout_25.addWidget(self.frame_26)
        self.frame_27 = QtWidgets.QFrame(self.scrollAreaWidgetContents_3)
        self.frame_27.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_27.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_27.setObjectName("frame_27")
        self.verticalLayout_45 = QtWidgets.QVBoxLayout(self.frame_27)
        self.verticalLayout_45.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_45.setSpacing(0)
        self.verticalLayout_45.setObjectName("verticalLayout_45")
        self.label_100 = QtWidgets.QLabel(self.frame_27)
        self.label_100.setStyleSheet("background-color: rgb(255, 186, 189);")
        self.label_100.setObjectName("label_100")
        self.verticalLayout_45.addWidget(self.label_100)
        self.groupBox_18 = QtWidgets.QGroupBox(self.frame_27)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 220, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 220, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 220, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 220, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 220, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 220, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 220, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 220, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 220, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_18.setPalette(palette)
        self.groupBox_18.setAutoFillBackground(False)
        self.groupBox_18.setStyleSheet("background-color: rgb(255, 220, 222);")
        self.groupBox_18.setTitle("")
        self.groupBox_18.setObjectName("groupBox_18")
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout(self.groupBox_18)
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        self.groupBox_19 = QtWidgets.QGroupBox(self.groupBox_18)
        self.groupBox_19.setObjectName("groupBox_19")
        self.verticalLayout_22 = QtWidgets.QVBoxLayout(self.groupBox_19)
        self.verticalLayout_22.setObjectName("verticalLayout_22")
        self.cwp_aliases = QtWidgets.QRadioButton(self.groupBox_19)
        self.cwp_aliases.setObjectName("cwp_aliases")
        self.verticalLayout_22.addWidget(self.cwp_aliases)
        self.cwp_no_aliases = QtWidgets.QRadioButton(self.groupBox_19)
        self.cwp_no_aliases.setObjectName("cwp_no_aliases")
        self.verticalLayout_22.addWidget(self.cwp_no_aliases)
        self.horizontalLayout_16.addWidget(self.groupBox_19)
        self.groupBox_20 = QtWidgets.QGroupBox(self.groupBox_18)
        self.groupBox_20.setStyleSheet("")
        self.groupBox_20.setObjectName("groupBox_20")
        self.horizontalLayout_17 = QtWidgets.QHBoxLayout(self.groupBox_20)
        self.horizontalLayout_17.setObjectName("horizontalLayout_17")
        self.groupBox_22 = QtWidgets.QGroupBox(self.groupBox_20)
        self.groupBox_22.setTitle("")
        self.groupBox_22.setObjectName("groupBox_22")
        self.verticalLayout_23 = QtWidgets.QVBoxLayout(self.groupBox_22)
        self.verticalLayout_23.setObjectName("verticalLayout_23")
        self.cwp_aliases_all = QtWidgets.QRadioButton(self.groupBox_22)
        self.cwp_aliases_all.setObjectName("cwp_aliases_all")
        self.verticalLayout_23.addWidget(self.cwp_aliases_all)
        self.cwp_aliases_greek = QtWidgets.QRadioButton(self.groupBox_22)
        self.cwp_aliases_greek.setObjectName("cwp_aliases_greek")
        self.verticalLayout_23.addWidget(self.cwp_aliases_greek)
        self.cwp_aliases_tagged = QtWidgets.QRadioButton(self.groupBox_22)
        self.cwp_aliases_tagged.setObjectName("cwp_aliases_tagged")
        self.verticalLayout_23.addWidget(self.cwp_aliases_tagged)
        self.horizontalLayout_17.addWidget(self.groupBox_22)
        self.groupBox_21 = QtWidgets.QGroupBox(self.groupBox_20)
        self.groupBox_21.setObjectName("groupBox_21")
        self.formLayout = QtWidgets.QFormLayout(self.groupBox_21)
        self.formLayout.setObjectName("formLayout")
        self.cwp_aliases_tags_all = QtWidgets.QRadioButton(self.groupBox_21)
        self.cwp_aliases_tags_all.setObjectName("cwp_aliases_tags_all")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.cwp_aliases_tags_all)
        self.cwp_aliases_tags_user = QtWidgets.QRadioButton(self.groupBox_21)
        self.cwp_aliases_tags_user.setObjectName("cwp_aliases_tags_user")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.cwp_aliases_tags_user)
        self.cwp_aliases_tag_text = QtWidgets.QLineEdit(self.groupBox_21)
        self.cwp_aliases_tag_text.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_aliases_tag_text.setObjectName("cwp_aliases_tag_text")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.SpanningRole, self.cwp_aliases_tag_text)
        self.horizontalLayout_17.addWidget(self.groupBox_21)
        self.horizontalLayout_16.addWidget(self.groupBox_20)
        self.verticalLayout_45.addWidget(self.groupBox_18)
        self.verticalLayout_25.addWidget(self.frame_27)
        self.frame_28 = QtWidgets.QFrame(self.scrollAreaWidgetContents_3)
        self.frame_28.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_28.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_28.setObjectName("frame_28")
        self.verticalLayout_46 = QtWidgets.QVBoxLayout(self.frame_28)
        self.verticalLayout_46.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_46.setSpacing(0)
        self.verticalLayout_46.setObjectName("verticalLayout_46")
        self.label_101 = QtWidgets.QLabel(self.frame_28)
        self.label_101.setStyleSheet("background-color: rgb(255, 194, 158);")
        self.label_101.setObjectName("label_101")
        self.verticalLayout_46.addWidget(self.label_101)
        self.Tags = QtWidgets.QGroupBox(self.frame_28)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Tags.sizePolicy().hasHeightForWidth())
        self.Tags.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 221, 201))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 221, 201))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 221, 201))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 221, 201))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 221, 201))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 221, 201))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 221, 201))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 221, 201))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 221, 201))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.Tags.setPalette(palette)
        self.Tags.setAutoFillBackground(False)
        self.Tags.setStyleSheet("background-color: rgb(255, 221, 201);")
        self.Tags.setTitle("")
        self.Tags.setObjectName("Tags")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.Tags)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.groupBox_2 = QtWidgets.QGroupBox(self.Tags)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 209, 182))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 209, 182))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 209, 182))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 209, 182))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 209, 182))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 209, 182))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 209, 182))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 209, 182))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 209, 182))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_2.setPalette(palette)
        self.groupBox_2.setAutoFillBackground(False)
        self.groupBox_2.setStyleSheet("background-color: rgb(255, 209, 182);")
        self.groupBox_2.setObjectName("groupBox_2")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.groupBox_2)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.label_40 = QtWidgets.QLabel(self.groupBox_2)
        self.label_40.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_40.setObjectName("label_40")
        self.verticalLayout_8.addWidget(self.label_40)
        self._8 = QtWidgets.QHBoxLayout()
        self._8.setContentsMargins(0, 0, 0, 0)
        self._8.setSpacing(6)
        self._8.setObjectName("_8")
        self.label_11 = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_11.sizePolicy().hasHeightForWidth())
        self.label_11.setSizePolicy(sizePolicy)
        self.label_11.setObjectName("label_11")
        self._8.addWidget(self.label_11)
        self.cwp_work_tag_multi = QtWidgets.QLineEdit(self.groupBox_2)
        self.cwp_work_tag_multi.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_work_tag_multi.setObjectName("cwp_work_tag_multi")
        self._8.addWidget(self.cwp_work_tag_multi)
        self.cwp_multi_work_sep = QtWidgets.QComboBox(self.groupBox_2)
        self.cwp_multi_work_sep.setEditable(True)
        self.cwp_multi_work_sep.setObjectName("cwp_multi_work_sep")
        self.cwp_multi_work_sep.addItem("")
        self.cwp_multi_work_sep.setItemText(0, "")
        self.cwp_multi_work_sep.addItem("")
        self.cwp_multi_work_sep.addItem("")
        self.cwp_multi_work_sep.addItem("")
        self.cwp_multi_work_sep.addItem("")
        self.cwp_multi_work_sep.addItem("")
        self._8.addWidget(self.cwp_multi_work_sep)
        self.verticalLayout_8.addLayout(self._8)
        self.label = QtWidgets.QLabel(self.groupBox_2)
        self.label.setObjectName("label")
        self.verticalLayout_8.addWidget(self.label)
        self._12 = QtWidgets.QHBoxLayout()
        self._12.setContentsMargins(0, 0, 0, 0)
        self._12.setSpacing(6)
        self._12.setObjectName("_12")
        self.label_15 = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_15.sizePolicy().hasHeightForWidth())
        self.label_15.setSizePolicy(sizePolicy)
        self.label_15.setObjectName("label_15")
        self._12.addWidget(self.label_15)
        self.cwp_work_tag_single = QtWidgets.QLineEdit(self.groupBox_2)
        self.cwp_work_tag_single.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_work_tag_single.setObjectName("cwp_work_tag_single")
        self._12.addWidget(self.cwp_work_tag_single)
        self.cwp_single_work_sep = QtWidgets.QComboBox(self.groupBox_2)
        self.cwp_single_work_sep.setEditable(True)
        self.cwp_single_work_sep.setObjectName("cwp_single_work_sep")
        self.cwp_single_work_sep.addItem("")
        self.cwp_single_work_sep.setItemText(0, "")
        self.cwp_single_work_sep.addItem("")
        self.cwp_single_work_sep.addItem("")
        self.cwp_single_work_sep.addItem("")
        self.cwp_single_work_sep.addItem("")
        self.cwp_single_work_sep.addItem("")
        self._12.addWidget(self.cwp_single_work_sep)
        self.verticalLayout_8.addLayout(self._12)
        self.label_2 = QtWidgets.QLabel(self.groupBox_2)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_8.addWidget(self.label_2)
        self._9 = QtWidgets.QHBoxLayout()
        self._9.setContentsMargins(0, 0, 0, 0)
        self._9.setSpacing(6)
        self._9.setObjectName("_9")
        self.label_12 = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_12.sizePolicy().hasHeightForWidth())
        self.label_12.setSizePolicy(sizePolicy)
        self.label_12.setObjectName("label_12")
        self._9.addWidget(self.label_12)
        self.cwp_top_tag = QtWidgets.QLineEdit(self.groupBox_2)
        self.cwp_top_tag.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_top_tag.setObjectName("cwp_top_tag")
        self._9.addWidget(self.cwp_top_tag)
        self.label_10 = QtWidgets.QLabel(self.groupBox_2)
        self.label_10.setObjectName("label_10")
        self._9.addWidget(self.label_10)
        self.verticalLayout_8.addLayout(self._9)
        self.verticalLayout_9.addWidget(self.groupBox_2)
        self.groupBox = QtWidgets.QGroupBox(self.Tags)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 209, 182))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 209, 182))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 209, 182))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 209, 182))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 209, 182))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 209, 182))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 209, 182))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 209, 182))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 209, 182))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox.setPalette(palette)
        self.groupBox.setAutoFillBackground(False)
        self.groupBox.setStyleSheet("background-color: rgb(255, 209, 182);")
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self._10 = QtWidgets.QHBoxLayout()
        self._10.setContentsMargins(0, 0, 0, 0)
        self._10.setSpacing(6)
        self._10.setObjectName("_10")
        self.label_13 = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_13.sizePolicy().hasHeightForWidth())
        self.label_13.setSizePolicy(sizePolicy)
        self.label_13.setObjectName("label_13")
        self._10.addWidget(self.label_13)
        self.cwp_movt_no_tag = QtWidgets.QLineEdit(self.groupBox)
        self.cwp_movt_no_tag.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_movt_no_tag.setObjectName("cwp_movt_no_tag")
        self._10.addWidget(self.cwp_movt_no_tag)
        self.cwp_movt_no_sep = QtWidgets.QComboBox(self.groupBox)
        self.cwp_movt_no_sep.setEditable(True)
        self.cwp_movt_no_sep.setObjectName("cwp_movt_no_sep")
        self.cwp_movt_no_sep.addItem("")
        self.cwp_movt_no_sep.setItemText(0, "")
        self.cwp_movt_no_sep.addItem("")
        self.cwp_movt_no_sep.addItem("")
        self.cwp_movt_no_sep.addItem("")
        self.cwp_movt_no_sep.addItem("")
        self.cwp_movt_no_sep.addItem("")
        self._10.addWidget(self.cwp_movt_no_sep)
        self.verticalLayout_7.addLayout(self._10)
        self.frame = QtWidgets.QFrame(self.groupBox)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label_49 = QtWidgets.QLabel(self.frame)
        self.label_49.setObjectName("label_49")
        self.horizontalLayout_5.addWidget(self.label_49)
        self.label_47 = QtWidgets.QLabel(self.frame)
        self.label_47.setObjectName("label_47")
        self.horizontalLayout_5.addWidget(self.label_47)
        self.label_48 = QtWidgets.QLabel(self.frame)
        self.label_48.setObjectName("label_48")
        self.horizontalLayout_5.addWidget(self.label_48)
        self.verticalLayout_7.addWidget(self.frame)
        self._11 = QtWidgets.QHBoxLayout()
        self._11.setContentsMargins(0, 0, 0, 0)
        self._11.setSpacing(6)
        self._11.setObjectName("_11")
        self.label_14 = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_14.sizePolicy().hasHeightForWidth())
        self.label_14.setSizePolicy(sizePolicy)
        self.label_14.setObjectName("label_14")
        self._11.addWidget(self.label_14)
        self.cwp_movt_tag_exc = QtWidgets.QLineEdit(self.groupBox)
        self.cwp_movt_tag_exc.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_movt_tag_exc.setObjectName("cwp_movt_tag_exc")
        self._11.addWidget(self.cwp_movt_tag_exc)
        self.cwp_movt_tag_exc1 = QtWidgets.QLineEdit(self.groupBox)
        self.cwp_movt_tag_exc1.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_movt_tag_exc1.setObjectName("cwp_movt_tag_exc1")
        self._11.addWidget(self.cwp_movt_tag_exc1)
        self.label_39 = QtWidgets.QLabel(self.groupBox)
        self.label_39.setObjectName("label_39")
        self._11.addWidget(self.label_39)
        self.verticalLayout_7.addLayout(self._11)
        self._6 = QtWidgets.QHBoxLayout()
        self._6.setContentsMargins(0, 0, 0, 0)
        self._6.setSpacing(6)
        self._6.setObjectName("_6")
        self.label_9 = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_9.sizePolicy().hasHeightForWidth())
        self.label_9.setSizePolicy(sizePolicy)
        self.label_9.setObjectName("label_9")
        self._6.addWidget(self.label_9)
        self.cwp_movt_tag_inc = QtWidgets.QLineEdit(self.groupBox)
        self.cwp_movt_tag_inc.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_movt_tag_inc.setObjectName("cwp_movt_tag_inc")
        self._6.addWidget(self.cwp_movt_tag_inc)
        self.cwp_movt_tag_inc1 = QtWidgets.QLineEdit(self.groupBox)
        self.cwp_movt_tag_inc1.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_movt_tag_inc1.setObjectName("cwp_movt_tag_inc1")
        self._6.addWidget(self.cwp_movt_tag_inc1)
        self.label_37 = QtWidgets.QLabel(self.groupBox)
        self.label_37.setObjectName("label_37")
        self._6.addWidget(self.label_37)
        self.verticalLayout_7.addLayout(self._6)
        self.verticalLayout_9.addWidget(self.groupBox)
        self.verticalLayout_46.addWidget(self.Tags)
        self.verticalLayout_25.addWidget(self.frame_28)
        self.frame_29 = QtWidgets.QFrame(self.scrollAreaWidgetContents_3)
        self.frame_29.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_29.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_29.setObjectName("frame_29")
        self.verticalLayout_47 = QtWidgets.QVBoxLayout(self.frame_29)
        self.verticalLayout_47.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_47.setSpacing(0)
        self.verticalLayout_47.setObjectName("verticalLayout_47")
        self.label_102 = QtWidgets.QLabel(self.frame_29)
        self.label_102.setStyleSheet("background-color: rgb(195, 168, 179);")
        self.label_102.setObjectName("label_102")
        self.verticalLayout_47.addWidget(self.label_102)
        self.groupBox_12 = QtWidgets.QGroupBox(self.frame_29)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(221, 209, 221))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(221, 209, 221))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(221, 209, 221))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(221, 209, 221))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(221, 209, 221))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(221, 209, 221))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(221, 209, 221))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(221, 209, 221))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(221, 209, 221))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_12.setPalette(palette)
        self.groupBox_12.setAutoFillBackground(False)
        self.groupBox_12.setStyleSheet("background-color: rgb(221, 209, 221);")
        self.groupBox_12.setTitle("")
        self.groupBox_12.setObjectName("groupBox_12")
        self.verticalLayout_19 = QtWidgets.QVBoxLayout(self.groupBox_12)
        self.verticalLayout_19.setObjectName("verticalLayout_19")
        self.label_20 = QtWidgets.QLabel(self.groupBox_12)
        self.label_20.setStyleSheet("font: 75 8pt \"MS Shell Dlg 2\";\n"
"text-decoration: underline;")
        self.label_20.setObjectName("label_20")
        self.verticalLayout_19.addWidget(self.label_20)
        self.groupBox_13 = QtWidgets.QGroupBox(self.groupBox_12)
        self.groupBox_13.setObjectName("groupBox_13")
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout(self.groupBox_13)
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.cwp_partial = QtWidgets.QCheckBox(self.groupBox_13)
        self.cwp_partial.setObjectName("cwp_partial")
        self.horizontalLayout_13.addWidget(self.cwp_partial)
        self.cwp_partial_text = QtWidgets.QLineEdit(self.groupBox_13)
        self.cwp_partial_text.setEnabled(False)
        self.cwp_partial_text.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_partial_text.setObjectName("cwp_partial_text")
        self.horizontalLayout_13.addWidget(self.cwp_partial_text)
        self.verticalLayout_19.addWidget(self.groupBox_13)
        self.groupBox_14 = QtWidgets.QGroupBox(self.groupBox_12)
        self.groupBox_14.setObjectName("groupBox_14")
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout(self.groupBox_14)
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.cwp_arrangements = QtWidgets.QCheckBox(self.groupBox_14)
        self.cwp_arrangements.setObjectName("cwp_arrangements")
        self.horizontalLayout_15.addWidget(self.cwp_arrangements)
        self.cwp_arrangements_text = QtWidgets.QLineEdit(self.groupBox_14)
        self.cwp_arrangements_text.setEnabled(False)
        self.cwp_arrangements_text.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_arrangements_text.setObjectName("cwp_arrangements_text")
        self.horizontalLayout_15.addWidget(self.cwp_arrangements_text)
        self.verticalLayout_19.addWidget(self.groupBox_14)
        self.groupBox_15 = QtWidgets.QGroupBox(self.groupBox_12)
        self.groupBox_15.setObjectName("groupBox_15")
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout(self.groupBox_15)
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.cwp_medley = QtWidgets.QCheckBox(self.groupBox_15)
        self.cwp_medley.setObjectName("cwp_medley")
        self.horizontalLayout_12.addWidget(self.cwp_medley)
        self.cwp_medley_text = QtWidgets.QLineEdit(self.groupBox_15)
        self.cwp_medley_text.setEnabled(False)
        self.cwp_medley_text.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_medley_text.setObjectName("cwp_medley_text")
        self.horizontalLayout_12.addWidget(self.cwp_medley_text)
        self.verticalLayout_19.addWidget(self.groupBox_15)
        self.verticalLayout_47.addWidget(self.groupBox_12)
        self.verticalLayout_25.addWidget(self.frame_29)
        self.frame_30 = QtWidgets.QFrame(self.scrollAreaWidgetContents_3)
        self.frame_30.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_30.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_30.setObjectName("frame_30")
        self.verticalLayout_48 = QtWidgets.QVBoxLayout(self.frame_30)
        self.verticalLayout_48.setContentsMargins(0, 0, -1, 0)
        self.verticalLayout_48.setSpacing(0)
        self.verticalLayout_48.setObjectName("verticalLayout_48")
        self.label_103 = QtWidgets.QLabel(self.frame_30)
        self.label_103.setStyleSheet("background-color: rgb(182, 182, 62);")
        self.label_103.setObjectName("label_103")
        self.verticalLayout_48.addWidget(self.label_103)
        self.groupBox_17 = QtWidgets.QGroupBox(self.frame_30)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(227, 227, 143))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(227, 227, 143))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(227, 227, 143))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(227, 227, 143))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(227, 227, 143))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(227, 227, 143))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(227, 227, 143))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(227, 227, 143))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(227, 227, 143))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_17.setPalette(palette)
        self.groupBox_17.setAutoFillBackground(False)
        self.groupBox_17.setStyleSheet("background-color: rgb(227, 227, 143);")
        self.groupBox_17.setTitle("")
        self.groupBox_17.setObjectName("groupBox_17")
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout(self.groupBox_17)
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.cwp_use_sk = QtWidgets.QCheckBox(self.groupBox_17)
        self.cwp_use_sk.setObjectName("cwp_use_sk")
        self.horizontalLayout_14.addWidget(self.cwp_use_sk)
        self.cwp_write_sk = QtWidgets.QCheckBox(self.groupBox_17)
        self.cwp_write_sk.setObjectName("cwp_write_sk")
        self.horizontalLayout_14.addWidget(self.cwp_write_sk)
        self.verticalLayout_48.addWidget(self.groupBox_17)
        self.verticalLayout_25.addWidget(self.frame_30)
        self.label_82 = QtWidgets.QLabel(self.scrollAreaWidgetContents_3)
        self.label_82.setObjectName("label_82")
        self.verticalLayout_25.addWidget(self.label_82)
        self.scrollArea_3.setWidget(self.scrollAreaWidgetContents_3)
        self.verticalLayout_4.addWidget(self.scrollArea_3)
        self.tabWidget.addTab(self.Works, "")
        self.Genres = QtWidgets.QWidget()
        self.Genres.setObjectName("Genres")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.Genres)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.scrollArea_6 = QtWidgets.QScrollArea(self.Genres)
        self.scrollArea_6.setWidgetResizable(True)
        self.scrollArea_6.setObjectName("scrollArea_6")
        self.scrollAreaWidgetContents_5 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_5.setGeometry(QtCore.QRect(0, 0, 1084, 1310))
        self.scrollAreaWidgetContents_5.setObjectName("scrollAreaWidgetContents_5")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_5)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.frame_34 = QtWidgets.QFrame(self.scrollAreaWidgetContents_5)
        self.frame_34.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_34.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_34.setObjectName("frame_34")
        self.verticalLayout_52 = QtWidgets.QVBoxLayout(self.frame_34)
        self.verticalLayout_52.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_52.setSpacing(0)
        self.verticalLayout_52.setObjectName("verticalLayout_52")
        self.label_104 = QtWidgets.QLabel(self.frame_34)
        self.label_104.setStyleSheet("background-color: rgb(138, 222, 187);")
        self.label_104.setObjectName("label_104")
        self.verticalLayout_52.addWidget(self.label_104)
        self.groupBox_35 = QtWidgets.QGroupBox(self.frame_34)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_35.setPalette(palette)
        self.groupBox_35.setAutoFillBackground(False)
        self.groupBox_35.setStyleSheet("background-color: rgb(207, 236, 225);")
        self.groupBox_35.setTitle("")
        self.groupBox_35.setObjectName("groupBox_35")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.groupBox_35)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.label_73 = QtWidgets.QLabel(self.groupBox_35)
        self.label_73.setObjectName("label_73")
        self.gridLayout_5.addWidget(self.label_73, 0, 0, 1, 1)
        self.label_74 = QtWidgets.QLabel(self.groupBox_35)
        self.label_74.setObjectName("label_74")
        self.gridLayout_5.addWidget(self.label_74, 0, 2, 1, 1)
        self.cwp_subgenre_tag = QtWidgets.QLineEdit(self.groupBox_35)
        self.cwp_subgenre_tag.setStyleSheet("background-color: rgb(0, 236, 173);")
        self.cwp_subgenre_tag.setObjectName("cwp_subgenre_tag")
        self.gridLayout_5.addWidget(self.cwp_subgenre_tag, 0, 3, 1, 1)
        self.cwp_genre_tag = QtWidgets.QLineEdit(self.groupBox_35)
        self.cwp_genre_tag.setStyleSheet("background-color: rgb(0, 236, 173);")
        self.cwp_genre_tag.setObjectName("cwp_genre_tag")
        self.gridLayout_5.addWidget(self.cwp_genre_tag, 0, 1, 1, 1)
        self.verticalLayout_52.addWidget(self.groupBox_35)
        self.gridLayout_13.addWidget(self.frame_34, 2, 0, 1, 1)
        self.frame_33 = QtWidgets.QFrame(self.scrollAreaWidgetContents_5)
        self.frame_33.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_33.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_33.setObjectName("frame_33")
        self.verticalLayout_51 = QtWidgets.QVBoxLayout(self.frame_33)
        self.verticalLayout_51.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_51.setSpacing(0)
        self.verticalLayout_51.setObjectName("verticalLayout_51")
        self.label_107 = QtWidgets.QLabel(self.frame_33)
        self.label_107.setStyleSheet("background-color: rgb(138, 222, 187);")
        self.label_107.setObjectName("label_107")
        self.verticalLayout_51.addWidget(self.label_107)
        self.groupBox_38 = QtWidgets.QGroupBox(self.frame_33)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_38.setPalette(palette)
        self.groupBox_38.setAutoFillBackground(False)
        self.groupBox_38.setStyleSheet("background-color: rgb(207, 236, 225);")
        self.groupBox_38.setTitle("")
        self.groupBox_38.setObjectName("groupBox_38")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.groupBox_38)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.cwp_genres_classical_exclude = QtWidgets.QCheckBox(self.groupBox_38)
        self.cwp_genres_classical_exclude.setObjectName("cwp_genres_classical_exclude")
        self.gridLayout_3.addWidget(self.cwp_genres_classical_exclude, 1, 3, 1, 2)
        self.cwp_genres_classical_selective = QtWidgets.QRadioButton(self.groupBox_38)
        self.cwp_genres_classical_selective.setObjectName("cwp_genres_classical_selective")
        self.gridLayout_3.addWidget(self.cwp_genres_classical_selective, 0, 2, 1, 2)
        self.cwp_muso_classical = QtWidgets.QCheckBox(self.groupBox_38)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.cwp_muso_classical.setFont(font)
        self.cwp_muso_classical.setObjectName("cwp_muso_classical")
        self.gridLayout_3.addWidget(self.cwp_muso_classical, 1, 0, 1, 3)
        self.cwp_genres_classical_all = QtWidgets.QRadioButton(self.groupBox_38)
        self.cwp_genres_classical_all.setObjectName("cwp_genres_classical_all")
        self.gridLayout_3.addWidget(self.cwp_genres_classical_all, 0, 0, 1, 2)
        self.label_64 = QtWidgets.QLabel(self.groupBox_38)
        self.label_64.setObjectName("label_64")
        self.gridLayout_3.addWidget(self.label_64, 3, 0, 1, 1)
        self.cwp_genres_flag_text = QtWidgets.QLineEdit(self.groupBox_38)
        self.cwp_genres_flag_text.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_genres_flag_text.setObjectName("cwp_genres_flag_text")
        self.gridLayout_3.addWidget(self.cwp_genres_flag_text, 3, 1, 1, 3)
        self.label_71 = QtWidgets.QLabel(self.groupBox_38)
        self.label_71.setObjectName("label_71")
        self.gridLayout_3.addWidget(self.label_71, 3, 4, 1, 1)
        self.cwp_genres_flag_tag = QtWidgets.QLineEdit(self.groupBox_38)
        self.cwp_genres_flag_tag.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_genres_flag_tag.setObjectName("cwp_genres_flag_tag")
        self.gridLayout_3.addWidget(self.cwp_genres_flag_tag, 3, 5, 1, 1)
        self.cwp_genres_arranger_as_composer = QtWidgets.QCheckBox(self.groupBox_38)
        self.cwp_genres_arranger_as_composer.setObjectName("cwp_genres_arranger_as_composer")
        self.gridLayout_3.addWidget(self.cwp_genres_arranger_as_composer, 2, 0, 1, 1)
        self.verticalLayout_51.addWidget(self.groupBox_38)
        self.gridLayout_13.addWidget(self.frame_33, 5, 0, 1, 1)
        self.label_81 = QtWidgets.QLabel(self.scrollAreaWidgetContents_5)
        self.label_81.setObjectName("label_81")
        self.gridLayout_13.addWidget(self.label_81, 8, 0, 1, 1)
        self.cwp_use_muso_refdb = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_5)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.cwp_use_muso_refdb.setFont(font)
        self.cwp_use_muso_refdb.setObjectName("cwp_use_muso_refdb")
        self.gridLayout_13.addWidget(self.cwp_use_muso_refdb, 1, 0, 1, 1)
        self.frame_35 = QtWidgets.QFrame(self.scrollAreaWidgetContents_5)
        self.frame_35.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_35.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_35.setObjectName("frame_35")
        self.verticalLayout_53 = QtWidgets.QVBoxLayout(self.frame_35)
        self.verticalLayout_53.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_53.setSpacing(0)
        self.verticalLayout_53.setObjectName("verticalLayout_53")
        self.label_108 = QtWidgets.QLabel(self.frame_35)
        self.label_108.setStyleSheet("background-color: rgb(225, 168, 171);")
        self.label_108.setObjectName("label_108")
        self.verticalLayout_53.addWidget(self.label_108)
        self.groupBox_39 = QtWidgets.QGroupBox(self.frame_35)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(245, 224, 226))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 224, 226))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 224, 226))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 224, 226))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 224, 226))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 224, 226))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 224, 226))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 224, 226))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 224, 226))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_39.setPalette(palette)
        self.groupBox_39.setAutoFillBackground(False)
        self.groupBox_39.setStyleSheet("background-color: rgb(245, 224, 226);")
        self.groupBox_39.setTitle("")
        self.groupBox_39.setObjectName("groupBox_39")
        self.verticalLayout_34 = QtWidgets.QVBoxLayout(self.groupBox_39)
        self.verticalLayout_34.setObjectName("verticalLayout_34")
        self.groupBox_45 = QtWidgets.QGroupBox(self.groupBox_39)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(245, 210, 213))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 210, 213))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 210, 213))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 210, 213))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 210, 213))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 210, 213))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 210, 213))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 210, 213))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 210, 213))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_45.setPalette(palette)
        self.groupBox_45.setAutoFillBackground(False)
        self.groupBox_45.setStyleSheet("background-color: rgb(245, 210, 213);")
        self.groupBox_45.setObjectName("groupBox_45")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.groupBox_45)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.label_66 = QtWidgets.QLabel(self.groupBox_45)
        self.label_66.setObjectName("label_66")
        self.gridLayout_11.addWidget(self.label_66, 0, 0, 1, 1)
        self.cwp_instruments_tag = QtWidgets.QLineEdit(self.groupBox_45)
        self.cwp_instruments_tag.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_instruments_tag.setObjectName("cwp_instruments_tag")
        self.gridLayout_11.addWidget(self.cwp_instruments_tag, 0, 1, 1, 1)
        self.groupBox_40 = QtWidgets.QGroupBox(self.groupBox_45)
        self.groupBox_40.setObjectName("groupBox_40")
        self.horizontalLayout_33 = QtWidgets.QHBoxLayout(self.groupBox_40)
        self.horizontalLayout_33.setObjectName("horizontalLayout_33")
        self.cwp_instruments_MB_names = QtWidgets.QCheckBox(self.groupBox_40)
        self.cwp_instruments_MB_names.setObjectName("cwp_instruments_MB_names")
        self.horizontalLayout_33.addWidget(self.cwp_instruments_MB_names)
        self.cwp_instruments_credited_names = QtWidgets.QCheckBox(self.groupBox_40)
        self.cwp_instruments_credited_names.setObjectName("cwp_instruments_credited_names")
        self.horizontalLayout_33.addWidget(self.cwp_instruments_credited_names)
        self.gridLayout_11.addWidget(self.groupBox_40, 1, 0, 1, 2)
        self.verticalLayout_34.addWidget(self.groupBox_45)
        self.groupBox_47 = QtWidgets.QGroupBox(self.groupBox_39)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(245, 210, 213))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 210, 213))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 210, 213))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 210, 213))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 210, 213))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 210, 213))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 210, 213))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 210, 213))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 210, 213))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_47.setPalette(palette)
        self.groupBox_47.setAutoFillBackground(False)
        self.groupBox_47.setStyleSheet("background-color: rgb(245, 210, 213);")
        self.groupBox_47.setObjectName("groupBox_47")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.groupBox_47)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.label_72 = QtWidgets.QLabel(self.groupBox_47)
        self.label_72.setObjectName("label_72")
        self.gridLayout_4.addWidget(self.label_72, 0, 0, 1, 1)
        self.cwp_key_tag = QtWidgets.QLineEdit(self.groupBox_47)
        self.cwp_key_tag.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_key_tag.setObjectName("cwp_key_tag")
        self.gridLayout_4.addWidget(self.cwp_key_tag, 0, 2, 1, 1)
        self.groupBox_52 = QtWidgets.QGroupBox(self.groupBox_47)
        self.groupBox_52.setObjectName("groupBox_52")
        self.horizontalLayout_35 = QtWidgets.QHBoxLayout(self.groupBox_52)
        self.horizontalLayout_35.setObjectName("horizontalLayout_35")
        self.cwp_key_never_include = QtWidgets.QRadioButton(self.groupBox_52)
        self.cwp_key_never_include.setObjectName("cwp_key_never_include")
        self.horizontalLayout_35.addWidget(self.cwp_key_never_include)
        self.cwp_key_contingent_include = QtWidgets.QRadioButton(self.groupBox_52)
        self.cwp_key_contingent_include.setObjectName("cwp_key_contingent_include")
        self.horizontalLayout_35.addWidget(self.cwp_key_contingent_include)
        self.cwp_key_include = QtWidgets.QRadioButton(self.groupBox_52)
        self.cwp_key_include.setObjectName("cwp_key_include")
        self.horizontalLayout_35.addWidget(self.cwp_key_include)
        self.gridLayout_4.addWidget(self.groupBox_52, 1, 0, 1, 2)
        self.verticalLayout_34.addWidget(self.groupBox_47)
        self.verticalLayout_53.addWidget(self.groupBox_39)
        self.gridLayout_13.addWidget(self.frame_35, 6, 0, 1, 1)
        self.frame_32 = QtWidgets.QFrame(self.scrollAreaWidgetContents_5)
        self.frame_32.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_32.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_32.setObjectName("frame_32")
        self.verticalLayout_50 = QtWidgets.QVBoxLayout(self.frame_32)
        self.verticalLayout_50.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_50.setSpacing(0)
        self.verticalLayout_50.setObjectName("verticalLayout_50")
        self.label_106 = QtWidgets.QLabel(self.frame_32)
        self.label_106.setStyleSheet("background-color: rgb(138, 222, 187);")
        self.label_106.setObjectName("label_106")
        self.verticalLayout_50.addWidget(self.label_106)
        self.cwp_genres_filter = QtWidgets.QCheckBox(self.frame_32)
        self.cwp_genres_filter.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.cwp_genres_filter.setStyleSheet("background-color: rgb(138, 222, 187);")
        self.cwp_genres_filter.setObjectName("cwp_genres_filter")
        self.verticalLayout_50.addWidget(self.cwp_genres_filter)
        self.groupBox_36 = QtWidgets.QGroupBox(self.frame_32)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_36.setPalette(palette)
        self.groupBox_36.setAutoFillBackground(False)
        self.groupBox_36.setStyleSheet("background-color: rgb(207, 236, 225);")
        self.groupBox_36.setTitle("")
        self.groupBox_36.setObjectName("groupBox_36")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.groupBox_36)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.groupBox_43 = QtWidgets.QGroupBox(self.groupBox_36)
        self.groupBox_43.setStyleSheet("background-color: rgb(190, 236, 219);")
        self.groupBox_43.setObjectName("groupBox_43")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.groupBox_43)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.label_60 = QtWidgets.QLabel(self.groupBox_43)
        self.label_60.setObjectName("label_60")
        self.gridLayout_9.addWidget(self.label_60, 0, 0, 1, 1)
        self.cwp_genres_classical_main = QtWidgets.QPlainTextEdit(self.groupBox_43)
        self.cwp_genres_classical_main.setMaximumSize(QtCore.QSize(16777215, 50))
        self.cwp_genres_classical_main.setStyleSheet("background-color: rgb(156, 250, 211);")
        self.cwp_genres_classical_main.setObjectName("cwp_genres_classical_main")
        self.gridLayout_9.addWidget(self.cwp_genres_classical_main, 0, 1, 3, 1)
        self.label_75 = QtWidgets.QLabel(self.groupBox_43)
        self.label_75.setObjectName("label_75")
        self.gridLayout_9.addWidget(self.label_75, 0, 2, 1, 1)
        self.cwp_genres_classical_sub = QtWidgets.QPlainTextEdit(self.groupBox_43)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cwp_genres_classical_sub.sizePolicy().hasHeightForWidth())
        self.cwp_genres_classical_sub.setSizePolicy(sizePolicy)
        self.cwp_genres_classical_sub.setMaximumSize(QtCore.QSize(16777215, 50))
        self.cwp_genres_classical_sub.setStyleSheet("background-color: rgb(156, 250, 211);")
        self.cwp_genres_classical_sub.setObjectName("cwp_genres_classical_sub")
        self.gridLayout_9.addWidget(self.cwp_genres_classical_sub, 0, 3, 3, 1)
        self.cwp_muso_genres = QtWidgets.QCheckBox(self.groupBox_43)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.cwp_muso_genres.setFont(font)
        self.cwp_muso_genres.setObjectName("cwp_muso_genres")
        self.gridLayout_9.addWidget(self.cwp_muso_genres, 1, 0, 1, 1)
        self.gridLayout_6.addWidget(self.groupBox_43, 2, 0, 1, 2)
        self.groupBox_44 = QtWidgets.QGroupBox(self.groupBox_36)
        self.groupBox_44.setStyleSheet("background-color: rgb(190, 236, 219);")
        self.groupBox_44.setObjectName("groupBox_44")
        self.horizontalLayout_36 = QtWidgets.QHBoxLayout(self.groupBox_44)
        self.horizontalLayout_36.setObjectName("horizontalLayout_36")
        self.label_62 = QtWidgets.QLabel(self.groupBox_44)
        self.label_62.setObjectName("label_62")
        self.horizontalLayout_36.addWidget(self.label_62)
        self.cwp_genres_other_main = QtWidgets.QPlainTextEdit(self.groupBox_44)
        self.cwp_genres_other_main.setMaximumSize(QtCore.QSize(16777215, 50))
        self.cwp_genres_other_main.setStyleSheet("background-color: rgb(156, 250, 211);")
        self.cwp_genres_other_main.setObjectName("cwp_genres_other_main")
        self.horizontalLayout_36.addWidget(self.cwp_genres_other_main)
        self.label_76 = QtWidgets.QLabel(self.groupBox_44)
        self.label_76.setObjectName("label_76")
        self.horizontalLayout_36.addWidget(self.label_76)
        self.cwp_genres_other_sub = QtWidgets.QPlainTextEdit(self.groupBox_44)
        self.cwp_genres_other_sub.setMaximumSize(QtCore.QSize(16777215, 50))
        self.cwp_genres_other_sub.setStyleSheet("background-color: rgb(156, 250, 211);")
        self.cwp_genres_other_sub.setObjectName("cwp_genres_other_sub")
        self.horizontalLayout_36.addWidget(self.cwp_genres_other_sub)
        self.cwp_genres_other_main.raise_()
        self.cwp_genres_other_sub.raise_()
        self.label_62.raise_()
        self.label_76.raise_()
        self.gridLayout_6.addWidget(self.groupBox_44, 3, 0, 1, 2)
        self.label_80 = QtWidgets.QLabel(self.groupBox_36)
        self.label_80.setObjectName("label_80")
        self.gridLayout_6.addWidget(self.label_80, 4, 0, 1, 1)
        self.cwp_genres_default = QtWidgets.QLineEdit(self.groupBox_36)
        self.cwp_genres_default.setStyleSheet("background-color: rgb(156, 250, 211);")
        self.cwp_genres_default.setObjectName("cwp_genres_default")
        self.gridLayout_6.addWidget(self.cwp_genres_default, 4, 1, 1, 1)
        self.label_77 = QtWidgets.QLabel(self.groupBox_36)
        self.label_77.setObjectName("label_77")
        self.gridLayout_6.addWidget(self.label_77, 0, 0, 1, 2)
        self.label_78 = QtWidgets.QLabel(self.groupBox_36)
        self.label_78.setObjectName("label_78")
        self.gridLayout_6.addWidget(self.label_78, 1, 0, 1, 1)
        self.verticalLayout_50.addWidget(self.groupBox_36)
        self.gridLayout_13.addWidget(self.frame_32, 4, 0, 1, 1)
        self.frame_31 = QtWidgets.QFrame(self.scrollAreaWidgetContents_5)
        self.frame_31.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_31.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_31.setObjectName("frame_31")
        self.verticalLayout_49 = QtWidgets.QVBoxLayout(self.frame_31)
        self.verticalLayout_49.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_49.setSpacing(0)
        self.verticalLayout_49.setObjectName("verticalLayout_49")
        self.label_105 = QtWidgets.QLabel(self.frame_31)
        self.label_105.setStyleSheet("background-color: rgb(138, 222, 187);")
        self.label_105.setObjectName("label_105")
        self.verticalLayout_49.addWidget(self.label_105)
        self.groupBox_37 = QtWidgets.QGroupBox(self.frame_31)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 236, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_37.setPalette(palette)
        self.groupBox_37.setAutoFillBackground(False)
        self.groupBox_37.setStyleSheet("background-color: rgb(207, 236, 225);")
        self.groupBox_37.setTitle("")
        self.groupBox_37.setObjectName("groupBox_37")
        self.horizontalLayout_32 = QtWidgets.QHBoxLayout(self.groupBox_37)
        self.horizontalLayout_32.setObjectName("horizontalLayout_32")
        self.cwp_genres_use_file = QtWidgets.QCheckBox(self.groupBox_37)
        self.cwp_genres_use_file.setObjectName("cwp_genres_use_file")
        self.horizontalLayout_32.addWidget(self.cwp_genres_use_file)
        self.cwp_genres_use_folks = QtWidgets.QCheckBox(self.groupBox_37)
        self.cwp_genres_use_folks.setObjectName("cwp_genres_use_folks")
        self.horizontalLayout_32.addWidget(self.cwp_genres_use_folks)
        self.cwp_genres_use_worktype = QtWidgets.QCheckBox(self.groupBox_37)
        self.cwp_genres_use_worktype.setObjectName("cwp_genres_use_worktype")
        self.horizontalLayout_32.addWidget(self.cwp_genres_use_worktype)
        self.cwp_genres_infer = QtWidgets.QCheckBox(self.groupBox_37)
        self.cwp_genres_infer.setObjectName("cwp_genres_infer")
        self.horizontalLayout_32.addWidget(self.cwp_genres_infer)
        self.verticalLayout_49.addWidget(self.groupBox_37)
        self.gridLayout_13.addWidget(self.frame_31, 3, 0, 1, 1)
        self.frame_36 = QtWidgets.QFrame(self.scrollAreaWidgetContents_5)
        self.frame_36.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_36.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_36.setObjectName("frame_36")
        self.verticalLayout_54 = QtWidgets.QVBoxLayout(self.frame_36)
        self.verticalLayout_54.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_54.setSpacing(0)
        self.verticalLayout_54.setObjectName("verticalLayout_54")
        self.label_109 = QtWidgets.QLabel(self.frame_36)
        self.label_109.setStyleSheet("background-color: rgb(195, 183, 213);")
        self.label_109.setObjectName("label_109")
        self.verticalLayout_54.addWidget(self.label_109)
        self.groupBox_41 = QtWidgets.QGroupBox(self.frame_36)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(229, 224, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 224, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 224, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 224, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 224, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 224, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 224, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 224, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 224, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_41.setPalette(palette)
        self.groupBox_41.setAutoFillBackground(False)
        self.groupBox_41.setStyleSheet("background-color: rgb(229, 224, 236);")
        self.groupBox_41.setTitle("")
        self.groupBox_41.setObjectName("groupBox_41")
        self.verticalLayout_32 = QtWidgets.QVBoxLayout(self.groupBox_41)
        self.verticalLayout_32.setObjectName("verticalLayout_32")
        self.groupBox_48 = QtWidgets.QGroupBox(self.groupBox_41)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(222, 212, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 212, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 212, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 212, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 212, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 212, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 212, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 212, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 212, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_48.setPalette(palette)
        self.groupBox_48.setAutoFillBackground(False)
        self.groupBox_48.setStyleSheet("background-color: rgb(222, 212, 236);")
        self.groupBox_48.setObjectName("groupBox_48")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.groupBox_48)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.groupBox_42 = QtWidgets.QGroupBox(self.groupBox_48)
        self.groupBox_42.setObjectName("groupBox_42")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.groupBox_42)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.cwp_workdate_source_composed = QtWidgets.QCheckBox(self.groupBox_42)
        self.cwp_workdate_source_composed.setObjectName("cwp_workdate_source_composed")
        self.gridLayout_7.addWidget(self.cwp_workdate_source_composed, 0, 0, 1, 1)
        self.cwp_workdate_source_published = QtWidgets.QCheckBox(self.groupBox_42)
        self.cwp_workdate_source_published.setObjectName("cwp_workdate_source_published")
        self.gridLayout_7.addWidget(self.cwp_workdate_source_published, 0, 1, 1, 1)
        self.cwp_workdate_source_premiered = QtWidgets.QCheckBox(self.groupBox_42)
        self.cwp_workdate_source_premiered.setObjectName("cwp_workdate_source_premiered")
        self.gridLayout_7.addWidget(self.cwp_workdate_source_premiered, 0, 2, 1, 1)
        self.line_9 = QtWidgets.QFrame(self.groupBox_42)
        self.line_9.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_9.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_9.setObjectName("line_9")
        self.gridLayout_7.addWidget(self.line_9, 1, 0, 1, 3)
        self.cwp_workdate_use_first = QtWidgets.QRadioButton(self.groupBox_42)
        self.cwp_workdate_use_first.setObjectName("cwp_workdate_use_first")
        self.gridLayout_7.addWidget(self.cwp_workdate_use_first, 2, 0, 1, 1)
        self.cwp_workdate_use_all = QtWidgets.QRadioButton(self.groupBox_42)
        self.cwp_workdate_use_all.setObjectName("cwp_workdate_use_all")
        self.gridLayout_7.addWidget(self.cwp_workdate_use_all, 2, 1, 1, 1)
        self.cwp_workdate_annotate = QtWidgets.QCheckBox(self.groupBox_42)
        self.cwp_workdate_annotate.setObjectName("cwp_workdate_annotate")
        self.gridLayout_7.addWidget(self.cwp_workdate_annotate, 2, 2, 1, 1)
        self.gridLayout_10.addWidget(self.groupBox_42, 1, 0, 1, 3)
        self.label_68 = QtWidgets.QLabel(self.groupBox_48)
        self.label_68.setObjectName("label_68")
        self.gridLayout_10.addWidget(self.label_68, 0, 0, 1, 1)
        self.cwp_workdate_include = QtWidgets.QCheckBox(self.groupBox_48)
        self.cwp_workdate_include.setObjectName("cwp_workdate_include")
        self.gridLayout_10.addWidget(self.cwp_workdate_include, 2, 0, 1, 2)
        self.cwp_workdate_tag = QtWidgets.QLineEdit(self.groupBox_48)
        self.cwp_workdate_tag.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_workdate_tag.setObjectName("cwp_workdate_tag")
        self.gridLayout_10.addWidget(self.cwp_workdate_tag, 0, 1, 1, 2)
        self.verticalLayout_32.addWidget(self.groupBox_48)
        self.line_5 = QtWidgets.QFrame(self.groupBox_41)
        self.line_5.setMidLineWidth(0)
        self.line_5.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.verticalLayout_32.addWidget(self.line_5)
        self.groupBox_49 = QtWidgets.QGroupBox(self.groupBox_41)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(222, 212, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 212, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 212, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 212, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 212, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 212, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 212, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 212, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 212, 236))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_49.setPalette(palette)
        self.groupBox_49.setAutoFillBackground(False)
        self.groupBox_49.setStyleSheet("background-color: rgb(222, 212, 236);")
        self.groupBox_49.setObjectName("groupBox_49")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.groupBox_49)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.label_69 = QtWidgets.QLabel(self.groupBox_49)
        self.label_69.setObjectName("label_69")
        self.gridLayout_12.addWidget(self.label_69, 0, 0, 1, 1)
        self.cwp_muso_periods = QtWidgets.QCheckBox(self.groupBox_49)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.cwp_muso_periods.setFont(font)
        self.cwp_muso_periods.setObjectName("cwp_muso_periods")
        self.gridLayout_12.addWidget(self.cwp_muso_periods, 4, 0, 1, 2)
        self.cwp_muso_dates = QtWidgets.QCheckBox(self.groupBox_49)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.cwp_muso_dates.setFont(font)
        self.cwp_muso_dates.setObjectName("cwp_muso_dates")
        self.gridLayout_12.addWidget(self.cwp_muso_dates, 1, 0, 1, 3)
        self.cwp_period_tag = QtWidgets.QLineEdit(self.groupBox_49)
        self.cwp_period_tag.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_period_tag.setObjectName("cwp_period_tag")
        self.gridLayout_12.addWidget(self.cwp_period_tag, 0, 1, 1, 2)
        self.label_70 = QtWidgets.QLabel(self.groupBox_49)
        self.label_70.setObjectName("label_70")
        self.gridLayout_12.addWidget(self.label_70, 3, 0, 1, 1)
        self.cwp_period_map = QtWidgets.QPlainTextEdit(self.groupBox_49)
        self.cwp_period_map.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_period_map.setObjectName("cwp_period_map")
        self.gridLayout_12.addWidget(self.cwp_period_map, 3, 2, 2, 1)
        self.label_87 = QtWidgets.QLabel(self.groupBox_49)
        self.label_87.setObjectName("label_87")
        self.gridLayout_12.addWidget(self.label_87, 5, 2, 1, 1)
        self.cwp_periods_arranger_as_composer = QtWidgets.QCheckBox(self.groupBox_49)
        self.cwp_periods_arranger_as_composer.setObjectName("cwp_periods_arranger_as_composer")
        self.gridLayout_12.addWidget(self.cwp_periods_arranger_as_composer, 2, 0, 1, 1)
        self.verticalLayout_32.addWidget(self.groupBox_49)
        self.verticalLayout_54.addWidget(self.groupBox_41)
        self.gridLayout_13.addWidget(self.frame_36, 7, 0, 1, 1)
        self.label_119 = QtWidgets.QLabel(self.scrollAreaWidgetContents_5)
        self.label_119.setObjectName("label_119")
        self.gridLayout_13.addWidget(self.label_119, 0, 0, 1, 1)
        self.scrollArea_6.setWidget(self.scrollAreaWidgetContents_5)
        self.gridLayout_2.addWidget(self.scrollArea_6, 1, 0, 1, 1)
        self.tabWidget.addTab(self.Genres, "")
        self.Tag_mapping = QtWidgets.QWidget()
        self.Tag_mapping.setObjectName("Tag_mapping")
        self.verticalLayout_28 = QtWidgets.QVBoxLayout(self.Tag_mapping)
        self.verticalLayout_28.setObjectName("verticalLayout_28")
        self.scrollArea_4 = QtWidgets.QScrollArea(self.Tag_mapping)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_4.sizePolicy().hasHeightForWidth())
        self.scrollArea_4.setSizePolicy(sizePolicy)
        self.scrollArea_4.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.scrollArea_4.setWidgetResizable(True)
        self.scrollArea_4.setObjectName("scrollArea_4")
        self.scrollAreaWidgetContents_8 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_8.setGeometry(QtCore.QRect(0, 0, 1084, 885))
        self.scrollAreaWidgetContents_8.setObjectName("scrollAreaWidgetContents_8")
        self.verticalLayout_33 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_8)
        self.verticalLayout_33.setObjectName("verticalLayout_33")
        self.label_18 = QtWidgets.QLabel(self.scrollAreaWidgetContents_8)
        self.label_18.setStyleSheet("")
        self.label_18.setObjectName("label_18")
        self.verticalLayout_33.addWidget(self.label_18)
        self.frame_22 = QtWidgets.QFrame(self.scrollAreaWidgetContents_8)
        self.frame_22.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_22.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_22.setObjectName("frame_22")
        self.verticalLayout_41 = QtWidgets.QVBoxLayout(self.frame_22)
        self.verticalLayout_41.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_41.setSpacing(0)
        self.verticalLayout_41.setObjectName("verticalLayout_41")
        self.label_97 = QtWidgets.QLabel(self.frame_22)
        self.label_97.setStyleSheet("background-color: rgb(209, 171, 222);\n"
"")
        self.label_97.setObjectName("label_97")
        self.verticalLayout_41.addWidget(self.label_97)
        self.groupBox_11 = QtWidgets.QGroupBox(self.frame_22)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(242, 221, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(242, 221, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(242, 221, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(242, 221, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(242, 221, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(242, 221, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(242, 221, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(242, 221, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(242, 221, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_11.setPalette(palette)
        self.groupBox_11.setAutoFillBackground(False)
        self.groupBox_11.setStyleSheet("background-color: rgb(242, 221, 245);")
        self.groupBox_11.setTitle("")
        self.groupBox_11.setObjectName("groupBox_11")
        self.verticalLayout_17 = QtWidgets.QVBoxLayout(self.groupBox_11)
        self.verticalLayout_17.setObjectName("verticalLayout_17")
        self.artist_tags = QtWidgets.QGroupBox(self.groupBox_11)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(242, 221, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(242, 221, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(242, 221, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(242, 221, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(242, 221, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(242, 221, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(242, 221, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(242, 221, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(242, 221, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.artist_tags.setPalette(palette)
        self.artist_tags.setAutoFillBackground(False)
        self.artist_tags.setStyleSheet("")
        self.artist_tags.setObjectName("artist_tags")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.artist_tags)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.label_3 = QtWidgets.QLabel(self.artist_tags)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_12.addWidget(self.label_3)
        self.cea_blank_tag = QtWidgets.QLineEdit(self.artist_tags)
        self.cea_blank_tag.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_blank_tag.setObjectName("cea_blank_tag")
        self.verticalLayout_12.addWidget(self.cea_blank_tag)
        self.cea_blank_tag_2 = QtWidgets.QLineEdit(self.artist_tags)
        self.cea_blank_tag_2.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_blank_tag_2.setObjectName("cea_blank_tag_2")
        self.verticalLayout_12.addWidget(self.cea_blank_tag_2)
        self.verticalLayout_17.addWidget(self.artist_tags)
        self.label_19 = QtWidgets.QLabel(self.groupBox_11)
        self.label_19.setObjectName("label_19")
        self.verticalLayout_17.addWidget(self.label_19)
        self.cea_keep = QtWidgets.QLineEdit(self.groupBox_11)
        self.cea_keep.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_keep.setObjectName("cea_keep")
        self.verticalLayout_17.addWidget(self.cea_keep)
        self.cea_clear_tags = QtWidgets.QCheckBox(self.groupBox_11)
        self.cea_clear_tags.setObjectName("cea_clear_tags")
        self.verticalLayout_17.addWidget(self.cea_clear_tags)
        self.verticalLayout_41.addWidget(self.groupBox_11)
        self.verticalLayout_33.addWidget(self.frame_22)
        self.frame_24 = QtWidgets.QFrame(self.scrollAreaWidgetContents_8)
        self.frame_24.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_24.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_24.setObjectName("frame_24")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame_24)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_98 = QtWidgets.QLabel(self.frame_24)
        self.label_98.setStyleSheet("background-color: rgb(229, 174, 142);")
        self.label_98.setObjectName("label_98")
        self.verticalLayout_3.addWidget(self.label_98)
        self.artist_tags_2 = QtWidgets.QGroupBox(self.frame_24)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.artist_tags_2.sizePolicy().hasHeightForWidth())
        self.artist_tags_2.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 229, 214))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 229, 214))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 229, 214))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 229, 214))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 229, 214))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 229, 214))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 229, 214))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 229, 214))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 229, 214))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.artist_tags_2.setPalette(palette)
        self.artist_tags_2.setFocusPolicy(QtCore.Qt.NoFocus)
        self.artist_tags_2.setAutoFillBackground(False)
        self.artist_tags_2.setStyleSheet("font: 75 8pt \"MS Shell Dlg 2\";\n"
"background-color: rgb(255, 229, 214);")
        self.artist_tags_2.setTitle("")
        self.artist_tags_2.setObjectName("artist_tags_2")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.artist_tags_2)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.textBrowser = QtWidgets.QTextBrowser(self.artist_tags_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser.sizePolicy().hasHeightForWidth())
        self.textBrowser.setSizePolicy(sizePolicy)
        self.textBrowser.setMaximumSize(QtCore.QSize(16777215, 100))
        self.textBrowser.setStyleSheet("background-color: rgb(249, 215, 187);")
        self.textBrowser.setObjectName("textBrowser")
        self.gridLayout_14.addWidget(self.textBrowser, 0, 0, 1, 1)
        self.frame_25 = QtWidgets.QFrame(self.artist_tags_2)
        self.frame_25.setObjectName("frame_25")
        self._14 = QtWidgets.QHBoxLayout(self.frame_25)
        self._14.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self._14.setContentsMargins(1, 1, 1, 1)
        self._14.setSpacing(6)
        self._14.setObjectName("_14")
        self.toolButton_1 = QtWidgets.QToolButton(self.frame_25)
        self.toolButton_1.setAutoFillBackground(False)
        self.toolButton_1.setStyleSheet("")
        self.toolButton_1.setCheckable(True)
        self.toolButton_1.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.toolButton_1.setAutoRaise(False)
        self.toolButton_1.setObjectName("toolButton_1")
        self._14.addWidget(self.toolButton_1)
        self.cea_source_1 = QtWidgets.QComboBox(self.frame_25)
        self.cea_source_1.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cea_source_1.sizePolicy().hasHeightForWidth())
        self.cea_source_1.setSizePolicy(sizePolicy)
        self.cea_source_1.setMouseTracking(False)
        self.cea_source_1.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.cea_source_1.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_source_1.setEditable(True)
        self.cea_source_1.setSizeAdjustPolicy(QtWidgets.QComboBox.AdjustToContents)
        self.cea_source_1.setObjectName("cea_source_1")
        self.cea_source_1.addItem("")
        self.cea_source_1.setItemText(0, "")
        self.cea_source_1.addItem("")
        self.cea_source_1.addItem("")
        self.cea_source_1.addItem("")
        self.cea_source_1.addItem("")
        self.cea_source_1.addItem("")
        self.cea_source_1.addItem("")
        self.cea_source_1.addItem("")
        self.cea_source_1.addItem("")
        self.cea_source_1.addItem("")
        self.cea_source_1.addItem("")
        self.cea_source_1.addItem("")
        self.cea_source_1.addItem("")
        self.cea_source_1.addItem("")
        self.cea_source_1.addItem("")
        self.cea_source_1.addItem("")
        self.cea_source_1.addItem("")
        self.cea_source_1.addItem("")
        self.cea_source_1.addItem("")
        self.cea_source_1.addItem("")
        self.cea_source_1.addItem("")
        self._14.addWidget(self.cea_source_1)
        self.label_21 = QtWidgets.QLabel(self.frame_25)
        self.label_21.setObjectName("label_21")
        self._14.addWidget(self.label_21)
        self.cea_tag_1 = QtWidgets.QLineEdit(self.frame_25)
        self.cea_tag_1.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_tag_1.setObjectName("cea_tag_1")
        self._14.addWidget(self.cea_tag_1)
        self.cea_cond_1 = QtWidgets.QCheckBox(self.frame_25)
        self.cea_cond_1.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_cond_1.setObjectName("cea_cond_1")
        self._14.addWidget(self.cea_cond_1)
        self.gridLayout_14.addWidget(self.frame_25, 1, 0, 1, 1)
        self._15 = QtWidgets.QHBoxLayout()
        self._15.setContentsMargins(0, 0, 0, 0)
        self._15.setSpacing(6)
        self._15.setObjectName("_15")
        self.toolButton_2 = QtWidgets.QToolButton(self.artist_tags_2)
        self.toolButton_2.setStyleSheet("")
        self.toolButton_2.setCheckable(True)
        self.toolButton_2.setObjectName("toolButton_2")
        self._15.addWidget(self.toolButton_2)
        self.cea_source_2 = QtWidgets.QComboBox(self.artist_tags_2)
        self.cea_source_2.setEnabled(False)
        self.cea_source_2.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_source_2.setEditable(True)
        self.cea_source_2.setObjectName("cea_source_2")
        self.cea_source_2.addItem("")
        self.cea_source_2.setItemText(0, "")
        self.cea_source_2.addItem("")
        self.cea_source_2.addItem("")
        self.cea_source_2.addItem("")
        self.cea_source_2.addItem("")
        self.cea_source_2.addItem("")
        self.cea_source_2.addItem("")
        self.cea_source_2.addItem("")
        self.cea_source_2.addItem("")
        self.cea_source_2.addItem("")
        self.cea_source_2.addItem("")
        self.cea_source_2.addItem("")
        self.cea_source_2.addItem("")
        self.cea_source_2.addItem("")
        self.cea_source_2.addItem("")
        self.cea_source_2.addItem("")
        self.cea_source_2.addItem("")
        self.cea_source_2.addItem("")
        self.cea_source_2.addItem("")
        self.cea_source_2.addItem("")
        self.cea_source_2.addItem("")
        self._15.addWidget(self.cea_source_2)
        self.label_23 = QtWidgets.QLabel(self.artist_tags_2)
        self.label_23.setObjectName("label_23")
        self._15.addWidget(self.label_23)
        self.cea_tag_2 = QtWidgets.QLineEdit(self.artist_tags_2)
        self.cea_tag_2.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_tag_2.setObjectName("cea_tag_2")
        self._15.addWidget(self.cea_tag_2)
        self.cea_cond_2 = QtWidgets.QCheckBox(self.artist_tags_2)
        self.cea_cond_2.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_cond_2.setObjectName("cea_cond_2")
        self._15.addWidget(self.cea_cond_2)
        self.gridLayout_14.addLayout(self._15, 2, 0, 1, 1)
        self._16 = QtWidgets.QHBoxLayout()
        self._16.setContentsMargins(0, 0, 0, 0)
        self._16.setSpacing(6)
        self._16.setObjectName("_16")
        self.toolButton_3 = QtWidgets.QToolButton(self.artist_tags_2)
        self.toolButton_3.setStyleSheet("")
        self.toolButton_3.setCheckable(True)
        self.toolButton_3.setObjectName("toolButton_3")
        self._16.addWidget(self.toolButton_3)
        self.cea_source_3 = QtWidgets.QComboBox(self.artist_tags_2)
        self.cea_source_3.setEnabled(False)
        self.cea_source_3.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_source_3.setEditable(True)
        self.cea_source_3.setObjectName("cea_source_3")
        self.cea_source_3.addItem("")
        self.cea_source_3.setItemText(0, "")
        self.cea_source_3.addItem("")
        self.cea_source_3.addItem("")
        self.cea_source_3.addItem("")
        self.cea_source_3.addItem("")
        self.cea_source_3.addItem("")
        self.cea_source_3.addItem("")
        self.cea_source_3.addItem("")
        self.cea_source_3.addItem("")
        self.cea_source_3.addItem("")
        self.cea_source_3.addItem("")
        self.cea_source_3.addItem("")
        self.cea_source_3.addItem("")
        self.cea_source_3.addItem("")
        self.cea_source_3.addItem("")
        self.cea_source_3.addItem("")
        self.cea_source_3.addItem("")
        self.cea_source_3.addItem("")
        self.cea_source_3.addItem("")
        self.cea_source_3.addItem("")
        self.cea_source_3.addItem("")
        self._16.addWidget(self.cea_source_3)
        self.label_25 = QtWidgets.QLabel(self.artist_tags_2)
        self.label_25.setObjectName("label_25")
        self._16.addWidget(self.label_25)
        self.cea_tag_3 = QtWidgets.QLineEdit(self.artist_tags_2)
        self.cea_tag_3.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_tag_3.setObjectName("cea_tag_3")
        self._16.addWidget(self.cea_tag_3)
        self.cea_cond_3 = QtWidgets.QCheckBox(self.artist_tags_2)
        self.cea_cond_3.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_cond_3.setObjectName("cea_cond_3")
        self._16.addWidget(self.cea_cond_3)
        self.gridLayout_14.addLayout(self._16, 3, 0, 1, 1)
        self._17 = QtWidgets.QHBoxLayout()
        self._17.setContentsMargins(0, 0, 0, 0)
        self._17.setSpacing(6)
        self._17.setObjectName("_17")
        self.toolButton_4 = QtWidgets.QToolButton(self.artist_tags_2)
        self.toolButton_4.setStyleSheet("")
        self.toolButton_4.setCheckable(True)
        self.toolButton_4.setObjectName("toolButton_4")
        self._17.addWidget(self.toolButton_4)
        self.cea_source_4 = QtWidgets.QComboBox(self.artist_tags_2)
        self.cea_source_4.setEnabled(False)
        self.cea_source_4.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_source_4.setEditable(True)
        self.cea_source_4.setObjectName("cea_source_4")
        self.cea_source_4.addItem("")
        self.cea_source_4.setItemText(0, "")
        self.cea_source_4.addItem("")
        self.cea_source_4.addItem("")
        self.cea_source_4.addItem("")
        self.cea_source_4.addItem("")
        self.cea_source_4.addItem("")
        self.cea_source_4.addItem("")
        self.cea_source_4.addItem("")
        self.cea_source_4.addItem("")
        self.cea_source_4.addItem("")
        self.cea_source_4.addItem("")
        self.cea_source_4.addItem("")
        self.cea_source_4.addItem("")
        self.cea_source_4.addItem("")
        self.cea_source_4.addItem("")
        self.cea_source_4.addItem("")
        self.cea_source_4.addItem("")
        self.cea_source_4.addItem("")
        self.cea_source_4.addItem("")
        self.cea_source_4.addItem("")
        self.cea_source_4.addItem("")
        self._17.addWidget(self.cea_source_4)
        self.label_27 = QtWidgets.QLabel(self.artist_tags_2)
        self.label_27.setObjectName("label_27")
        self._17.addWidget(self.label_27)
        self.cea_tag_4 = QtWidgets.QLineEdit(self.artist_tags_2)
        self.cea_tag_4.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_tag_4.setObjectName("cea_tag_4")
        self._17.addWidget(self.cea_tag_4)
        self.cea_cond_4 = QtWidgets.QCheckBox(self.artist_tags_2)
        self.cea_cond_4.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_cond_4.setObjectName("cea_cond_4")
        self._17.addWidget(self.cea_cond_4)
        self.gridLayout_14.addLayout(self._17, 4, 0, 1, 1)
        self._18 = QtWidgets.QHBoxLayout()
        self._18.setContentsMargins(0, 0, 0, 0)
        self._18.setSpacing(6)
        self._18.setObjectName("_18")
        self.toolButton_5 = QtWidgets.QToolButton(self.artist_tags_2)
        self.toolButton_5.setStyleSheet("")
        self.toolButton_5.setCheckable(True)
        self.toolButton_5.setObjectName("toolButton_5")
        self._18.addWidget(self.toolButton_5)
        self.cea_source_5 = QtWidgets.QComboBox(self.artist_tags_2)
        self.cea_source_5.setEnabled(False)
        self.cea_source_5.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_source_5.setEditable(True)
        self.cea_source_5.setObjectName("cea_source_5")
        self.cea_source_5.addItem("")
        self.cea_source_5.setItemText(0, "")
        self.cea_source_5.addItem("")
        self.cea_source_5.addItem("")
        self.cea_source_5.addItem("")
        self.cea_source_5.addItem("")
        self.cea_source_5.addItem("")
        self.cea_source_5.addItem("")
        self.cea_source_5.addItem("")
        self.cea_source_5.addItem("")
        self.cea_source_5.addItem("")
        self.cea_source_5.addItem("")
        self.cea_source_5.addItem("")
        self.cea_source_5.addItem("")
        self.cea_source_5.addItem("")
        self.cea_source_5.addItem("")
        self.cea_source_5.addItem("")
        self.cea_source_5.addItem("")
        self.cea_source_5.addItem("")
        self.cea_source_5.addItem("")
        self.cea_source_5.addItem("")
        self.cea_source_5.addItem("")
        self._18.addWidget(self.cea_source_5)
        self.label_29 = QtWidgets.QLabel(self.artist_tags_2)
        self.label_29.setObjectName("label_29")
        self._18.addWidget(self.label_29)
        self.cea_tag_5 = QtWidgets.QLineEdit(self.artist_tags_2)
        self.cea_tag_5.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_tag_5.setObjectName("cea_tag_5")
        self._18.addWidget(self.cea_tag_5)
        self.cea_cond_5 = QtWidgets.QCheckBox(self.artist_tags_2)
        self.cea_cond_5.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_cond_5.setObjectName("cea_cond_5")
        self._18.addWidget(self.cea_cond_5)
        self.gridLayout_14.addLayout(self._18, 5, 0, 1, 1)
        self._19 = QtWidgets.QHBoxLayout()
        self._19.setContentsMargins(0, 0, 0, 0)
        self._19.setSpacing(6)
        self._19.setObjectName("_19")
        self.toolButton_6 = QtWidgets.QToolButton(self.artist_tags_2)
        self.toolButton_6.setStyleSheet("")
        self.toolButton_6.setCheckable(True)
        self.toolButton_6.setObjectName("toolButton_6")
        self._19.addWidget(self.toolButton_6)
        self.cea_source_6 = QtWidgets.QComboBox(self.artist_tags_2)
        self.cea_source_6.setEnabled(False)
        self.cea_source_6.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_source_6.setEditable(True)
        self.cea_source_6.setObjectName("cea_source_6")
        self.cea_source_6.addItem("")
        self.cea_source_6.setItemText(0, "")
        self.cea_source_6.addItem("")
        self.cea_source_6.addItem("")
        self.cea_source_6.addItem("")
        self.cea_source_6.addItem("")
        self.cea_source_6.addItem("")
        self.cea_source_6.addItem("")
        self.cea_source_6.addItem("")
        self.cea_source_6.addItem("")
        self.cea_source_6.addItem("")
        self.cea_source_6.addItem("")
        self.cea_source_6.addItem("")
        self.cea_source_6.addItem("")
        self.cea_source_6.addItem("")
        self.cea_source_6.addItem("")
        self.cea_source_6.addItem("")
        self.cea_source_6.addItem("")
        self.cea_source_6.addItem("")
        self.cea_source_6.addItem("")
        self.cea_source_6.addItem("")
        self.cea_source_6.addItem("")
        self._19.addWidget(self.cea_source_6)
        self.label_31 = QtWidgets.QLabel(self.artist_tags_2)
        self.label_31.setObjectName("label_31")
        self._19.addWidget(self.label_31)
        self.cea_tag_6 = QtWidgets.QLineEdit(self.artist_tags_2)
        self.cea_tag_6.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_tag_6.setObjectName("cea_tag_6")
        self._19.addWidget(self.cea_tag_6)
        self.cea_cond_6 = QtWidgets.QCheckBox(self.artist_tags_2)
        self.cea_cond_6.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_cond_6.setObjectName("cea_cond_6")
        self._19.addWidget(self.cea_cond_6)
        self.gridLayout_14.addLayout(self._19, 6, 0, 1, 1)
        self._20 = QtWidgets.QHBoxLayout()
        self._20.setContentsMargins(0, 0, 0, 0)
        self._20.setSpacing(6)
        self._20.setObjectName("_20")
        self.toolButton_7 = QtWidgets.QToolButton(self.artist_tags_2)
        self.toolButton_7.setStyleSheet("")
        self.toolButton_7.setCheckable(True)
        self.toolButton_7.setObjectName("toolButton_7")
        self._20.addWidget(self.toolButton_7)
        self.cea_source_7 = QtWidgets.QComboBox(self.artist_tags_2)
        self.cea_source_7.setEnabled(False)
        self.cea_source_7.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_source_7.setEditable(True)
        self.cea_source_7.setObjectName("cea_source_7")
        self.cea_source_7.addItem("")
        self.cea_source_7.setItemText(0, "")
        self.cea_source_7.addItem("")
        self.cea_source_7.addItem("")
        self.cea_source_7.addItem("")
        self.cea_source_7.addItem("")
        self.cea_source_7.addItem("")
        self.cea_source_7.addItem("")
        self.cea_source_7.addItem("")
        self.cea_source_7.addItem("")
        self.cea_source_7.addItem("")
        self.cea_source_7.addItem("")
        self.cea_source_7.addItem("")
        self.cea_source_7.addItem("")
        self.cea_source_7.addItem("")
        self.cea_source_7.addItem("")
        self.cea_source_7.addItem("")
        self.cea_source_7.addItem("")
        self.cea_source_7.addItem("")
        self.cea_source_7.addItem("")
        self.cea_source_7.addItem("")
        self.cea_source_7.addItem("")
        self._20.addWidget(self.cea_source_7)
        self.label_33 = QtWidgets.QLabel(self.artist_tags_2)
        self.label_33.setObjectName("label_33")
        self._20.addWidget(self.label_33)
        self.cea_tag_7 = QtWidgets.QLineEdit(self.artist_tags_2)
        self.cea_tag_7.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_tag_7.setObjectName("cea_tag_7")
        self._20.addWidget(self.cea_tag_7)
        self.cea_cond_7 = QtWidgets.QCheckBox(self.artist_tags_2)
        self.cea_cond_7.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_cond_7.setObjectName("cea_cond_7")
        self._20.addWidget(self.cea_cond_7)
        self.gridLayout_14.addLayout(self._20, 7, 0, 1, 1)
        self._21 = QtWidgets.QHBoxLayout()
        self._21.setContentsMargins(0, 0, 0, 0)
        self._21.setSpacing(6)
        self._21.setObjectName("_21")
        self.toolButton_8 = QtWidgets.QToolButton(self.artist_tags_2)
        self.toolButton_8.setStyleSheet("")
        self.toolButton_8.setCheckable(True)
        self.toolButton_8.setObjectName("toolButton_8")
        self._21.addWidget(self.toolButton_8)
        self.cea_source_8 = QtWidgets.QComboBox(self.artist_tags_2)
        self.cea_source_8.setEnabled(False)
        self.cea_source_8.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_source_8.setEditable(True)
        self.cea_source_8.setObjectName("cea_source_8")
        self.cea_source_8.addItem("")
        self.cea_source_8.setItemText(0, "")
        self.cea_source_8.addItem("")
        self.cea_source_8.addItem("")
        self.cea_source_8.addItem("")
        self.cea_source_8.addItem("")
        self.cea_source_8.addItem("")
        self.cea_source_8.addItem("")
        self.cea_source_8.addItem("")
        self.cea_source_8.addItem("")
        self.cea_source_8.addItem("")
        self.cea_source_8.addItem("")
        self.cea_source_8.addItem("")
        self.cea_source_8.addItem("")
        self.cea_source_8.addItem("")
        self.cea_source_8.addItem("")
        self.cea_source_8.addItem("")
        self.cea_source_8.addItem("")
        self.cea_source_8.addItem("")
        self.cea_source_8.addItem("")
        self.cea_source_8.addItem("")
        self.cea_source_8.addItem("")
        self._21.addWidget(self.cea_source_8)
        self.label_35 = QtWidgets.QLabel(self.artist_tags_2)
        self.label_35.setObjectName("label_35")
        self._21.addWidget(self.label_35)
        self.cea_tag_8 = QtWidgets.QLineEdit(self.artist_tags_2)
        self.cea_tag_8.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_tag_8.setObjectName("cea_tag_8")
        self._21.addWidget(self.cea_tag_8)
        self.cea_cond_8 = QtWidgets.QCheckBox(self.artist_tags_2)
        self.cea_cond_8.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_cond_8.setObjectName("cea_cond_8")
        self._21.addWidget(self.cea_cond_8)
        self.gridLayout_14.addLayout(self._21, 8, 0, 1, 1)
        self._30 = QtWidgets.QHBoxLayout()
        self._30.setContentsMargins(0, 0, 0, 0)
        self._30.setSpacing(6)
        self._30.setObjectName("_30")
        self.toolButton_9 = QtWidgets.QToolButton(self.artist_tags_2)
        self.toolButton_9.setStyleSheet("")
        self.toolButton_9.setCheckable(True)
        self.toolButton_9.setObjectName("toolButton_9")
        self._30.addWidget(self.toolButton_9)
        self.cea_source_9 = QtWidgets.QComboBox(self.artist_tags_2)
        self.cea_source_9.setEnabled(False)
        self.cea_source_9.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_source_9.setEditable(True)
        self.cea_source_9.setObjectName("cea_source_9")
        self.cea_source_9.addItem("")
        self.cea_source_9.setItemText(0, "")
        self.cea_source_9.addItem("")
        self.cea_source_9.addItem("")
        self.cea_source_9.addItem("")
        self.cea_source_9.addItem("")
        self.cea_source_9.addItem("")
        self.cea_source_9.addItem("")
        self.cea_source_9.addItem("")
        self.cea_source_9.addItem("")
        self.cea_source_9.addItem("")
        self.cea_source_9.addItem("")
        self.cea_source_9.addItem("")
        self.cea_source_9.addItem("")
        self.cea_source_9.addItem("")
        self.cea_source_9.addItem("")
        self.cea_source_9.addItem("")
        self.cea_source_9.addItem("")
        self.cea_source_9.addItem("")
        self.cea_source_9.addItem("")
        self.cea_source_9.addItem("")
        self.cea_source_9.addItem("")
        self._30.addWidget(self.cea_source_9)
        self.label_53 = QtWidgets.QLabel(self.artist_tags_2)
        self.label_53.setObjectName("label_53")
        self._30.addWidget(self.label_53)
        self.cea_tag_9 = QtWidgets.QLineEdit(self.artist_tags_2)
        self.cea_tag_9.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_tag_9.setObjectName("cea_tag_9")
        self._30.addWidget(self.cea_tag_9)
        self.cea_cond_9 = QtWidgets.QCheckBox(self.artist_tags_2)
        self.cea_cond_9.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_cond_9.setObjectName("cea_cond_9")
        self._30.addWidget(self.cea_cond_9)
        self.gridLayout_14.addLayout(self._30, 9, 0, 1, 1)
        self._31 = QtWidgets.QHBoxLayout()
        self._31.setContentsMargins(0, 0, 0, 0)
        self._31.setSpacing(6)
        self._31.setObjectName("_31")
        self.toolButton_10 = QtWidgets.QToolButton(self.artist_tags_2)
        self.toolButton_10.setStyleSheet("")
        self.toolButton_10.setCheckable(True)
        self.toolButton_10.setObjectName("toolButton_10")
        self._31.addWidget(self.toolButton_10)
        self.cea_source_10 = QtWidgets.QComboBox(self.artist_tags_2)
        self.cea_source_10.setEnabled(False)
        self.cea_source_10.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_source_10.setEditable(True)
        self.cea_source_10.setObjectName("cea_source_10")
        self.cea_source_10.addItem("")
        self.cea_source_10.setItemText(0, "")
        self.cea_source_10.addItem("")
        self.cea_source_10.addItem("")
        self.cea_source_10.addItem("")
        self.cea_source_10.addItem("")
        self.cea_source_10.addItem("")
        self.cea_source_10.addItem("")
        self.cea_source_10.addItem("")
        self.cea_source_10.addItem("")
        self.cea_source_10.addItem("")
        self.cea_source_10.addItem("")
        self.cea_source_10.addItem("")
        self.cea_source_10.addItem("")
        self.cea_source_10.addItem("")
        self.cea_source_10.addItem("")
        self.cea_source_10.addItem("")
        self.cea_source_10.addItem("")
        self.cea_source_10.addItem("")
        self.cea_source_10.addItem("")
        self.cea_source_10.addItem("")
        self.cea_source_10.addItem("")
        self._31.addWidget(self.cea_source_10)
        self.label_55 = QtWidgets.QLabel(self.artist_tags_2)
        self.label_55.setObjectName("label_55")
        self._31.addWidget(self.label_55)
        self.cea_tag_10 = QtWidgets.QLineEdit(self.artist_tags_2)
        self.cea_tag_10.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_tag_10.setObjectName("cea_tag_10")
        self._31.addWidget(self.cea_tag_10)
        self.cea_cond_10 = QtWidgets.QCheckBox(self.artist_tags_2)
        self.cea_cond_10.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_cond_10.setObjectName("cea_cond_10")
        self._31.addWidget(self.cea_cond_10)
        self.gridLayout_14.addLayout(self._31, 10, 0, 1, 1)
        self._32 = QtWidgets.QHBoxLayout()
        self._32.setContentsMargins(0, 0, 0, 0)
        self._32.setSpacing(6)
        self._32.setObjectName("_32")
        self.toolButton_11 = QtWidgets.QToolButton(self.artist_tags_2)
        self.toolButton_11.setStyleSheet("")
        self.toolButton_11.setCheckable(True)
        self.toolButton_11.setObjectName("toolButton_11")
        self._32.addWidget(self.toolButton_11)
        self.cea_source_11 = QtWidgets.QComboBox(self.artist_tags_2)
        self.cea_source_11.setEnabled(False)
        self.cea_source_11.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_source_11.setEditable(True)
        self.cea_source_11.setObjectName("cea_source_11")
        self.cea_source_11.addItem("")
        self.cea_source_11.setItemText(0, "")
        self.cea_source_11.addItem("")
        self.cea_source_11.addItem("")
        self.cea_source_11.addItem("")
        self.cea_source_11.addItem("")
        self.cea_source_11.addItem("")
        self.cea_source_11.addItem("")
        self.cea_source_11.addItem("")
        self.cea_source_11.addItem("")
        self.cea_source_11.addItem("")
        self.cea_source_11.addItem("")
        self.cea_source_11.addItem("")
        self.cea_source_11.addItem("")
        self.cea_source_11.addItem("")
        self.cea_source_11.addItem("")
        self.cea_source_11.addItem("")
        self.cea_source_11.addItem("")
        self.cea_source_11.addItem("")
        self.cea_source_11.addItem("")
        self.cea_source_11.addItem("")
        self.cea_source_11.addItem("")
        self._32.addWidget(self.cea_source_11)
        self.label_57 = QtWidgets.QLabel(self.artist_tags_2)
        self.label_57.setObjectName("label_57")
        self._32.addWidget(self.label_57)
        self.cea_tag_11 = QtWidgets.QLineEdit(self.artist_tags_2)
        self.cea_tag_11.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_tag_11.setObjectName("cea_tag_11")
        self._32.addWidget(self.cea_tag_11)
        self.cea_cond_11 = QtWidgets.QCheckBox(self.artist_tags_2)
        self.cea_cond_11.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_cond_11.setObjectName("cea_cond_11")
        self._32.addWidget(self.cea_cond_11)
        self.gridLayout_14.addLayout(self._32, 11, 0, 1, 1)
        self._33 = QtWidgets.QHBoxLayout()
        self._33.setContentsMargins(0, 0, 0, 0)
        self._33.setSpacing(6)
        self._33.setObjectName("_33")
        self.toolButton_12 = QtWidgets.QToolButton(self.artist_tags_2)
        self.toolButton_12.setStyleSheet("")
        self.toolButton_12.setCheckable(True)
        self.toolButton_12.setObjectName("toolButton_12")
        self._33.addWidget(self.toolButton_12)
        self.cea_source_12 = QtWidgets.QComboBox(self.artist_tags_2)
        self.cea_source_12.setEnabled(False)
        self.cea_source_12.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_source_12.setEditable(True)
        self.cea_source_12.setObjectName("cea_source_12")
        self.cea_source_12.addItem("")
        self.cea_source_12.setItemText(0, "")
        self.cea_source_12.addItem("")
        self.cea_source_12.addItem("")
        self.cea_source_12.addItem("")
        self.cea_source_12.addItem("")
        self.cea_source_12.addItem("")
        self.cea_source_12.addItem("")
        self.cea_source_12.addItem("")
        self.cea_source_12.addItem("")
        self.cea_source_12.addItem("")
        self.cea_source_12.addItem("")
        self.cea_source_12.addItem("")
        self.cea_source_12.addItem("")
        self.cea_source_12.addItem("")
        self.cea_source_12.addItem("")
        self.cea_source_12.addItem("")
        self.cea_source_12.addItem("")
        self.cea_source_12.addItem("")
        self.cea_source_12.addItem("")
        self.cea_source_12.addItem("")
        self.cea_source_12.addItem("")
        self._33.addWidget(self.cea_source_12)
        self.label_59 = QtWidgets.QLabel(self.artist_tags_2)
        self.label_59.setObjectName("label_59")
        self._33.addWidget(self.label_59)
        self.cea_tag_12 = QtWidgets.QLineEdit(self.artist_tags_2)
        self.cea_tag_12.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_tag_12.setObjectName("cea_tag_12")
        self._33.addWidget(self.cea_tag_12)
        self.cea_cond_12 = QtWidgets.QCheckBox(self.artist_tags_2)
        self.cea_cond_12.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_cond_12.setObjectName("cea_cond_12")
        self._33.addWidget(self.cea_cond_12)
        self.gridLayout_14.addLayout(self._33, 12, 0, 1, 1)
        self._34 = QtWidgets.QHBoxLayout()
        self._34.setContentsMargins(0, 0, 0, 0)
        self._34.setSpacing(6)
        self._34.setObjectName("_34")
        self.toolButton_13 = QtWidgets.QToolButton(self.artist_tags_2)
        self.toolButton_13.setStyleSheet("")
        self.toolButton_13.setCheckable(True)
        self.toolButton_13.setObjectName("toolButton_13")
        self._34.addWidget(self.toolButton_13)
        self.cea_source_13 = QtWidgets.QComboBox(self.artist_tags_2)
        self.cea_source_13.setEnabled(False)
        self.cea_source_13.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_source_13.setEditable(True)
        self.cea_source_13.setObjectName("cea_source_13")
        self.cea_source_13.addItem("")
        self.cea_source_13.setItemText(0, "")
        self.cea_source_13.addItem("")
        self.cea_source_13.addItem("")
        self.cea_source_13.addItem("")
        self.cea_source_13.addItem("")
        self.cea_source_13.addItem("")
        self.cea_source_13.addItem("")
        self.cea_source_13.addItem("")
        self.cea_source_13.addItem("")
        self.cea_source_13.addItem("")
        self.cea_source_13.addItem("")
        self.cea_source_13.addItem("")
        self.cea_source_13.addItem("")
        self.cea_source_13.addItem("")
        self.cea_source_13.addItem("")
        self.cea_source_13.addItem("")
        self.cea_source_13.addItem("")
        self.cea_source_13.addItem("")
        self.cea_source_13.addItem("")
        self.cea_source_13.addItem("")
        self.cea_source_13.addItem("")
        self._34.addWidget(self.cea_source_13)
        self.label_61 = QtWidgets.QLabel(self.artist_tags_2)
        self.label_61.setObjectName("label_61")
        self._34.addWidget(self.label_61)
        self.cea_tag_13 = QtWidgets.QLineEdit(self.artist_tags_2)
        self.cea_tag_13.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_tag_13.setObjectName("cea_tag_13")
        self._34.addWidget(self.cea_tag_13)
        self.cea_cond_13 = QtWidgets.QCheckBox(self.artist_tags_2)
        self.cea_cond_13.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_cond_13.setObjectName("cea_cond_13")
        self._34.addWidget(self.cea_cond_13)
        self.gridLayout_14.addLayout(self._34, 13, 0, 1, 1)
        self._35 = QtWidgets.QHBoxLayout()
        self._35.setContentsMargins(0, 0, 0, 0)
        self._35.setSpacing(6)
        self._35.setObjectName("_35")
        self.toolButton_14 = QtWidgets.QToolButton(self.artist_tags_2)
        self.toolButton_14.setStyleSheet("")
        self.toolButton_14.setCheckable(True)
        self.toolButton_14.setObjectName("toolButton_14")
        self._35.addWidget(self.toolButton_14)
        self.cea_source_14 = QtWidgets.QComboBox(self.artist_tags_2)
        self.cea_source_14.setEnabled(False)
        self.cea_source_14.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_source_14.setEditable(True)
        self.cea_source_14.setObjectName("cea_source_14")
        self.cea_source_14.addItem("")
        self.cea_source_14.setItemText(0, "")
        self.cea_source_14.addItem("")
        self.cea_source_14.addItem("")
        self.cea_source_14.addItem("")
        self.cea_source_14.addItem("")
        self.cea_source_14.addItem("")
        self.cea_source_14.addItem("")
        self.cea_source_14.addItem("")
        self.cea_source_14.addItem("")
        self.cea_source_14.addItem("")
        self.cea_source_14.addItem("")
        self.cea_source_14.addItem("")
        self.cea_source_14.addItem("")
        self.cea_source_14.addItem("")
        self.cea_source_14.addItem("")
        self.cea_source_14.addItem("")
        self.cea_source_14.addItem("")
        self.cea_source_14.addItem("")
        self.cea_source_14.addItem("")
        self.cea_source_14.addItem("")
        self.cea_source_14.addItem("")
        self._35.addWidget(self.cea_source_14)
        self.label_63 = QtWidgets.QLabel(self.artist_tags_2)
        self.label_63.setObjectName("label_63")
        self._35.addWidget(self.label_63)
        self.cea_tag_14 = QtWidgets.QLineEdit(self.artist_tags_2)
        self.cea_tag_14.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_tag_14.setObjectName("cea_tag_14")
        self._35.addWidget(self.cea_tag_14)
        self.cea_cond_14 = QtWidgets.QCheckBox(self.artist_tags_2)
        self.cea_cond_14.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_cond_14.setObjectName("cea_cond_14")
        self._35.addWidget(self.cea_cond_14)
        self.gridLayout_14.addLayout(self._35, 14, 0, 1, 1)
        self._36 = QtWidgets.QHBoxLayout()
        self._36.setContentsMargins(0, 0, 0, 0)
        self._36.setSpacing(6)
        self._36.setObjectName("_36")
        self.toolButton_15 = QtWidgets.QToolButton(self.artist_tags_2)
        self.toolButton_15.setStyleSheet("")
        self.toolButton_15.setCheckable(True)
        self.toolButton_15.setObjectName("toolButton_15")
        self._36.addWidget(self.toolButton_15)
        self.cea_source_15 = QtWidgets.QComboBox(self.artist_tags_2)
        self.cea_source_15.setEnabled(False)
        self.cea_source_15.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_source_15.setEditable(True)
        self.cea_source_15.setObjectName("cea_source_15")
        self.cea_source_15.addItem("")
        self.cea_source_15.setItemText(0, "")
        self.cea_source_15.addItem("")
        self.cea_source_15.addItem("")
        self.cea_source_15.addItem("")
        self.cea_source_15.addItem("")
        self.cea_source_15.addItem("")
        self.cea_source_15.addItem("")
        self.cea_source_15.addItem("")
        self.cea_source_15.addItem("")
        self.cea_source_15.addItem("")
        self.cea_source_15.addItem("")
        self.cea_source_15.addItem("")
        self.cea_source_15.addItem("")
        self.cea_source_15.addItem("")
        self.cea_source_15.addItem("")
        self.cea_source_15.addItem("")
        self.cea_source_15.addItem("")
        self.cea_source_15.addItem("")
        self.cea_source_15.addItem("")
        self.cea_source_15.addItem("")
        self.cea_source_15.addItem("")
        self._36.addWidget(self.cea_source_15)
        self.label_65 = QtWidgets.QLabel(self.artist_tags_2)
        self.label_65.setObjectName("label_65")
        self._36.addWidget(self.label_65)
        self.cea_tag_15 = QtWidgets.QLineEdit(self.artist_tags_2)
        self.cea_tag_15.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_tag_15.setObjectName("cea_tag_15")
        self._36.addWidget(self.cea_tag_15)
        self.cea_cond_15 = QtWidgets.QCheckBox(self.artist_tags_2)
        self.cea_cond_15.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_cond_15.setObjectName("cea_cond_15")
        self._36.addWidget(self.cea_cond_15)
        self.gridLayout_14.addLayout(self._36, 15, 0, 1, 1)
        self._37 = QtWidgets.QHBoxLayout()
        self._37.setContentsMargins(0, 0, 0, 0)
        self._37.setSpacing(6)
        self._37.setObjectName("_37")
        self.toolButton_16 = QtWidgets.QToolButton(self.artist_tags_2)
        self.toolButton_16.setStyleSheet("")
        self.toolButton_16.setCheckable(True)
        self.toolButton_16.setObjectName("toolButton_16")
        self._37.addWidget(self.toolButton_16)
        self.cea_source_16 = QtWidgets.QComboBox(self.artist_tags_2)
        self.cea_source_16.setEnabled(False)
        self.cea_source_16.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_source_16.setEditable(True)
        self.cea_source_16.setObjectName("cea_source_16")
        self.cea_source_16.addItem("")
        self.cea_source_16.setItemText(0, "")
        self.cea_source_16.addItem("")
        self.cea_source_16.addItem("")
        self.cea_source_16.addItem("")
        self.cea_source_16.addItem("")
        self.cea_source_16.addItem("")
        self.cea_source_16.addItem("")
        self.cea_source_16.addItem("")
        self.cea_source_16.addItem("")
        self.cea_source_16.addItem("")
        self.cea_source_16.addItem("")
        self.cea_source_16.addItem("")
        self.cea_source_16.addItem("")
        self.cea_source_16.addItem("")
        self.cea_source_16.addItem("")
        self.cea_source_16.addItem("")
        self.cea_source_16.addItem("")
        self.cea_source_16.addItem("")
        self.cea_source_16.addItem("")
        self.cea_source_16.addItem("")
        self.cea_source_16.addItem("")
        self._37.addWidget(self.cea_source_16)
        self.label_67 = QtWidgets.QLabel(self.artist_tags_2)
        self.label_67.setObjectName("label_67")
        self._37.addWidget(self.label_67)
        self.cea_tag_16 = QtWidgets.QLineEdit(self.artist_tags_2)
        self.cea_tag_16.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_tag_16.setObjectName("cea_tag_16")
        self._37.addWidget(self.cea_tag_16)
        self.cea_cond_16 = QtWidgets.QCheckBox(self.artist_tags_2)
        self.cea_cond_16.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_cond_16.setObjectName("cea_cond_16")
        self._37.addWidget(self.cea_cond_16)
        self.gridLayout_14.addLayout(self._37, 16, 0, 1, 1)
        self._38 = QtWidgets.QHBoxLayout()
        self._38.setContentsMargins(0, 0, 0, 0)
        self._38.setSpacing(6)
        self._38.setObjectName("_38")
        self.label_42 = QtWidgets.QLabel(self.artist_tags_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_42.sizePolicy().hasHeightForWidth())
        self.label_42.setSizePolicy(sizePolicy)
        self.label_42.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_42.setLineWidth(1)
        self.label_42.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_42.setObjectName("label_42")
        self._38.addWidget(self.label_42)
        self.label_17 = QtWidgets.QLabel(self.artist_tags_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_17.sizePolicy().hasHeightForWidth())
        self.label_17.setSizePolicy(sizePolicy)
        self.label_17.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.label_17.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_17.setObjectName("label_17")
        self._38.addWidget(self.label_17)
        self.gridLayout_14.addLayout(self._38, 17, 0, 1, 1)
        self.cea_tag_sort = QtWidgets.QCheckBox(self.artist_tags_2)
        self.cea_tag_sort.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.cea_tag_sort.setObjectName("cea_tag_sort")
        self.gridLayout_14.addWidget(self.cea_tag_sort, 18, 0, 1, 1)
        self.verticalLayout_3.addWidget(self.artist_tags_2)
        self.verticalLayout_33.addWidget(self.frame_24)
        self.scrollArea_4.setWidget(self.scrollAreaWidgetContents_8)
        self.verticalLayout_28.addWidget(self.scrollArea_4)
        self.tabWidget.addTab(self.Tag_mapping, "")
        self.Advanced = QtWidgets.QWidget()
        self.Advanced.setObjectName("Advanced")
        self.horizontalLayout_31 = QtWidgets.QHBoxLayout(self.Advanced)
        self.horizontalLayout_31.setObjectName("horizontalLayout_31")
        self.scrollArea_2 = QtWidgets.QScrollArea(self.Advanced)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_2.sizePolicy().hasHeightForWidth())
        self.scrollArea_2.setSizePolicy(sizePolicy)
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollArea_2.setObjectName("scrollArea_2")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, -33, 1084, 1408))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.verticalLayout_18 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_2)
        self.verticalLayout_18.setObjectName("verticalLayout_18")
        self.frame_37 = QtWidgets.QFrame(self.scrollAreaWidgetContents_2)
        self.frame_37.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_37.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_37.setObjectName("frame_37")
        self.verticalLayout_55 = QtWidgets.QVBoxLayout(self.frame_37)
        self.verticalLayout_55.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_55.setSpacing(0)
        self.verticalLayout_55.setObjectName("verticalLayout_55")
        self.label_110 = QtWidgets.QLabel(self.frame_37)
        self.label_110.setStyleSheet("background-color: rgb(208, 208, 156);")
        self.label_110.setObjectName("label_110")
        self.verticalLayout_55.addWidget(self.label_110)
        self.groupBox_3 = QtWidgets.QGroupBox(self.frame_37)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_3.setPalette(palette)
        self.groupBox_3.setAutoFillBackground(False)
        self.groupBox_3.setStyleSheet("background-color: rgb(229, 229, 197);")
        self.groupBox_3.setTitle("")
        self.groupBox_3.setObjectName("groupBox_3")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.groupBox_3)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.ce_no_run = QtWidgets.QCheckBox(self.groupBox_3)
        self.ce_no_run.setObjectName("ce_no_run")
        self.verticalLayout_5.addWidget(self.ce_no_run)
        self.verticalLayout_55.addWidget(self.groupBox_3)
        self.verticalLayout_18.addWidget(self.frame_37)
        self.frame_38 = QtWidgets.QFrame(self.scrollAreaWidgetContents_2)
        self.frame_38.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_38.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_38.setObjectName("frame_38")
        self.verticalLayout_56 = QtWidgets.QVBoxLayout(self.frame_38)
        self.verticalLayout_56.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_56.setSpacing(0)
        self.verticalLayout_56.setObjectName("verticalLayout_56")
        self.label_111 = QtWidgets.QLabel(self.frame_38)
        self.label_111.setStyleSheet("background-color: rgb(208, 208, 156);")
        self.label_111.setObjectName("label_111")
        self.verticalLayout_56.addWidget(self.label_111)
        self.advanced_artists = QtWidgets.QGroupBox(self.frame_38)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.advanced_artists.setPalette(palette)
        self.advanced_artists.setAutoFillBackground(False)
        self.advanced_artists.setStyleSheet("background-color: rgb(229, 229, 197);")
        self.advanced_artists.setTitle("")
        self.advanced_artists.setObjectName("advanced_artists")
        self.verticalLayout_20 = QtWidgets.QVBoxLayout(self.advanced_artists)
        self.verticalLayout_20.setObjectName("verticalLayout_20")
        self.label_112 = QtWidgets.QLabel(self.advanced_artists)
        self.label_112.setObjectName("label_112")
        self.verticalLayout_20.addWidget(self.label_112)
        self.run_options_2 = QtWidgets.QGroupBox(self.advanced_artists)
        self.run_options_2.setTitle("")
        self.run_options_2.setObjectName("run_options_2")
        self._13 = QtWidgets.QVBoxLayout(self.run_options_2)
        self._13.setContentsMargins(9, 9, 9, 9)
        self._13.setSpacing(2)
        self._13.setObjectName("_13")
        self.cea_orchestras_2 = QtWidgets.QLabel(self.run_options_2)
        self.cea_orchestras_2.setObjectName("cea_orchestras_2")
        self._13.addWidget(self.cea_orchestras_2)
        self.cea_orchestras = QtWidgets.QLineEdit(self.run_options_2)
        self.cea_orchestras.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_orchestras.setObjectName("cea_orchestras")
        self._13.addWidget(self.cea_orchestras)
        self.cea_choirs_2 = QtWidgets.QLabel(self.run_options_2)
        self.cea_choirs_2.setObjectName("cea_choirs_2")
        self._13.addWidget(self.cea_choirs_2)
        self.cea_choirs = QtWidgets.QLineEdit(self.run_options_2)
        self.cea_choirs.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_choirs.setObjectName("cea_choirs")
        self._13.addWidget(self.cea_choirs)
        self.cea_groups_2 = QtWidgets.QLabel(self.run_options_2)
        self.cea_groups_2.setObjectName("cea_groups_2")
        self._13.addWidget(self.cea_groups_2)
        self.cea_groups = QtWidgets.QLineEdit(self.run_options_2)
        self.cea_groups.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_groups.setObjectName("cea_groups")
        self._13.addWidget(self.cea_groups)
        self.verticalLayout_20.addWidget(self.run_options_2)
        self.verticalLayout_56.addWidget(self.advanced_artists)
        self.verticalLayout_18.addWidget(self.frame_38)
        self.frame_39 = QtWidgets.QFrame(self.scrollAreaWidgetContents_2)
        self.frame_39.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_39.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_39.setObjectName("frame_39")
        self.verticalLayout_57 = QtWidgets.QVBoxLayout(self.frame_39)
        self.verticalLayout_57.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_57.setSpacing(0)
        self.verticalLayout_57.setObjectName("verticalLayout_57")
        self.label_113 = QtWidgets.QLabel(self.frame_39)
        self.label_113.setStyleSheet("background-color: rgb(208, 208, 156);")
        self.label_113.setObjectName("label_113")
        self.verticalLayout_57.addWidget(self.label_113)
        self.advanced_works = QtWidgets.QGroupBox(self.frame_39)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.advanced_works.sizePolicy().hasHeightForWidth())
        self.advanced_works.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.advanced_works.setPalette(palette)
        self.advanced_works.setAutoFillBackground(False)
        self.advanced_works.setStyleSheet("background-color: rgb(229, 229, 197);")
        self.advanced_works.setTitle("")
        self.advanced_works.setObjectName("advanced_works")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.advanced_works)
        self.verticalLayout.setObjectName("verticalLayout")
        self._2 = QtWidgets.QHBoxLayout()
        self._2.setContentsMargins(0, 0, 0, 0)
        self._2.setSpacing(6)
        self._2.setObjectName("_2")
        self.label_4 = QtWidgets.QLabel(self.advanced_works)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_4.sizePolicy().hasHeightForWidth())
        self.label_4.setSizePolicy(sizePolicy)
        self.label_4.setObjectName("label_4")
        self._2.addWidget(self.label_4)
        self.cwp_retries = QtWidgets.QSpinBox(self.advanced_works)
        self.cwp_retries.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_retries.setSuffix("")
        self.cwp_retries.setMinimum(0)
        self.cwp_retries.setMaximum(20)
        self.cwp_retries.setObjectName("cwp_retries")
        self._2.addWidget(self.cwp_retries)
        self.verticalLayout.addLayout(self._2)
        self._23 = QtWidgets.QHBoxLayout()
        self._23.setContentsMargins(0, 0, 0, 0)
        self._23.setSpacing(6)
        self._23.setObjectName("_23")
        self.label_120 = QtWidgets.QLabel(self.advanced_works)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_120.sizePolicy().hasHeightForWidth())
        self.label_120.setSizePolicy(sizePolicy)
        self.label_120.setObjectName("label_120")
        self._23.addWidget(self.label_120)
        self.cwp_allow_empty_parts = QtWidgets.QCheckBox(self.advanced_works)
        self.cwp_allow_empty_parts.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cwp_allow_empty_parts.setText("")
        self.cwp_allow_empty_parts.setObjectName("cwp_allow_empty_parts")
        self._23.addWidget(self.cwp_allow_empty_parts)
        self.verticalLayout.addLayout(self._23)
        self.groupBox_51 = QtWidgets.QGroupBox(self.advanced_works)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 167))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 167))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 167))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 167))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 167))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 167))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 167))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 167))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 167))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_51.setPalette(palette)
        self.groupBox_51.setAutoFillBackground(False)
        self.groupBox_51.setStyleSheet("background-color: rgb(241, 241, 167);")
        self.groupBox_51.setTitle("")
        self.groupBox_51.setObjectName("groupBox_51")
        self.verticalLayout_35 = QtWidgets.QVBoxLayout(self.groupBox_51)
        self.verticalLayout_35.setObjectName("verticalLayout_35")
        self.label_114 = QtWidgets.QLabel(self.groupBox_51)
        self.label_114.setObjectName("label_114")
        self.verticalLayout_35.addWidget(self.label_114)
        self._22 = QtWidgets.QHBoxLayout()
        self._22.setContentsMargins(0, 0, 0, 0)
        self._22.setSpacing(6)
        self._22.setObjectName("_22")
        self.label_90 = QtWidgets.QLabel(self.groupBox_51)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_90.sizePolicy().hasHeightForWidth())
        self.label_90.setSizePolicy(sizePolicy)
        self.label_90.setObjectName("label_90")
        self._22.addWidget(self.label_90)
        self.cwp_common_chars = QtWidgets.QSpinBox(self.groupBox_51)
        self.cwp_common_chars.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_common_chars.setSuffix("")
        self.cwp_common_chars.setMinimum(0)
        self.cwp_common_chars.setMaximum(99)
        self.cwp_common_chars.setObjectName("cwp_common_chars")
        self._22.addWidget(self.cwp_common_chars)
        self.verticalLayout_35.addLayout(self._22)
        self.label_89 = QtWidgets.QLabel(self.groupBox_51)
        self.label_89.setObjectName("label_89")
        self.verticalLayout_35.addWidget(self.label_89)
        self.verticalLayout.addWidget(self.groupBox_51)
        self.run_options_3a = QtWidgets.QGroupBox(self.advanced_works)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(202, 202, 140))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(202, 202, 140))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(202, 202, 140))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(202, 202, 140))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(202, 202, 140))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(202, 202, 140))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(202, 202, 140))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(202, 202, 140))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(202, 202, 140))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.run_options_3a.setPalette(palette)
        self.run_options_3a.setAutoFillBackground(False)
        self.run_options_3a.setStyleSheet("background-color: rgb(202, 202, 140);")
        self.run_options_3a.setTitle("")
        self.run_options_3a.setObjectName("run_options_3a")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.run_options_3a)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_115 = QtWidgets.QLabel(self.run_options_3a)
        self.label_115.setObjectName("label_115")
        self.verticalLayout_2.addWidget(self.label_115)
        self._3 = QtWidgets.QHBoxLayout()
        self._3.setContentsMargins(0, 0, 0, 0)
        self._3.setSpacing(6)
        self._3.setObjectName("_3")
        self.label_6 = QtWidgets.QLabel(self.run_options_3a)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
        self.label_6.setSizePolicy(sizePolicy)
        self.label_6.setObjectName("label_6")
        self._3.addWidget(self.label_6)
        self.cwp_proximity = QtWidgets.QSpinBox(self.run_options_3a)
        self.cwp_proximity.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_proximity.setSuffix("")
        self.cwp_proximity.setMaximum(99)
        self.cwp_proximity.setObjectName("cwp_proximity")
        self._3.addWidget(self.cwp_proximity)
        self.verticalLayout_2.addLayout(self._3)
        self._4 = QtWidgets.QHBoxLayout()
        self._4.setContentsMargins(0, 0, 0, 0)
        self._4.setSpacing(6)
        self._4.setObjectName("_4")
        self.label_7 = QtWidgets.QLabel(self.run_options_3a)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
        self.label_7.setSizePolicy(sizePolicy)
        self.label_7.setObjectName("label_7")
        self._4.addWidget(self.label_7)
        self.cwp_end_proximity = QtWidgets.QSpinBox(self.run_options_3a)
        self.cwp_end_proximity.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_end_proximity.setSuffix("")
        self.cwp_end_proximity.setMaximum(99)
        self.cwp_end_proximity.setObjectName("cwp_end_proximity")
        self._4.addWidget(self.cwp_end_proximity)
        self.verticalLayout_2.addLayout(self._4)
        self._5 = QtWidgets.QHBoxLayout()
        self._5.setContentsMargins(0, 0, 0, 0)
        self._5.setSpacing(6)
        self._5.setObjectName("_5")
        self.label_5 = QtWidgets.QLabel(self.run_options_3a)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
        self.label_5.setSizePolicy(sizePolicy)
        self.label_5.setObjectName("label_5")
        self._5.addWidget(self.label_5)
        self.cwp_split_hyphenated = QtWidgets.QCheckBox(self.run_options_3a)
        self.cwp_split_hyphenated.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cwp_split_hyphenated.setText("")
        self.cwp_split_hyphenated.setObjectName("cwp_split_hyphenated")
        self._5.addWidget(self.cwp_split_hyphenated)
        self.verticalLayout_2.addLayout(self._5)
        self._7 = QtWidgets.QHBoxLayout()
        self._7.setContentsMargins(0, 0, 0, 0)
        self._7.setSpacing(6)
        self._7.setObjectName("_7")
        self.label_8 = QtWidgets.QLabel(self.run_options_3a)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_8.sizePolicy().hasHeightForWidth())
        self.label_8.setSizePolicy(sizePolicy)
        self.label_8.setObjectName("label_8")
        self._7.addWidget(self.label_8)
        self.cwp_substring_match = QtWidgets.QSpinBox(self.run_options_3a)
        self.cwp_substring_match.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_substring_match.setMaximum(100)
        self.cwp_substring_match.setObjectName("cwp_substring_match")
        self._7.addWidget(self.cwp_substring_match)
        self.verticalLayout_2.addLayout(self._7)
        self.line_8 = QtWidgets.QFrame(self.run_options_3a)
        self.line_8.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_8.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_8.setObjectName("line_8")
        self.verticalLayout_2.addWidget(self.line_8)
        self.label_92 = QtWidgets.QLabel(self.run_options_3a)
        self.label_92.setObjectName("label_92")
        self.verticalLayout_2.addWidget(self.label_92)
        self.label_91 = QtWidgets.QLabel(self.run_options_3a)
        self.label_91.setObjectName("label_91")
        self.verticalLayout_2.addWidget(self.label_91)
        self.cwp_prepositions = QtWidgets.QLineEdit(self.run_options_3a)
        self.cwp_prepositions.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_prepositions.setObjectName("cwp_prepositions")
        self.verticalLayout_2.addWidget(self.cwp_prepositions)
        self.cwp_removewords_2 = QtWidgets.QLabel(self.run_options_3a)
        self.cwp_removewords_2.setObjectName("cwp_removewords_2")
        self.verticalLayout_2.addWidget(self.cwp_removewords_2)
        self.cwp_removewords = QtWidgets.QLineEdit(self.run_options_3a)
        self.cwp_removewords.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_removewords.setObjectName("cwp_removewords")
        self.verticalLayout_2.addWidget(self.cwp_removewords)
        self.line = QtWidgets.QFrame(self.run_options_3a)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout_2.addWidget(self.line)
        self.cwp_synonyms_2 = QtWidgets.QLabel(self.run_options_3a)
        self.cwp_synonyms_2.setObjectName("cwp_synonyms_2")
        self.verticalLayout_2.addWidget(self.cwp_synonyms_2)
        self.cwp_synonyms = QtWidgets.QTextEdit(self.run_options_3a)
        self.cwp_synonyms.setMaximumSize(QtCore.QSize(16777215, 120))
        self.cwp_synonyms.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_synonyms.setObjectName("cwp_synonyms")
        self.verticalLayout_2.addWidget(self.cwp_synonyms)
        self.label_16 = QtWidgets.QLabel(self.run_options_3a)
        self.label_16.setObjectName("label_16")
        self.verticalLayout_2.addWidget(self.label_16)
        self.cwp_replacements = QtWidgets.QLineEdit(self.run_options_3a)
        self.cwp_replacements.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_replacements.setObjectName("cwp_replacements")
        self.verticalLayout_2.addWidget(self.cwp_replacements)
        self.verticalLayout.addWidget(self.run_options_3a)
        self.verticalLayout_57.addWidget(self.advanced_works)
        self.verticalLayout_18.addWidget(self.frame_39)
        self.frame_40 = QtWidgets.QFrame(self.scrollAreaWidgetContents_2)
        self.frame_40.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_40.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_40.setObjectName("frame_40")
        self.verticalLayout_58 = QtWidgets.QVBoxLayout(self.frame_40)
        self.verticalLayout_58.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_58.setSpacing(0)
        self.verticalLayout_58.setObjectName("verticalLayout_58")
        self.label_116 = QtWidgets.QLabel(self.frame_40)
        self.label_116.setStyleSheet("background-color: rgb(208, 208, 156);")
        self.label_116.setObjectName("label_116")
        self.verticalLayout_58.addWidget(self.label_116)
        self.groupBox_46 = QtWidgets.QGroupBox(self.frame_40)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_46.setPalette(palette)
        self.groupBox_46.setAutoFillBackground(False)
        self.groupBox_46.setStyleSheet("background-color: rgb(229, 229, 197);")
        self.groupBox_46.setTitle("")
        self.groupBox_46.setObjectName("groupBox_46")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.groupBox_46)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.label_85 = QtWidgets.QLabel(self.groupBox_46)
        self.label_85.setObjectName("label_85")
        self.gridLayout_8.addWidget(self.label_85, 1, 0, 1, 1)
        self.cwp_muso_refdb = QtWidgets.QLineEdit(self.groupBox_46)
        self.cwp_muso_refdb.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_muso_refdb.setObjectName("cwp_muso_refdb")
        self.gridLayout_8.addWidget(self.cwp_muso_refdb, 1, 3, 1, 1)
        self.label_84 = QtWidgets.QLabel(self.groupBox_46)
        self.label_84.setObjectName("label_84")
        self.gridLayout_8.addWidget(self.label_84, 1, 2, 1, 1)
        self.cwp_muso_path = QtWidgets.QLineEdit(self.groupBox_46)
        self.cwp_muso_path.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_muso_path.setObjectName("cwp_muso_path")
        self.gridLayout_8.addWidget(self.cwp_muso_path, 1, 1, 1, 1)
        self.label_86 = QtWidgets.QLabel(self.groupBox_46)
        self.label_86.setObjectName("label_86")
        self.gridLayout_8.addWidget(self.label_86, 0, 0, 1, 2)
        self.verticalLayout_58.addWidget(self.groupBox_46)
        self.verticalLayout_18.addWidget(self.frame_40)
        self.frame_41 = QtWidgets.QFrame(self.scrollAreaWidgetContents_2)
        self.frame_41.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_41.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_41.setObjectName("frame_41")
        self.verticalLayout_59 = QtWidgets.QVBoxLayout(self.frame_41)
        self.verticalLayout_59.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_59.setSpacing(0)
        self.verticalLayout_59.setObjectName("verticalLayout_59")
        self.label_117 = QtWidgets.QLabel(self.frame_41)
        self.label_117.setStyleSheet("background-color: rgb(208, 208, 156);")
        self.label_117.setObjectName("label_117")
        self.verticalLayout_59.addWidget(self.label_117)
        self.groupBox_6 = QtWidgets.QGroupBox(self.frame_41)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_6.setPalette(palette)
        self.groupBox_6.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.groupBox_6.setAutoFillBackground(False)
        self.groupBox_6.setStyleSheet("background-color: rgb(229, 229, 197);")
        self.groupBox_6.setTitle("")
        self.groupBox_6.setObjectName("groupBox_6")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.groupBox_6)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.log_error = QtWidgets.QCheckBox(self.groupBox_6)
        self.log_error.setObjectName("log_error")
        self.horizontalLayout_2.addWidget(self.log_error)
        self.log_warning = QtWidgets.QCheckBox(self.groupBox_6)
        self.log_warning.setObjectName("log_warning")
        self.horizontalLayout_2.addWidget(self.log_warning)
        self.log_debug = QtWidgets.QCheckBox(self.groupBox_6)
        self.log_debug.setObjectName("log_debug")
        self.horizontalLayout_2.addWidget(self.log_debug)
        self.groupBox_50 = QtWidgets.QGroupBox(self.groupBox_6)
        self.groupBox_50.setStyleSheet("background-color: rgb(229, 229, 159);")
        self.groupBox_50.setObjectName("groupBox_50")
        self.horizontalLayout_34 = QtWidgets.QHBoxLayout(self.groupBox_50)
        self.horizontalLayout_34.setObjectName("horizontalLayout_34")
        self.log_basic = QtWidgets.QRadioButton(self.groupBox_50)
        self.log_basic.setObjectName("log_basic")
        self.horizontalLayout_34.addWidget(self.log_basic)
        self.log_info = QtWidgets.QRadioButton(self.groupBox_50)
        self.log_info.setObjectName("log_info")
        self.horizontalLayout_34.addWidget(self.log_info)
        self.horizontalLayout_2.addWidget(self.groupBox_50)
        self.verticalLayout_59.addWidget(self.groupBox_6)
        self.verticalLayout_18.addWidget(self.frame_41)
        self.frame_42 = QtWidgets.QFrame(self.scrollAreaWidgetContents_2)
        self.frame_42.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_42.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_42.setObjectName("frame_42")
        self.verticalLayout_60 = QtWidgets.QVBoxLayout(self.frame_42)
        self.verticalLayout_60.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_60.setSpacing(0)
        self.verticalLayout_60.setObjectName("verticalLayout_60")
        self.label_118 = QtWidgets.QLabel(self.frame_42)
        self.label_118.setStyleSheet("background-color: rgb(208, 208, 156);")
        self.label_118.setObjectName("label_118")
        self.verticalLayout_60.addWidget(self.label_118)
        self.frame_6 = QtWidgets.QFrame(self.frame_42)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 197))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.frame_6.setPalette(palette)
        self.frame_6.setAutoFillBackground(False)
        self.frame_6.setStyleSheet("background-color: rgb(229, 229, 197);")
        self.frame_6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_6.setObjectName("frame_6")
        self.verticalLayout_16 = QtWidgets.QVBoxLayout(self.frame_6)
        self.verticalLayout_16.setObjectName("verticalLayout_16")
        self.groupBox_33 = QtWidgets.QGroupBox(self.frame_6)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 159))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 159))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 159))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 159))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 159))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 159))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 159))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 159))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 159))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_33.setPalette(palette)
        self.groupBox_33.setAutoFillBackground(False)
        self.groupBox_33.setStyleSheet("background-color: rgb(229, 229, 159);")
        self.groupBox_33.setObjectName("groupBox_33")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.groupBox_33)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_41 = QtWidgets.QLabel(self.groupBox_33)
        self.label_41.setObjectName("label_41")
        self.horizontalLayout_4.addWidget(self.label_41)
        self.ce_version_tag = QtWidgets.QLineEdit(self.groupBox_33)
        self.ce_version_tag.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.ce_version_tag.setObjectName("ce_version_tag")
        self.horizontalLayout_4.addWidget(self.ce_version_tag)
        self.label_36 = QtWidgets.QLabel(self.groupBox_33)
        self.label_36.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.label_36.setObjectName("label_36")
        self.horizontalLayout_4.addWidget(self.label_36)
        self.cea_options_tag = QtWidgets.QLineEdit(self.groupBox_33)
        self.cea_options_tag.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cea_options_tag.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cea_options_tag.setObjectName("cea_options_tag")
        self.horizontalLayout_4.addWidget(self.cea_options_tag)
        self.label_38 = QtWidgets.QLabel(self.groupBox_33)
        self.label_38.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.label_38.setObjectName("label_38")
        self.horizontalLayout_4.addWidget(self.label_38)
        self.cwp_options_tag = QtWidgets.QLineEdit(self.groupBox_33)
        self.cwp_options_tag.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.cwp_options_tag.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.cwp_options_tag.setObjectName("cwp_options_tag")
        self.horizontalLayout_4.addWidget(self.cwp_options_tag)
        self.verticalLayout_16.addWidget(self.groupBox_33)
        self.groupBox_10 = QtWidgets.QGroupBox(self.frame_6)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 159))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 159))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 159))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 159))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 159))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 159))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 159))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 159))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 229, 159))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.groupBox_10.setPalette(palette)
        self.groupBox_10.setAutoFillBackground(False)
        self.groupBox_10.setStyleSheet("background-color: rgb(229, 229, 159);")
        self.groupBox_10.setObjectName("groupBox_10")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout(self.groupBox_10)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.cea_override = QtWidgets.QCheckBox(self.groupBox_10)
        self.cea_override.setObjectName("cea_override")
        self.horizontalLayout_10.addWidget(self.cea_override)
        self.cwp_override = QtWidgets.QCheckBox(self.groupBox_10)
        self.cwp_override.setObjectName("cwp_override")
        self.horizontalLayout_10.addWidget(self.cwp_override)
        self.ce_genres_override = QtWidgets.QCheckBox(self.groupBox_10)
        self.ce_genres_override.setEnabled(True)
        self.ce_genres_override.setObjectName("ce_genres_override")
        self.horizontalLayout_10.addWidget(self.ce_genres_override)
        self.ce_tagmap_override = QtWidgets.QCheckBox(self.groupBox_10)
        self.ce_tagmap_override.setEnabled(True)
        self.ce_tagmap_override.setObjectName("ce_tagmap_override")
        self.horizontalLayout_10.addWidget(self.ce_tagmap_override)
        self.line_11 = QtWidgets.QFrame(self.groupBox_10)
        self.line_11.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_11.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_11.setObjectName("line_11")
        self.horizontalLayout_10.addWidget(self.line_11)
        self.ce_options_overwrite = QtWidgets.QCheckBox(self.groupBox_10)
        self.ce_options_overwrite.setStyleSheet("background-color: rgb(255, 0, 0);")
        self.ce_options_overwrite.setObjectName("ce_options_overwrite")
        self.horizontalLayout_10.addWidget(self.ce_options_overwrite)
        self.verticalLayout_16.addWidget(self.groupBox_10)
        self.label_121 = QtWidgets.QLabel(self.frame_6)
        self.label_121.setObjectName("label_121")
        self.verticalLayout_16.addWidget(self.label_121)
        self.verticalLayout_60.addWidget(self.frame_6)
        self.verticalLayout_18.addWidget(self.frame_42)
        self.label_83 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.label_83.setObjectName("label_83")
        self.verticalLayout_18.addWidget(self.label_83)
        self.scrollArea_2.setWidget(self.scrollAreaWidgetContents_2)
        self.horizontalLayout_31.addWidget(self.scrollArea_2)
        self.tabWidget.addTab(self.Advanced, "")
        self.Help = QtWidgets.QWidget()
        self.Help.setObjectName("Help")
        self.scrollArea_5 = QtWidgets.QScrollArea(self.Help)
        self.scrollArea_5.setGeometry(QtCore.QRect(0, -10, 671, 561))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_5.sizePolicy().hasHeightForWidth())
        self.scrollArea_5.setSizePolicy(sizePolicy)
        self.scrollArea_5.setWidgetResizable(True)
        self.scrollArea_5.setObjectName("scrollArea_5")
        self.scrollAreaWidgetContents_4 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_4.setGeometry(QtCore.QRect(0, 0, 669, 559))
        self.scrollAreaWidgetContents_4.setObjectName("scrollAreaWidgetContents_4")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.scrollAreaWidgetContents_4)
        self.textBrowser_2.setGeometry(QtCore.QRect(9, 109, 641, 421))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_2.sizePolicy().hasHeightForWidth())
        self.textBrowser_2.setSizePolicy(sizePolicy)
        self.textBrowser_2.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.textBrowser_2.setOpenExternalLinks(True)
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.label_58 = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        self.label_58.setGeometry(QtCore.QRect(9, 9, 471, 16))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_58.sizePolicy().hasHeightForWidth())
        self.label_58.setSizePolicy(sizePolicy)
        self.label_58.setText("")
        self.label_58.setObjectName("label_58")
        self.textBrowser_3 = QtWidgets.QTextBrowser(self.scrollAreaWidgetContents_4)
        self.textBrowser_3.setGeometry(QtCore.QRect(9, 28, 641, 81))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_3.sizePolicy().hasHeightForWidth())
        self.textBrowser_3.setSizePolicy(sizePolicy)
        self.textBrowser_3.setOpenExternalLinks(True)
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.scrollArea_5.setWidget(self.scrollAreaWidgetContents_4)
        self.tabWidget.addTab(self.Help, "")
        self.vboxlayout.addWidget(self.tabWidget)
        self.label_4.setBuddy(self.cwp_retries)
        self.label_120.setBuddy(self.cwp_retries)
        self.label_90.setBuddy(self.cwp_retries)
        self.label_6.setBuddy(self.cwp_retries)
        self.label_7.setBuddy(self.cwp_retries)
        self.label_5.setBuddy(self.cwp_retries)
        self.label_8.setBuddy(self.cwp_retries)

        self.retranslateUi(ClassicalExtrasOptionsPage)
        self.tabWidget.setCurrentIndex(5)
        self.cea_ra_use.toggled['bool'].connect(self.groupBox_30.setEnabled)
        self.use_cea.toggled['bool'].connect(self.groupBox_29.setEnabled)
        self.cea_ra_replace_ta.toggled['bool'].connect(self.cea_ra_noblank_ta.setEnabled)
        self.use_cea.toggled['bool'].connect(self.groupBox_31.setEnabled)
        self.use_cwp.toggled['bool'].connect(self.cwp_collections.setEnabled)
        self.cea_split_lyrics.toggled['bool'].connect(self.groupBox_32.setEnabled)
        self.use_cwp.toggled['bool'].connect(self.use_cache.setEnabled)
        self.use_cea.toggled['bool'].connect(self.groupBox_5.setEnabled)
        self.use_cea.toggled['bool'].connect(self.artist_tags.setEnabled)
        self.cea_arrangers.toggled['bool'].connect(self.groupBox_9.setEnabled)
        self.cea_arrangers.toggled['bool'].connect(self.groupBox_28.setEnabled)
        self.toolButton_1.toggled['bool'].connect(self.cea_source_1.setEnabled)
        self.toolButton_2.toggled['bool'].connect(self.cea_source_2.setEnabled)
        self.toolButton_3.toggled['bool'].connect(self.cea_source_3.setEnabled)
        self.toolButton_4.toggled['bool'].connect(self.cea_source_4.setEnabled)
        self.toolButton_5.toggled['bool'].connect(self.cea_source_5.setEnabled)
        self.toolButton_6.toggled['bool'].connect(self.cea_source_6.setEnabled)
        self.toolButton_7.toggled['bool'].connect(self.cea_source_7.setEnabled)
        self.toolButton_8.toggled['bool'].connect(self.cea_source_8.setEnabled)
        self.toolButton_9.toggled['bool'].connect(self.cea_source_9.setEnabled)
        self.toolButton_10.toggled['bool'].connect(self.cea_source_10.setEnabled)
        self.toolButton_11.toggled['bool'].connect(self.cea_source_11.setEnabled)
        self.toolButton_12.toggled['bool'].connect(self.cea_source_12.setEnabled)
        self.toolButton_13.toggled['bool'].connect(self.cea_source_13.setEnabled)
        self.toolButton_14.toggled['bool'].connect(self.cea_source_14.setEnabled)
        self.toolButton_15.toggled['bool'].connect(self.cea_source_15.setEnabled)
        self.toolButton_16.toggled['bool'].connect(self.cea_source_16.setEnabled)
        self.use_cea.toggled['bool'].connect(self.advanced_artists.setEnabled)
        self.use_cwp.toggled['bool'].connect(self.advanced_works.setEnabled)
        self.use_cea.toggled['bool'].connect(self.frame_23.setEnabled)
        self.use_cea.toggled['bool'].connect(self.label_93.setEnabled)
        self.use_cea.toggled['bool'].connect(self.label_94.setEnabled)
        self.use_cea.toggled['bool'].connect(self.label_95.setEnabled)
        self.use_cea.toggled['bool'].connect(self.label_96.setEnabled)
        self.use_cwp.toggled['bool'].connect(self.Style.setEnabled)
        self.use_cwp.toggled['bool'].connect(self.label_99.setEnabled)
        self.use_cwp.toggled['bool'].connect(self.groupBox_18.setEnabled)
        self.use_cwp.toggled['bool'].connect(self.label_100.setEnabled)
        self.use_cwp.toggled['bool'].connect(self.Tags.setEnabled)
        self.use_cwp.toggled['bool'].connect(self.label_101.setEnabled)
        self.use_cwp.toggled['bool'].connect(self.groupBox_12.setEnabled)
        self.use_cwp.toggled['bool'].connect(self.frame_29.setEnabled)
        self.use_cwp.toggled['bool'].connect(self.groupBox_17.setEnabled)
        self.use_cwp.toggled['bool'].connect(self.label_103.setEnabled)
        self.use_cea.toggled['bool'].connect(self.label_111.setEnabled)
        self.use_cwp.toggled['bool'].connect(self.label_113.setEnabled)
        self.cwp_use_muso_refdb.toggled['bool'].connect(self.cwp_muso_genres.setVisible)
        self.cwp_use_muso_refdb.toggled['bool'].connect(self.cwp_muso_genres.setChecked)
        self.cwp_use_muso_refdb.toggled['bool'].connect(self.cwp_muso_classical.setVisible)
        self.cwp_use_muso_refdb.toggled['bool'].connect(self.cwp_muso_classical.setChecked)
        self.cwp_use_muso_refdb.toggled['bool'].connect(self.cwp_muso_dates.setVisible)
        self.cwp_use_muso_refdb.toggled['bool'].connect(self.cwp_muso_periods.setVisible)
        self.cwp_use_muso_refdb.toggled['bool'].connect(self.cwp_muso_dates.setChecked)
        self.cwp_use_muso_refdb.toggled['bool'].connect(self.cwp_muso_periods.setChecked)
        self.cwp_muso_genres.toggled['bool'].connect(self.cwp_genres_classical_main.setHidden)
        self.cwp_muso_classical.toggled['bool'].connect(self.cwp_genres_arranger_as_composer.setVisible)
        self.cwp_muso_dates.toggled['bool'].connect(self.cwp_periods_arranger_as_composer.setVisible)
        self.cwp_muso_periods.toggled['bool'].connect(self.cwp_period_map.setHidden)
        self.cwp_muso_periods.toggled['bool'].connect(self.label_87.setHidden)
        self.cwp_genres_filter.toggled['bool'].connect(self.groupBox_36.setVisible)
        QtCore.QMetaObject.connectSlotsByName(ClassicalExtrasOptionsPage)

    def retranslateUi(self, ClassicalExtrasOptionsPage):
        _translate = QtCore.QCoreApplication.translate
        self.Artists.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><br/></p></body></html>"))
        self.use_cea.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>should be selected otherwise this section will not run</p></body></html>"))
        self.use_cea.setText(_translate("ClassicalExtrasOptionsPage", "Create extra artist metadata (MUST BE TICKED FOR THIS SECTION TO RUN)"))
        self.label_79.setText(_translate("ClassicalExtrasOptionsPage", "(Note that the \"infer work-types\" option has moved to the \"genres\" tab)"))
        self.label_43.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600; font-style:italic;\">The naming style for \'artist\' tags is set in the main Picard Options-&gt;Metadata section</span></p></body></html>"))
        self.label_93.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Work-artist / performer naming options</span></p></body></html>"))
        self.frame_23.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>&quot;Work-artists&quot; are types such as composer, writer, arranger and lyricist who belong to the MusicBrainz Work-Artist relationship</p><p>&quot;Performers&quot; are types such as performer and conductor who belong to the MusicBrainz Recording-Artist relationship</p></body></html>"))
        self.label_22.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>This section does not change the contents of &quot;artist&quot; or &quot;album artist&quot; tags - it only affects writer (composer etc.) and peformer tags, by using as-credited/alias names from the artist data for the release.</p></body></html>"))
        self.groupBox_7.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><br/></p></body></html>"))
        self.groupBox_7.setTitle(_translate("ClassicalExtrasOptionsPage", "Credited-as options:-"))
        self.groupBox_26.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Select the source for \'as-credited\' names - whether these are applied depends on the sub-options choices.</p></body></html>"))
        self.groupBox_26.setTitle(_translate("ClassicalExtrasOptionsPage", "Names to use..."))
        self.cea_recording_credited.setText(_translate("ClassicalExtrasOptionsPage", "Use \"credited as\" name for work-artists/performers who are recording artists"))
        self.cea_group_credited.setText(_translate("ClassicalExtrasOptionsPage", "and/or release group artists"))
        self.cea_credited.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><br/></p></body></html>"))
        self.cea_credited.setText(_translate("ClassicalExtrasOptionsPage", "and/or release artists"))
        self.cea_release_relationship_credited.setText(_translate("ClassicalExtrasOptionsPage", "and/or release relationship artists"))
        self.cea_recording_relationship_credited.setText(_translate("ClassicalExtrasOptionsPage", "and/or recording relationship artists"))
        self.cea_track_credited.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><br/></p></body></html>"))
        self.cea_track_credited.setText(_translate("ClassicalExtrasOptionsPage", "and/or track artists"))
        self.label_24.setText(_translate("ClassicalExtrasOptionsPage", "The above are applied in sequence - e.g. track artist credit will over-ride release artist credit."))
        self.label_88.setText(_translate("ClassicalExtrasOptionsPage", "Names are cached. A restart is necessary if any of the above name sources are removed."))
        self.groupBox_27.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Select the tag types where any \'as-credited\' names will be applied - whether these are applied depends on the sub-options choices.</p></body></html>"))
        self.groupBox_27.setTitle(_translate("ClassicalExtrasOptionsPage", "Places to use them ..."))
        self.cea_performer_credited.setText(_translate("ClassicalExtrasOptionsPage", "Use for performing artists"))
        self.cea_composer_credited.setText(_translate("ClassicalExtrasOptionsPage", "Use for work-artists"))
        self.groupBox_25.setTitle(_translate("ClassicalExtrasOptionsPage", "Sub-options"))
        self.cea_alias_overrides.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Alias (if it exists) will over-ride as-credited</p></body></html>"))
        self.cea_alias_overrides.setText(_translate("ClassicalExtrasOptionsPage", "Alias over-rides credited-as"))
        self.cea_credited_overrides.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>As-credited (if it exists) will over-ride alias</p></body></html>"))
        self.cea_credited_overrides.setText(_translate("ClassicalExtrasOptionsPage", "Credited-as over-rides MB/Alias"))
        self.cea_cyrillic.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Will be based on sort names. For cyrillic script names, patronyms will be removed.</p></body></html>"))
        self.cea_cyrillic.setText(_translate("ClassicalExtrasOptionsPage", "Fix non-Latin text in names (where possible and if not fixed by other naming options)"))
        self.groupBox_24.setTitle(_translate("ClassicalExtrasOptionsPage", "MusicBrainz standard names and Aliases"))
        self.cea_no_aliases.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Do not use aliases (but may be replaced by as-credited name)</p></body></html>"))
        self.cea_no_aliases.setText(_translate("ClassicalExtrasOptionsPage", "Use MB standard names"))
        self.cea_aliases.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Alias will only be available for use if the work-artist/performer is also a release artist, recording artist or track artist.</p></body></html>"))
        self.cea_aliases.setText(_translate("ClassicalExtrasOptionsPage", "Use alias for all work-artists/performers"))
        self.cea_aliases_composer.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Only use alias (if available) for work-artists (writers, composers, arrangers, lyricists etc.)</p></body></html>"))
        self.cea_aliases_composer.setText(_translate("ClassicalExtrasOptionsPage", "Use alias for work-artists only"))
        self.label_94.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Recording artist options</span></p></body></html>"))
        self.groupBox_29.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Select recording artist options (see &quot;What\'s this&quot;)</p></body></html>"))
        self.groupBox_29.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>In MusicBrainz, the recording artist may be different from the track artist. For classical music, the MusicBrainz guidelines state that the track artist should be the composer; however the recording artist(s) is/are usually the principal performer(s).</p><p>Classical Extras puts the recording artists into \'hidden variables\' (as a minimum) using the chosen naming convention.</p><p>There is also option to allow you to replace the track artist by the recording artist (or to merge them). The chosen action will be applied to the \'artist\', \'artists\', \'artistsort\' and \'artists_sort\' tags. Note that \'artist\' is a single-valued string whereas \'artists\' is a list and may be multi-valued. Lists are properly merged, but because the \'artist\' string may have different join-phrases etc, a merged tag may have the recording artist(s) in brackets after the track artist(s).</p></body></html>"))
        self.groupBox_34.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>In classical music (in MusicBrainz), recording artists will usually be performers whereas track artists are composers. By default, the naming convention for performers (set in the previous section) will be used (although only the as-credited name set for the recording artist will be applied). Alternatively, the naming convention for track artists can be used - which is determined by the main Picard metadat options.</p></body></html>"))
        self.groupBox_34.setTitle(_translate("ClassicalExtrasOptionsPage", "Naming convention as for ..."))
        self.cea_ra_trackartist.setText(_translate("ClassicalExtrasOptionsPage", "...track artist (set in Picard options)"))
        self.cea_ra_performer.setText(_translate("ClassicalExtrasOptionsPage", "... perfomers (set above)"))
        self.cea_ra_use.setText(_translate("ClassicalExtrasOptionsPage", "Use recording artists to update track artists ->"))
        self.groupBox_30.setTitle(_translate("ClassicalExtrasOptionsPage", "Replace/merge options"))
        self.cea_ra_replace_ta.setText(_translate("ClassicalExtrasOptionsPage", "Replace track artist by recording artist"))
        self.cea_ra_noblank_ta.setText(_translate("ClassicalExtrasOptionsPage", "Only replace if rec. artist exists"))
        self.cea_ra_merge_ta.setText(_translate("ClassicalExtrasOptionsPage", "Merge track artist and recording artist"))
        self.label_95.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Other artist options</span></p></body></html>"))
        self.groupBox_9.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Enter text to appear in annotations. Do not use any quotation marks.</p></body></html>"))
        self.groupBox_9.setTitle(_translate("ClassicalExtrasOptionsPage", "Annotations - performers and lyricists"))
        self.label_44.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Annotation to include with &quot;chorus master&quot; in conductor tag.</p></body></html>"))
        self.label_44.setText(_translate("ClassicalExtrasOptionsPage", "Chorus Master"))
        self.label_46.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Annotation to include for &quot;concert master&quot; in performer tag.</p></body></html>"))
        self.label_46.setText(_translate("ClassicalExtrasOptionsPage", "Concert Master"))
        self.label_34.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Annotation for lyricist, to include in lyricist tag</p></body></html>"))
        self.label_34.setText(_translate("ClassicalExtrasOptionsPage", "Lyricist"))
        self.label_26.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Annotation for librettist, to include in lyricist tag</p></body></html>"))
        self.label_26.setText(_translate("ClassicalExtrasOptionsPage", "Librettist"))
        self.label_30.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Annotation for translator, to include in lyricist tag</p></body></html>"))
        self.label_30.setText(_translate("ClassicalExtrasOptionsPage", "Translator"))
        self.groupBox_8.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Select as required. See &quot;What\'s this&quot; for details.</p></body></html>"))
        self.cea_arrangers.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><br/></p></body></html>"))
        self.cea_arrangers.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>This will gather together, for example, any arranger-type information from the recording, work or parent works and place it in the &quot;arranger&quot; tag (\'host\' tag), with the annotation (see details to right of this box) in brackets. All arranger types will also be put in a hidden variable, e.g. _cwp_orchestrators. The table below shows the artist types, host tag and hidden variable for each artist type.</p><p>| Artist type | Host tag | Hidden variable |</p><p>| ----------------- | ------------------| -------------------------------------- |</p><p>| writer | composer | writers |</p><p>| lyricist | lyricist | lyricists |</p><p>| librettist | lyricist | librettists |</p><p>| revised by | arranger | revisors |</p><p>| translator | lyricist | translators |</p><p>| arranger | arranger | arrangers |</p><p>| reconstructed by | arranger | reconstructors |</p><p>| orchestrator | arranger | orchestrators |</p><p>| instrument arranger | arranger | arrangers (with instrument type in brackets) |</p><p>| vocal arranger | arranger | arrangers (with voice type in brackets) |</p><p>| chorus master | conductor | chorusmasters |</p><p>| concertmaster | performer (with annotation as a sub-key) | leaders |</p></body></html>"))
        self.cea_arrangers.setText(_translate("ClassicalExtrasOptionsPage", "Modify host tags and include annotations (see =>)"))
        self.cea_composer_album.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><br/></p></body></html>"))
        self.cea_composer_album.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>This will add the composer(s) last name(s) before the album name, if they are listed as album artists. If there is more than one composer, they will be listed in the descending order of the length of their music on the release.</p></body></html>"))
        self.cea_composer_album.setText(_translate("ClassicalExtrasOptionsPage", "Name album as \"Composer Last Name(s): Album Name\""))
        self.cea_no_lyricists.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>This applies to both the Picard \'lyricist\' tag and the related internal plugin hidden variables \'_cwp_lyricists\' etc.</p></body></html>"))
        self.cea_no_lyricists.setText(_translate("ClassicalExtrasOptionsPage", "Do not write \'lyricist\' tag if no vocal performers"))
        self.cea_inst_credit.setText(_translate("ClassicalExtrasOptionsPage", "Use \"credited-as\" name for instrument"))
        self.cea_no_solo.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Select to eliminate &quot;additional&quot;, &quot;solo&quot; or &quot;guest&quot; from instrument description</p></body></html>"))
        self.cea_no_solo.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>MusicBrainz permits the use of &quot;solo&quot;, &quot;guest&quot; and &quot;additional&quot; as instrument attributes although, for classical music, its use should be fairly rare - usually only if explicitly stated as a &quot;solo&quot; on the the sleevenotes. Classical Extras provides the option to exclude these attributes (the default), but you may wish to enable them for certain releases or non-Classical / cross-over releases.</p></body></html>"))
        self.cea_no_solo.setText(_translate("ClassicalExtrasOptionsPage", "Do not include attributes (e.g. \'solo\') in an instrument type"))
        self.groupBox_28.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Enter text to appear in annotations. Do not use any quotation marks.</p></body></html>"))
        self.groupBox_28.setTitle(_translate("ClassicalExtrasOptionsPage", "Annotations - writers and arrangers"))
        self.label_56.setText(_translate("ClassicalExtrasOptionsPage", "Writer"))
        self.label_54.setText(_translate("ClassicalExtrasOptionsPage", "Arranger"))
        self.label_45.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Text with which to annotate orchestrator in the arranger tag.</p></body></html>"))
        self.label_45.setText(_translate("ClassicalExtrasOptionsPage", "Orchestrator"))
        self.label_32.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Annotation for &quot;reconstructed by&quot;, to include in arranger tag</p></body></html>"))
        self.label_32.setText(_translate("ClassicalExtrasOptionsPage", "Reconstructed by"))
        self.label_28.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Annotation for &quot;revised by&quot;, to include in arranger tag tag</p></body></html>"))
        self.label_28.setText(_translate("ClassicalExtrasOptionsPage", "Revised by"))
        self.label_96.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Lyrics</span></p></body></html>"))
        self.groupBox_31.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Please note that this section operates on the underlying input file tags, not the Picard-generated tags (MusicBrainz does not have lyrics)</span></p><p>  Sometimes &quot;lyrics&quot; tags can contain album notes (repeated for every track in an album) as well as track notes and lyrics. This section will filter out the common text and place it in a different tag from the text which is unique to each track.</p></body></html>"))
        self.cea_split_lyrics.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>enables this section</p></body></html>"))
        self.cea_split_lyrics.setText(_translate("ClassicalExtrasOptionsPage", "Split lyrics tag into track and album levels"))
        self.groupBox_32.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Enter a valid tag name (no spaces, punctuation or special charcaters other than underline; use lower case)</p></body></html>"))
        self.label_50.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>The name of the lyrics file tag in the input file (normally just \'lyrics\')</p></body></html>"))
        self.label_50.setText(_translate("ClassicalExtrasOptionsPage", "Incoming lyrics tag (i.e. file tag)"))
        self.label_51.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>The name of the tag where common text should be placed</p></body></html>"))
        self.label_51.setText(_translate("ClassicalExtrasOptionsPage", "Tag for album notes / lyrics"))
        self.label_52.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>The name of the tag where notes/lyrics unique to a track should be placed</p></body></html>"))
        self.label_52.setText(_translate("ClassicalExtrasOptionsPage", "Tag for track notes / lyrics"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Artists), _translate("ClassicalExtrasOptionsPage", "Artists"))
        self.use_cwp.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>&quot;Include all work levels&quot; should be selected otherwise this section will not run.</p></body></html>"))
        self.use_cwp.setText(_translate("ClassicalExtrasOptionsPage", "Include all work levels (MUST BE TICKED FOR THIS SECTION TO RUN)*"))
        self.cwp_collections.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>This will include parent works where the relationship has the attribute \'part of collection\'.<br/>PLEASE BE CONSISTENT and do not use different options on albums with the same works, or the results may be unexpected.</p></body></html>"))
        self.cwp_collections.setText(_translate("ClassicalExtrasOptionsPage", "Include collection relationships (but not \"series\")"))
        self.use_cache.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Select to use cached works. Deselect to refesh from MusicBrainz.</p></body></html>"))
        self.use_cache.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>&quot;Use cache&quot; prevents excessive look-ups of the MB database. Every look-up of a parent work needs to be performed separately (hopefully the MB database might make this easier some day). Network usage constraints by MB means that each look-up takes a minimum of 1 second. Once a release has been looked-up, the works are retained in cache, significantly reducing the time required if, say, the options are changed and the data refreshed. However, if the user edits the works in the MB database then the cache will need to be turned off temporarily for the refresh to find the new/changed works. Also some types of work (e.g. arrangements) will require a full look-up if options have been changed.</p></body></html>"))
        self.use_cache.setText(_translate("ClassicalExtrasOptionsPage", "Use cache (if available)*"))
        self.label_99.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Tagging style</span></p></body></html>"))
        self.Style.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">&quot;Tagging style&quot;. This section determines how the hierarchy of works will be sourced. </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Works source</span>: There are 3 options for determing the principal source of the works metadata </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">&quot;Use only metadata from title text&quot;. The plugin will attempt to extract the hierarchy of works from the track title by looking for repetitions and patterns. If the title does not contain all the work names in the hierarchy then obviously this will limit what can be provided. </p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">&quot;Use only metadata from canonical works&quot;. The hierarchy in the MB database will be used. Assuming the work is correctly entered in MB, this should provide all the data. However the text may differ from the track titles and will be the same for all recordings. It may also be in the language of the composer whereas the titles will probably be in the language of the release. (This language issue can also be addressed by using aliases - see below). </p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">&quot;Use canonical work metadata enhanced with title text&quot;. This supplements the canonical data with text from the titles <span style=\" font-weight:600;\">where it is significantly different</span>. The supplementary title data will be in curly brackets. This is clearly the most complete metadata style of the three but may lead to long descriptions. It is particularly useful for providing translations.</p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Source of canonical work text</span>. Where either of the second two options above are chosen, there is a further choice to be made: </p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">&quot;Full MusicBrainz work hierarchy&quot;. The names of each level of work are used to populate the relevant tags. E.g. if &quot;Má vlast: I. Vyšehrad, JB 1:112/1&quot; (level 0) is part of &quot;Má vlast, JB 1:112&quot; (level 1) then the parent work will be tagged as &quot;Má vlast, JB 1:112&quot;, not &quot;Má vlast&quot;. So, while accurate, this option might be more verbose. </p>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">&quot;Consistent with lowest level work description&quot;. The names of the level 0 work are used to populate the relevant tags. I.e. if &quot;Má vlast: I. Vyšehrad, JB 1:112/1&quot; (level 0) is part of &quot;Má vlast, JB 1:112&quot; (level 1) then the parent work will be tagged as &quot;Má vlast&quot;, not &quot;Má vlast, JB 1:112&quot;. This frequently looks better, but not always, <span style=\" font-weight:600;\">particularly if the level 0 work name does not contain all the parent work detail</span>. If the full structure is not implicit in the level 0 name then a warning will be logged and written to the &quot;warning&quot; tag. </p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Strategy for setting style:</span> <span style=\" font-style:italic;\">It is suggested that you start with &quot;extended/enhanced&quot; style and the &quot;Consistent with lowest level work description&quot; as the source (this is the default). If this does not give acceptable results, try switching to &quot;Full MusicBrainz work hierarchy&quot;. If the &quot;enhanced&quot; details in curly brackets (from the track title) give odd results then switch the style to &quot;canonical works&quot; only. Any remaining oddities are then probably in the MusicBrainz data, which may require editing.</span> </p></body></html>"))
        self.groupBox_4.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>There are 3 options for determing the principal source of the works metadata</p><p>      - &quot;Use only metadata from title text&quot;. The plugin will attempt to extract the hierarchy of works from the track title by looking for repetitions and patterns. If the title does not contain all the work names in the hierarchy then obviously this will limit what can be provided.</p><p>      - &quot;Use only metadata from canonical works&quot;. The hierarchy in the MB database will be used. Assuming the work is correctly entered in MB, this should provide all the data. However the text may differ from the track titles and will be the same for all recordings. It may also be in the language of the composer whereas the titles will be in the language of the release.</p><p>      - &quot;Use canonical work metadata enhanced with title text&quot;. This supplements the canonical data with text from the titles <span style=\" font-weight:600;\">where it is significantly different</span>. The supplementary data will be in curly brackets. This is clearly the most complete metadata style of the three but may lead to long descriptions. It is particularly useful for providing translations - see image below for an example (using the Muso library manager).</p></body></html>"))
        self.groupBox_4.setTitle(_translate("ClassicalExtrasOptionsPage", "Works source"))
        self.cwp_titles.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>&quot;Use only metadata from title text&quot;. The plugin will attempt to extract the hierarchy of works from the track title by looking for repetitions and patterns. If the title does not contain all the work names in the hierarchy then obviously this will limit what can be provided.</p></body></html>"))
        self.cwp_titles.setText(_translate("ClassicalExtrasOptionsPage", "Use only metadata from title text"))
        self.cwp_works.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>&quot;Use only metadata from canonical works&quot;. The hierarchy in the MB database will be used. Assuming the work is correctly entered in MB, this should provide all the data. However the text may differ from the track titles and will be the same for all recordings. It may also be in the language of the composer whereas the titles will probably be in the language of the release. (This language issue can also be addressed by using aliases - see below).</p></body></html>"))
        self.cwp_works.setText(_translate("ClassicalExtrasOptionsPage", "Use only metadata from canonical works"))
        self.cwp_extended.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>&quot;Use canonical work metadata enhanced with title text&quot;. This supplements the canonical data with text from the titles **where it is significantly different**. The supplementary title data will be in curly brackets. This is clearly the most complete metadata style of the three but may lead to long descriptions. It is particularly useful for providing translations</p></body></html>"))
        self.cwp_extended.setText(_translate("ClassicalExtrasOptionsPage", "Use canonical work metadata enhanced with title text"))
        self.groupBox_16.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Where either of the second two options above are chosen, there is a further choice to be made:</p><p>      - &quot;Full MusicBrainz work hierarchy&quot;. The names of each level of work are used to populate the relevant tags. I.e. if &quot;Má vlast: I. Vyšehrad, JB 1:112/1&quot; (level 0) is part of &quot;Má vlast, JB 1:112&quot; (level 1) then the parent work will be tagged as &quot;Má vlast, JB 1:112&quot;, not &quot;Má vlast&quot;. So, while accurate, this option might be more verbose.</p><p>      - &quot;Consistent with lowest level work description&quot;. The names of the level 0 work are used to populate the relevant tags. I.e. if &quot;Má vlast: I. Vyšehrad, JB 1:112/1&quot; (level 0) is part of &quot;Má vlast, JB 1:112&quot; (level 1) then the parent work will be tagged as &quot;Má vlast&quot;, not &quot;Má vlast, JB 1:112&quot;. This frequently looks better, but not always, <span style=\" font-weight:600;\">particularly if the level 0 work name does not contain all the parent work detail</span>. If the full structure is not implicit in the level 0 name then a warning will be logged and written to the &quot;warning&quot; tag.</p></body></html>"))
        self.groupBox_16.setTitle(_translate("ClassicalExtrasOptionsPage", "Source of canonical work text (if applicable)"))
        self.cwp_hierarchical_works.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>&quot;Full MusicBrainz work hierarchy&quot;. The names of each level of work are used to populate the relevant tags. E.g. if &quot;Má vlast: I. Vyšehrad, JB 1:112/1&quot; (level 0) is part of &quot;Má vlast, JB 1:112&quot; (level 1) then the parent work will be tagged as &quot;Má vlast, JB 1:112&quot;, not &quot;Má vlast&quot;. So, while accurate, this option might be more verbose.</p></body></html>"))
        self.cwp_hierarchical_works.setText(_translate("ClassicalExtrasOptionsPage", "Full MusicBrainz work hierarchy (may be more verbose)"))
        self.cwp_level0_works.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>&quot;Consistent with lowest level work description&quot;. The names of the level 0 work are used to populate the relevant tags. I.e. if &quot;Má vlast: I. Vyšehrad, JB 1:112/1&quot; (level 0) is part of &quot;Má vlast, JB 1:112&quot; (level 1) then the parent work will be tagged as &quot;Má vlast&quot;, not &quot;Má vlast, JB 1:112&quot;. This frequently looks better, but not always, <span style=\" font-weight:600;\">particularly if the level 0 work name does not contain all the parent work detail</span>. If the full structure is not implicit in the level 0 name then a warning will be logged and written to the &quot;warning&quot; tag.</p></body></html>"))
        self.cwp_level0_works.setText(_translate("ClassicalExtrasOptionsPage", "Consistent with lowest level work description (may be less verbose, but not always complete)"))
        self.label_100.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Aliases</span> (NB Use a consistent approach throughout the library otherwise duplicate works may occur - see the Readme)*</p></body></html>"))
        self.groupBox_18.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>&quot;Replace work names by aliases&quot; will use <span style=\" font-weight:600;\">primary</span> aliases for the chosen locale instead of standard MusicBrainz work names. To choose the locale, use the drop-down under &quot;translate artist names&quot; in the main Picard Options--&gt;Metadata page. Note that this option is not saved as a file tag since, if different choices are made for different releases, different work names may be stored and therefore cannot be grouped together in your player/library manager. </p><p>The sub-options allow either the replacement of all work names, where a primary alias exists, just the replacement of work names which are in non-Latin script, or only replace those which are flagged with user &quot;Folksonomy&quot; tags. The tag text needs to be included in the text box, in which case flagged works will be \'aliased\' as well as non-Latin script works, if the second sub-option is chosen. Note that the tags may either be anyone\'s tags (&quot;Look in all tags&quot;) or the user\'s own tags. If selecting &quot;Look in user\'s own tags only&quot; you <span style=\" font-weight:600;\">must</span> be logged in to your MusicBrainz user account (in the Picard Options-&gt;General page), otherwise repeated dialogue boxes may be generated and you may need to force restart Picard.</p></body></html>"))
        self.groupBox_19.setTitle(_translate("ClassicalExtrasOptionsPage", "Replace MB work names?"))
        self.cwp_aliases.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Use primary aliases for the chosen locale instead of standard MusicBrainz work names.</p></body></html>"))
        self.cwp_aliases.setText(_translate("ClassicalExtrasOptionsPage", "Replace work names by aliases. Select method -->"))
        self.cwp_no_aliases.setText(_translate("ClassicalExtrasOptionsPage", "Do not replace work names"))
        self.groupBox_20.setTitle(_translate("ClassicalExtrasOptionsPage", "What to replace?"))
        self.cwp_aliases_all.setText(_translate("ClassicalExtrasOptionsPage", "All work names"))
        self.cwp_aliases_greek.setText(_translate("ClassicalExtrasOptionsPage", "Non-latin work names"))
        self.cwp_aliases_tagged.setText(_translate("ClassicalExtrasOptionsPage", "Only tagged works"))
        self.groupBox_21.setTitle(_translate("ClassicalExtrasOptionsPage", "Tags (\"Folksonomy\") identifying works to be replaced by aliases"))
        self.cwp_aliases_tags_all.setText(_translate("ClassicalExtrasOptionsPage", "Look in all tags"))
        self.cwp_aliases_tags_user.setText(_translate("ClassicalExtrasOptionsPage", "Look in user\'s own tags only (MUST BE LOGGED IN!)"))
        self.cwp_aliases_tag_text.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Separate multiple tags by commas</p></body></html>"))
        self.label_101.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Tags to create</span> - Use commas to separate multiple tags or leave blank to omit</p></body></html>"))
        self.Tags.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Separate multiple tags by commas.</p></body></html>"))
        self.Tags.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>&quot;Tags to create&quot; sets the names of the tags that will be created from the sources described above. All these tags will be blanked before filling as specified. Tags specified against more than one source will have later sources appended in the sequence specified, separated by separators as specified.</p></body></html>"))
        self.groupBox_2.setTitle(_translate("ClassicalExtrasOptionsPage", "Work tags"))
        self.label_40.setText(_translate("ClassicalExtrasOptionsPage", "Separator"))
        self.label_11.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Some software (notably Muso) can display a 2-level work hierarchy as well as the work-movement hierarchy. This tag can be use to store the 2-level work name (a double colon :: is used to separate the levels within the tag).</p></body></html>"))
        self.label_11.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Tags for Work - for software with 2-level capability (e.g. Muso)</p></body></html>"))
        self.cwp_multi_work_sep.setItemText(1, _translate("ClassicalExtrasOptionsPage", "; "))
        self.cwp_multi_work_sep.setItemText(2, _translate("ClassicalExtrasOptionsPage", ": "))
        self.cwp_multi_work_sep.setItemText(3, _translate("ClassicalExtrasOptionsPage", ". "))
        self.cwp_multi_work_sep.setItemText(4, _translate("ClassicalExtrasOptionsPage", ", "))
        self.cwp_multi_work_sep.setItemText(5, _translate("ClassicalExtrasOptionsPage", "- "))
        self.label.setText(_translate("ClassicalExtrasOptionsPage", "(In this format, intermediate works will be displayed after a double colon  :: )"))
        self.label_15.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Software which can display a movement and work (but no higher levels) could use any tags specified here. Note that if there are multiple work levels, the intermediate levels will not be tagged. Users wanting all the information should use the tags from the previous option (but it may cause some breaks in the display if levels change) - alternatively the missing work levels can be included in a movement tag (see below).</p></body></html>"))
        self.label_15.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Tags for Work - for software with 1-level capability (e.g. iTunes)</p></body></html>"))
        self.cwp_single_work_sep.setItemText(1, _translate("ClassicalExtrasOptionsPage", "; "))
        self.cwp_single_work_sep.setItemText(2, _translate("ClassicalExtrasOptionsPage", ": "))
        self.cwp_single_work_sep.setItemText(3, _translate("ClassicalExtrasOptionsPage", ". "))
        self.cwp_single_work_sep.setItemText(4, _translate("ClassicalExtrasOptionsPage", ", "))
        self.cwp_single_work_sep.setItemText(5, _translate("ClassicalExtrasOptionsPage", "- "))
        self.label_2.setText(_translate("ClassicalExtrasOptionsPage", "(Intermediate works will not be displayed:- Either 1. use the 2-level format if you wish to display them, but note that this will ceate new work, or 2. include them in the movement [see below])"))
        self.label_12.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>This is the top-level work held in MB. This can be useful for cataloguing and searching (if the library software is capable). Note that this will always be the &quot;canonical&quot; MB name, not one derived from titles or the lowest level work name and that no annotations (e.g. key or work year) will be added. However, if &quot;replace work names by aliases&quot; has been selected and is applicable, the relevant alias will be used.</p></body></html>"))
        self.label_12.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Tags for top-level (canonical) work (for capable library managers)</p></body></html>"))
        self.label_10.setText(_translate("ClassicalExtrasOptionsPage", "  N/A    "))
        self.groupBox.setTitle(_translate("ClassicalExtrasOptionsPage", "Movement/Part tags"))
        self.label_13.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>This is not necessarily the embedded movt/part number, but is the sequence number of the movement within its parent work <span style=\" font-weight:600;\">on the current release</span>.</p></body></html>"))
        self.label_13.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Tags for(computed) movement number</p></body></html>"))
        self.cwp_movt_no_sep.setItemText(1, _translate("ClassicalExtrasOptionsPage", "; "))
        self.cwp_movt_no_sep.setItemText(2, _translate("ClassicalExtrasOptionsPage", ": "))
        self.cwp_movt_no_sep.setItemText(3, _translate("ClassicalExtrasOptionsPage", ". "))
        self.cwp_movt_no_sep.setItemText(4, _translate("ClassicalExtrasOptionsPage", ", "))
        self.cwp_movt_no_sep.setItemText(5, _translate("ClassicalExtrasOptionsPage", "- "))
        self.label_49.setText(_translate("ClassicalExtrasOptionsPage", "Use different movement tags if required..."))
        self.label_47.setText(_translate("ClassicalExtrasOptionsPage", "for use with multi-level work tags"))
        self.label_48.setText(_translate("ClassicalExtrasOptionsPage", "for use with1-level work tags (intermediate works will prefix movement)"))
        self.label_14.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>As below, but without the movement part/number prefix (if applicable)</p></body></html>"))
        self.label_14.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Tags for Movement - excluding embedded movt/part numbers</p></body></html>"))
        self.label_39.setText(_translate("ClassicalExtrasOptionsPage", "  N/A    "))
        self.label_9.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>This tag(s) will contain the full lowest-level part name extracted from the lowest-level work name, according to the chosen tagging style.</p></body></html>"))
        self.label_9.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Tags for Movement - including embedded movt/part numbers</p></body></html>"))
        self.label_37.setText(_translate("ClassicalExtrasOptionsPage", "  N/A    "))
        self.label_102.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Partial recordings, arrangements and medleys</span></p></body></html>"))
        self.groupBox_12.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Enter text - do not use any quotation marks</p></body></html>"))
        self.label_20.setText(_translate("ClassicalExtrasOptionsPage", "N.B. If these options are selected or deselected, quit and restart Picard before proceeding"))
        self.groupBox_13.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>If this option is selected, partial recordings will be treated as a sub-part of the whole recording and will have the related text included in its name. Note that this text is at the end of the canonical name, but the latter will probably be stripped from the sub-part as it duplicates the recording work name; any title text will be appended to the whole. Note that, if &quot;Consistent with lowest level work description&quot; is chosen in section 2, the text may be treated as a &quot;prefix&quot; similar to those in the &quot;Advanced&quot; tab. If this eliminates other similar prefixes and has unwanted effects, then either change the desired text slightly (e.g. surround with brackets) or use the &quot;Full MusicBrainz work hierarchy&quot; option in section 2.</p></body></html>"))
        self.groupBox_13.setTitle(_translate("ClassicalExtrasOptionsPage", "Partial recordings"))
        self.cwp_partial.setText(_translate("ClassicalExtrasOptionsPage", "Show partial recordings as separate sub-part, labelled with ->"))
        self.groupBox_14.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>If this option is selected, works which are arrangements of other works will have the latter treated in the same manner as &quot;parent&quot; works, except that the arrangement work name will be prefixed by the text provided.</p></body></html>"))
        self.groupBox_14.setTitle(_translate("ClassicalExtrasOptionsPage", "Arrangements"))
        self.cwp_arrangements.setText(_translate("ClassicalExtrasOptionsPage", "Show arrangements as parts of original works, labelled with ->"))
        self.groupBox_15.setTitle(_translate("ClassicalExtrasOptionsPage", "Medleys"))
        self.cwp_medley.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Medleys</span></p><p>      These can occur in two ways in MusicBrainz: (a) the recording is described as a &quot;medley of&quot; a number of works and (b) the track is described as (more than one) &quot;medley including a recording of&quot; a work. In the first case, the specified text will be included in brackets after the work name, whereas in the second case, the track will be treated as a recording of multiple works and the specified text will appear in the parent work name.</p><p><br/></p></body></html>"))
        self.cwp_medley.setText(_translate("ClassicalExtrasOptionsPage", "Include medley list, labelled with ->"))
        self.label_103.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">SongKong-compatible tag usage</span></p></body></html>"))
        self.groupBox_17.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>See &quot;What\'s this&quot;</p></body></html>"))
        self.groupBox_17.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p> &quot;Use work tags on file (no look up on MB) if Use Cache selected&quot;: This will enable the existing work tags on the file to be used in preference to looking up on MusicBrainz, if those tags are SongKong-compatible (which should be the case if SongKong has been used or if the SongKong tags have been previously written by this plugin). If present, this can speed up processing considerably, but obviously any new data on MusicBrainz will be missed. For the option to operate, &quot;Use cache&quot; also needs to be selected. Although faster, some of the subtleties of a full look-up will be missed - for example, parent works which are arrangements will not be highlighted as such, some arrangers or composers of original works may be omitted and some medley information may be missed. **In general, therefore, the use of this option will result in poorer metadata than allowing the full database look-up to run. It is not recommended unless speed is more important than quality.**</p><p><br/></p><p>    &quot;Write SongKong-compatible work tags&quot; does what it says. These can then be used by the previous option, if the release is subsequently reloaded into Picard, to speed things up (assuming the reload was not to pick up new work data).</p><p><br/></p><p>Note that Picard and SongKong use the tag musicbrainz_workid to mean different things. If Picard has overwritten the SongKong tag (not a problem if this plugin is used) then a warning will be given and the works will be looked up on MusicBrainz. Also note that once a release is loaded, subsequent refreshes will use the cache (if option is ticked) in preference to the file tags.</p></body></html>"))
        self.cwp_use_sk.setText(_translate("ClassicalExtrasOptionsPage", "Use work tags on file (no look up on MB) if Use Cache selected* (NOT RECOMMENDED - SEE README)"))
        self.cwp_write_sk.setText(_translate("ClassicalExtrasOptionsPage", "Write SongKong-compatible work tags*"))
        self.label_82.setText(_translate("ClassicalExtrasOptionsPage", "* ASTERISKED OPTIONS ARE NOT SAVED IN FILE TAGS"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Works), _translate("ClassicalExtrasOptionsPage", "Works and parts"))
        self.label_104.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Genre tags</span></p></body></html>"))
        self.label_73.setText(_translate("ClassicalExtrasOptionsPage", "Name of genre tag"))
        self.label_74.setText(_translate("ClassicalExtrasOptionsPage", "Name of sub-genre tag"))
        self.label_107.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">&quot;Classical&quot; genre </span></p></body></html>"))
        self.cwp_genres_classical_exclude.setText(_translate("ClassicalExtrasOptionsPage", "Exclude the text \"classical\" from main genre tag even if listed above"))
        self.cwp_genres_classical_selective.setText(_translate("ClassicalExtrasOptionsPage", "Make track \"classical\" only if there is a classical-specific genre (or do nothing if there is no filter)"))
        self.cwp_muso_classical.setText(_translate("ClassicalExtrasOptionsPage", "Use Muso composer list to determine if classical*"))
        self.cwp_genres_classical_all.setText(_translate("ClassicalExtrasOptionsPage", "Make all tracks \"classical\""))
        self.label_64.setText(_translate("ClassicalExtrasOptionsPage", "Write a flag with text ="))
        self.label_71.setText(_translate("ClassicalExtrasOptionsPage", " in the following tag if the track is classical"))
        self.cwp_genres_arranger_as_composer.setText(_translate("ClassicalExtrasOptionsPage", "(Treat arrangers as for composers)"))
        self.label_81.setText(_translate("ClassicalExtrasOptionsPage", "* ASTERISKED OPTIONS ARE NOT SAVED IN FILE TAGS"))
        self.cwp_use_muso_refdb.setText(_translate("ClassicalExtrasOptionsPage", "Use Muso reference database (default path is set on \"advanced\" tab)*"))
        self.label_108.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Instruments and keys</span></p></body></html>"))
        self.groupBox_45.setTitle(_translate("ClassicalExtrasOptionsPage", "Instruments"))
        self.label_66.setText(_translate("ClassicalExtrasOptionsPage", "Tag name for instruments (will hold all instruments for a track)"))
        self.groupBox_40.setTitle(_translate("ClassicalExtrasOptionsPage", "Name sources to use for instruments (select at least one, otherwise no instruments will be included in tag)"))
        self.cwp_instruments_MB_names.setText(_translate("ClassicalExtrasOptionsPage", "MusicBrainz standard names"))
        self.cwp_instruments_credited_names.setText(_translate("ClassicalExtrasOptionsPage", "\"Credited-as\" names"))
        self.groupBox_47.setTitle(_translate("ClassicalExtrasOptionsPage", "Keys"))
        self.label_72.setText(_translate("ClassicalExtrasOptionsPage", "Tag name for key(s)"))
        self.groupBox_52.setTitle(_translate("ClassicalExtrasOptionsPage", "Include key(s) in work name?"))
        self.cwp_key_never_include.setText(_translate("ClassicalExtrasOptionsPage", "Never"))
        self.cwp_key_contingent_include.setText(_translate("ClassicalExtrasOptionsPage", "Only if key not already mentioned in work name"))
        self.cwp_key_include.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>&quot;Include key(s) in work names&quot; gives the option to include the key signature for a work in brackets after the name of the work in the metadata. Keys will be added in the appropriate levels: e.g. Dvořák\'s New World Symphony will get (E minor) at the work level, but only movements with different keys will be annotated viz. &quot;II. Largo (D-flat major, C-Sharp minor)&quot;</p></body></html>"))
        self.cwp_key_include.setText(_translate("ClassicalExtrasOptionsPage", "Always"))
        self.label_106.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Allowed genres (filter)</span></p></body></html>"))
        self.cwp_genres_filter.setText(_translate("ClassicalExtrasOptionsPage", "Only apply genres to tags if they match pre-defined names:"))
        self.groupBox_36.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Explanation of genre-matching:</span></p><p><br/></p><p>Only genres matching those in the boxes will be placed in the genre or sub-genre tags.</p><p><br/></p><p>If  there is a matching genre found in the &quot;classical main genres&quot; or &quot;classical sub-genres&quot; box, then the track will be treated as being classical.</p></body></html>"))
        self.groupBox_43.setTitle(_translate("ClassicalExtrasOptionsPage", "Classical genres (i.e. specific to classical music) - List separated by commas"))
        self.label_60.setText(_translate("ClassicalExtrasOptionsPage", "Main genres:"))
        self.label_75.setText(_translate("ClassicalExtrasOptionsPage", "Sub-genres:"))
        self.cwp_muso_genres.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Select this to use the &quot;classical genres&quot; in Muso options as the &quot;Main classical genres&quot; here.</p></body></html>"))
        self.cwp_muso_genres.setText(_translate("ClassicalExtrasOptionsPage", "Use Muso classical genres*"))
        self.groupBox_44.setTitle(_translate("ClassicalExtrasOptionsPage", "General genres (may be associated with classical music, but not necessarily, e.g. \"instrumental\") - List separated by commas"))
        self.label_62.setText(_translate("ClassicalExtrasOptionsPage", "Main genres"))
        self.label_76.setText(_translate("ClassicalExtrasOptionsPage", "Sub-genres"))
        self.label_80.setText(_translate("ClassicalExtrasOptionsPage", "Genre name to use if none of the above main genres apply (leave blank if not required)"))
        self.label_77.setText(_translate("ClassicalExtrasOptionsPage", "List genres, separated by commas. Only those genres listed will be included in tags."))
        self.label_78.setText(_translate("ClassicalExtrasOptionsPage", "See \"what\'s this\" for more details."))
        self.label_105.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Source of genres</span> - Note: if &quot;existing file tag&quot; is selected, information from the tag &quot;genre&quot; and the genre tag name specified above (if different) will be used</p></body></html>"))
        self.cwp_genres_use_file.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>NB: This will use the contents of the file tag with the name given above (usually \'genre\').</p></body></html>"))
        self.cwp_genres_use_file.setText(_translate("ClassicalExtrasOptionsPage", "Existing file tag (see note above)"))
        self.cwp_genres_use_folks.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>This will use the folksonomy tags for <span style=\" font-weight:600;\">works</span> as a possible source of genres (if they match one of the lists below).</p><p><br/></p><p>To use the folksonomy tags for <span style=\" font-weight:600;\">releases/tracks</span>, select the main Picard option in Options-&gt;Metadata-&gt;&quot;Use folksonomy tags as genre&quot;. Again (unlike vanilla Picard) they will only be used by this plugin if they match one of the lists below.</p></body></html>"))
        self.cwp_genres_use_folks.setText(_translate("ClassicalExtrasOptionsPage", "Folksonomy work tags"))
        self.cwp_genres_use_worktype.setText(_translate("ClassicalExtrasOptionsPage", "Work-type"))
        self.cwp_genres_infer.setText(_translate("ClassicalExtrasOptionsPage", "Infer from artist metadata"))
        self.label_109.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Periods and dates</span></p></body></html>"))
        self.groupBox_48.setTitle(_translate("ClassicalExtrasOptionsPage", "Work dates"))
        self.groupBox_42.setTitle(_translate("ClassicalExtrasOptionsPage", "Source of work dates for above tag"))
        self.cwp_workdate_source_composed.setText(_translate("ClassicalExtrasOptionsPage", "Composed date (or parent composed date)"))
        self.cwp_workdate_source_published.setText(_translate("ClassicalExtrasOptionsPage", "Published date"))
        self.cwp_workdate_source_premiered.setText(_translate("ClassicalExtrasOptionsPage", "Premiered date"))
        self.cwp_workdate_use_first.setText(_translate("ClassicalExtrasOptionsPage", "Use first available of above (in listed order)"))
        self.cwp_workdate_use_all.setText(_translate("ClassicalExtrasOptionsPage", "Include all sources"))
        self.cwp_workdate_annotate.setText(_translate("ClassicalExtrasOptionsPage", "Annotate dates using source name"))
        self.label_68.setText(_translate("ClassicalExtrasOptionsPage", "Tag name for work date"))
        self.cwp_workdate_include.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>&quot;Includeworkdate in work names&quot; gives the option to include the \'work year\' for a work in brackets after the name of the work in the metadata. Dates (years) will be added in the appropriate levels: e.g. Smetana\'s \'Má vlast\' will get (1874-1879) at the work level, but the movements with different dates will be annotated viz. &quot;Vyšehrad, JB 1:112/1 (1874)&quot;. If the dates are the same, there should be no repitetion at the movement level. (Work dates will be used in preference order, i.e. composed - published - premiered, with only the first available date being shown).</p></body></html>"))
        self.cwp_workdate_include.setText(_translate("ClassicalExtrasOptionsPage", "Include workdate in work name (in preference order listed above, with no annotation)"))
        self.groupBox_49.setTitle(_translate("ClassicalExtrasOptionsPage", "Periods"))
        self.label_69.setText(_translate("ClassicalExtrasOptionsPage", "Tag name for period"))
        self.cwp_muso_periods.setText(_translate("ClassicalExtrasOptionsPage", "Use Muso map*"))
        self.cwp_muso_dates.setText(_translate("ClassicalExtrasOptionsPage", "Use Muso composer dates (if no work date) to determine period*"))
        self.label_70.setText(_translate("ClassicalExtrasOptionsPage", "Period map:"))
        self.label_87.setText(_translate("ClassicalExtrasOptionsPage", " (Period name, Start year, End year; Period name2, ... etc.) - periods may overlap [Do not use commas or semi-colons within period name]"))
        self.cwp_periods_arranger_as_composer.setText(_translate("ClassicalExtrasOptionsPage", "(Treat arrangers as for composers)"))
        self.label_119.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-size:9pt; font-weight:600;\">N.B. At least one of the first two tabs (Artists: &quot;Create extra artist metadata&quot;, or Works and parts: &quot;Include all work levels&quot;) </span><span style=\" font-size:9pt; font-weight:600; text-decoration: underline;\">must</span><span style=\" font-size:9pt; font-weight:600;\"> be enabled for this section to run.<br/></span><span style=\" font-weight:600; font-style:italic;\">(Functionality will be reduced unless both the first two tabs are enabled.) </span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Genres), _translate("ClassicalExtrasOptionsPage", "Genres etc."))
        self.label_18.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-size:9pt; font-weight:600;\">N.B. At least one of the first two tabs (Artists: &quot;Create extra artist metadata&quot;, or Works and parts: &quot;Include all work levels&quot;) </span><span style=\" font-size:9pt; font-weight:600; text-decoration: underline;\">must</span><span style=\" font-size:9pt; font-weight:600;\"> be enabled for this section to run. </span></p></body></html>"))
        self.label_97.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Initial tag processing</span></p></body></html>"))
        self.groupBox_11.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><br/></p></body></html>"))
        self.artist_tags.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Any tags specified in the next two rows will be blanked before applying the tag sources described in the following section. NB this applies only to Picard-generated tags, not to other tags which might pre-exist on the file: to blank those, use the main Options-&gt;Tags page. Comma-separate the tag names within the rows and note that these names are case-sensitive.</p></body></html>"))
        self.artist_tags.setTitle(_translate("ClassicalExtrasOptionsPage", "Remove Picard-generated tags before applying subsequent actions? (NB existing LOCAL FILE tags will remain unless cleared using standard Picard options - to remove these, overwrite them in the next section)"))
        self.label_3.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" text-decoration: underline;\">Picard-generated</span> tags to blank (comma-separated, case-sensitive):</p></body></html>"))
        self.cea_blank_tag.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Enter file tag names, separated by commas</p></body></html>"))
        self.cea_blank_tag_2.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Enter file tag names, separated by commas</p></body></html>"))
        self.label_19.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><br/></p></body></html>"))
        self.label_19.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>List <span style=\" text-decoration: underline;\">existing file tags</span> which will be appended to rather than over-written by tag mapping (this will keep tags even if &quot;Clear existing tags&quot; is selected on main options)<br/>NB To allow appending to happen, <span style=\" text-decoration: underline;\">do not also include these tags in &quot;Preserve tags&quot;</span> on the main options.</p></body></html>"))
        self.cea_keep.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Enter file tag names, separated by commas</p></body></html>"))
        self.cea_keep.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>This refers to the tags which already exist on files which have been matched to MusicBrainz in the right-hand panel, not the tags generated by Picard from the MusicBrainz database. Normally, Picard cannot process these tags - either it will overwrite them (if it creates a similarly named tag), clear them (if \'Clear existing tags\' is specified in the main Options-&gt;Tags screen) or keep them (if \'Preserve these tags...\' is specified after the \'Clear existing tags\' option). Classical Extras allows a further option - for the tags to be appended to in the tag mapping section (see below). List file tags which will be appended to rather than over-written by tag mapping (NB this will keep tags even if &quot;Clear existing tags&quot; is selected on main options). In addition, certain existing tags may be used by Classical Extras - in particular genre-related tags (see the Genres etc. options tab for more).</p><p>Note that if &quot;Split lyrics tag&quot; is specified (see the Artists tab), then the tag named there will be included in the \'Keep file tags\' list and does not need to be added in this section.</p></body></html>"))
        self.cea_clear_tags.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Note that the main Picard option &quot;Clear existing tags&quot; should be <span style=\" text-decoration: underline;\">unchecked</span> for this option to operate in preference to that Picard option. The difference is that this option <span style=\" text-decoration: underline;\">will not intefere with cover art</span>, whereas the main Picard option will remove previous cover art.</p></body></html>"))
        self.cea_clear_tags.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>If selected: the bottom pane of Picard will only show tags which have been generated from the MusicBrainz lookups plus any existing file tags which are listed above or in the main options &quot;Preserve tags...&quot;.</p><p>This does not mean that the file tags will be removed when saving the file. For that to happen, &quot;Clear existing tags&quot; needs to be selected in the main options.</p></body></html>"))
        self.cea_clear_tags.setText(_translate("ClassicalExtrasOptionsPage", "Do not show any file tags that are NOT listed above AND NOT listed in the main Picard \"Preserve tags...\" option (Options->Tags), even if \"Clear existing tags\" is not selected."))
        self.label_98.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Tag map details</span></p></body></html>"))
        self.artist_tags_2.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Enter tags, separated by commas.</p></body></html>"))
        self.textBrowser.setHtml(_translate("ClassicalExtrasOptionsPage", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:72; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600; text-decoration: underline;\">Notes: </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Click &quot;Source from:&quot; button to edit source tags.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Any valid Picard-generated tag can be entered in the &quot;source&quot; box, as well as Classical Extras sources, and mapped into other tags - not just restricted to artists.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">To put a constant in a tag, type it into the source box preceded by a backslash \\.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">In all cases, the source will be APPENDED to the Picard tag. To replace the standard tag, first blank it in the section above - add it back later in the list below if required (e.g. artist -&gt; artist).</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">BUT note that any existing LOCAL FILE tag will be replaced by (not appended with) any Picard/Classical Extras tag UNLESS specified in the list box above.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">These tag-mapping options may be omitted from the over-riding of artist options - see advanced tab</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">For more help seethe readme.</p></body></html>"))
        self.toolButton_1.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click to edit sources"))
        self.toolButton_1.setText(_translate("ClassicalExtrasOptionsPage", "Source from:"))
        self.cea_source_1.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click button to edit. See notes above."))
        self.cea_source_1.setItemText(1, _translate("ClassicalExtrasOptionsPage", "album_soloists, album_conductors, album_ensembles"))
        self.cea_source_1.setItemText(2, _translate("ClassicalExtrasOptionsPage", "soloists, conductors, ensembles, album_composers, composers"))
        self.cea_source_1.setItemText(3, _translate("ClassicalExtrasOptionsPage", "album_soloists"))
        self.cea_source_1.setItemText(4, _translate("ClassicalExtrasOptionsPage", "album_conductors"))
        self.cea_source_1.setItemText(5, _translate("ClassicalExtrasOptionsPage", "album_ensembles"))
        self.cea_source_1.setItemText(6, _translate("ClassicalExtrasOptionsPage", "album_composers"))
        self.cea_source_1.setItemText(7, _translate("ClassicalExtrasOptionsPage", "album_composer_lastnames"))
        self.cea_source_1.setItemText(8, _translate("ClassicalExtrasOptionsPage", "soloists"))
        self.cea_source_1.setItemText(9, _translate("ClassicalExtrasOptionsPage", "soloist_names"))
        self.cea_source_1.setItemText(10, _translate("ClassicalExtrasOptionsPage", "ensembles"))
        self.cea_source_1.setItemText(11, _translate("ClassicalExtrasOptionsPage", "ensemble_names"))
        self.cea_source_1.setItemText(12, _translate("ClassicalExtrasOptionsPage", "composers"))
        self.cea_source_1.setItemText(13, _translate("ClassicalExtrasOptionsPage", "arrangers"))
        self.cea_source_1.setItemText(14, _translate("ClassicalExtrasOptionsPage", "orchestrators"))
        self.cea_source_1.setItemText(15, _translate("ClassicalExtrasOptionsPage", "conductors"))
        self.cea_source_1.setItemText(16, _translate("ClassicalExtrasOptionsPage", "chorusmasters"))
        self.cea_source_1.setItemText(17, _translate("ClassicalExtrasOptionsPage", "leaders"))
        self.cea_source_1.setItemText(18, _translate("ClassicalExtrasOptionsPage", "support_performers"))
        self.cea_source_1.setItemText(19, _translate("ClassicalExtrasOptionsPage", "work_type"))
        self.cea_source_1.setItemText(20, _translate("ClassicalExtrasOptionsPage", "release"))
        self.label_21.setText(_translate("ClassicalExtrasOptionsPage", "into tags:"))
        self.cea_tag_1.setToolTip(_translate("ClassicalExtrasOptionsPage", "Enter comma-separated list of tags"))
        self.cea_cond_1.setText(_translate("ClassicalExtrasOptionsPage", "Conditional?"))
        self.toolButton_2.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click to edit sources"))
        self.toolButton_2.setText(_translate("ClassicalExtrasOptionsPage", "Source from:"))
        self.cea_source_2.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click button to edit. See notes above."))
        self.cea_source_2.setItemText(1, _translate("ClassicalExtrasOptionsPage", "album_soloists, album_conductors, album_ensembles"))
        self.cea_source_2.setItemText(2, _translate("ClassicalExtrasOptionsPage", "soloists, conductors, ensembles, album_composers, composers"))
        self.cea_source_2.setItemText(3, _translate("ClassicalExtrasOptionsPage", "album_soloists"))
        self.cea_source_2.setItemText(4, _translate("ClassicalExtrasOptionsPage", "album_conductors"))
        self.cea_source_2.setItemText(5, _translate("ClassicalExtrasOptionsPage", "album_ensembles"))
        self.cea_source_2.setItemText(6, _translate("ClassicalExtrasOptionsPage", "album_composers"))
        self.cea_source_2.setItemText(7, _translate("ClassicalExtrasOptionsPage", "album_composer_lastnames"))
        self.cea_source_2.setItemText(8, _translate("ClassicalExtrasOptionsPage", "soloists"))
        self.cea_source_2.setItemText(9, _translate("ClassicalExtrasOptionsPage", "soloist_names"))
        self.cea_source_2.setItemText(10, _translate("ClassicalExtrasOptionsPage", "ensembles"))
        self.cea_source_2.setItemText(11, _translate("ClassicalExtrasOptionsPage", "ensemble_names"))
        self.cea_source_2.setItemText(12, _translate("ClassicalExtrasOptionsPage", "composers"))
        self.cea_source_2.setItemText(13, _translate("ClassicalExtrasOptionsPage", "arrangers"))
        self.cea_source_2.setItemText(14, _translate("ClassicalExtrasOptionsPage", "orchestrators"))
        self.cea_source_2.setItemText(15, _translate("ClassicalExtrasOptionsPage", "conductors"))
        self.cea_source_2.setItemText(16, _translate("ClassicalExtrasOptionsPage", "chorusmasters"))
        self.cea_source_2.setItemText(17, _translate("ClassicalExtrasOptionsPage", "leaders"))
        self.cea_source_2.setItemText(18, _translate("ClassicalExtrasOptionsPage", "support_performers"))
        self.cea_source_2.setItemText(19, _translate("ClassicalExtrasOptionsPage", "work_type"))
        self.cea_source_2.setItemText(20, _translate("ClassicalExtrasOptionsPage", "release"))
        self.label_23.setText(_translate("ClassicalExtrasOptionsPage", "into tags:"))
        self.cea_tag_2.setToolTip(_translate("ClassicalExtrasOptionsPage", "Enter comma-separated list of tags"))
        self.cea_cond_2.setText(_translate("ClassicalExtrasOptionsPage", "Conditional?"))
        self.toolButton_3.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click to edit sources"))
        self.toolButton_3.setText(_translate("ClassicalExtrasOptionsPage", "Source from:"))
        self.cea_source_3.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click button to edit. See notes above."))
        self.cea_source_3.setItemText(1, _translate("ClassicalExtrasOptionsPage", "album_soloists, album_conductors, album_ensembles"))
        self.cea_source_3.setItemText(2, _translate("ClassicalExtrasOptionsPage", "soloists, conductors, ensembles, album_composers, composers"))
        self.cea_source_3.setItemText(3, _translate("ClassicalExtrasOptionsPage", "album_soloists"))
        self.cea_source_3.setItemText(4, _translate("ClassicalExtrasOptionsPage", "album_conductors"))
        self.cea_source_3.setItemText(5, _translate("ClassicalExtrasOptionsPage", "album_ensembles"))
        self.cea_source_3.setItemText(6, _translate("ClassicalExtrasOptionsPage", "album_composers"))
        self.cea_source_3.setItemText(7, _translate("ClassicalExtrasOptionsPage", "album_composer_lastnames"))
        self.cea_source_3.setItemText(8, _translate("ClassicalExtrasOptionsPage", "soloists"))
        self.cea_source_3.setItemText(9, _translate("ClassicalExtrasOptionsPage", "soloist_names"))
        self.cea_source_3.setItemText(10, _translate("ClassicalExtrasOptionsPage", "ensembles"))
        self.cea_source_3.setItemText(11, _translate("ClassicalExtrasOptionsPage", "ensemble_names"))
        self.cea_source_3.setItemText(12, _translate("ClassicalExtrasOptionsPage", "composers"))
        self.cea_source_3.setItemText(13, _translate("ClassicalExtrasOptionsPage", "arrangers"))
        self.cea_source_3.setItemText(14, _translate("ClassicalExtrasOptionsPage", "orchestrators"))
        self.cea_source_3.setItemText(15, _translate("ClassicalExtrasOptionsPage", "conductors"))
        self.cea_source_3.setItemText(16, _translate("ClassicalExtrasOptionsPage", "chorusmasters"))
        self.cea_source_3.setItemText(17, _translate("ClassicalExtrasOptionsPage", "leaders"))
        self.cea_source_3.setItemText(18, _translate("ClassicalExtrasOptionsPage", "support_performers"))
        self.cea_source_3.setItemText(19, _translate("ClassicalExtrasOptionsPage", "work_type"))
        self.cea_source_3.setItemText(20, _translate("ClassicalExtrasOptionsPage", "release"))
        self.label_25.setText(_translate("ClassicalExtrasOptionsPage", "into tags:"))
        self.cea_tag_3.setToolTip(_translate("ClassicalExtrasOptionsPage", "Enter comma-separated list of tags"))
        self.cea_cond_3.setText(_translate("ClassicalExtrasOptionsPage", "Conditional?"))
        self.toolButton_4.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click to edit sources"))
        self.toolButton_4.setText(_translate("ClassicalExtrasOptionsPage", "Source from:"))
        self.cea_source_4.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click button to edit. See notes above."))
        self.cea_source_4.setItemText(1, _translate("ClassicalExtrasOptionsPage", "album_soloists, album_conductors, album_ensembles"))
        self.cea_source_4.setItemText(2, _translate("ClassicalExtrasOptionsPage", "soloists, conductors, ensembles, album_composers, composers"))
        self.cea_source_4.setItemText(3, _translate("ClassicalExtrasOptionsPage", "album_soloists"))
        self.cea_source_4.setItemText(4, _translate("ClassicalExtrasOptionsPage", "album_conductors"))
        self.cea_source_4.setItemText(5, _translate("ClassicalExtrasOptionsPage", "album_ensembles"))
        self.cea_source_4.setItemText(6, _translate("ClassicalExtrasOptionsPage", "album_composers"))
        self.cea_source_4.setItemText(7, _translate("ClassicalExtrasOptionsPage", "album_composer_lastnames"))
        self.cea_source_4.setItemText(8, _translate("ClassicalExtrasOptionsPage", "soloists"))
        self.cea_source_4.setItemText(9, _translate("ClassicalExtrasOptionsPage", "soloist_names"))
        self.cea_source_4.setItemText(10, _translate("ClassicalExtrasOptionsPage", "ensembles"))
        self.cea_source_4.setItemText(11, _translate("ClassicalExtrasOptionsPage", "ensemble_names"))
        self.cea_source_4.setItemText(12, _translate("ClassicalExtrasOptionsPage", "composers"))
        self.cea_source_4.setItemText(13, _translate("ClassicalExtrasOptionsPage", "arrangers"))
        self.cea_source_4.setItemText(14, _translate("ClassicalExtrasOptionsPage", "orchestrators"))
        self.cea_source_4.setItemText(15, _translate("ClassicalExtrasOptionsPage", "conductors"))
        self.cea_source_4.setItemText(16, _translate("ClassicalExtrasOptionsPage", "chorusmasters"))
        self.cea_source_4.setItemText(17, _translate("ClassicalExtrasOptionsPage", "leaders"))
        self.cea_source_4.setItemText(18, _translate("ClassicalExtrasOptionsPage", "support_performers"))
        self.cea_source_4.setItemText(19, _translate("ClassicalExtrasOptionsPage", "work_type"))
        self.cea_source_4.setItemText(20, _translate("ClassicalExtrasOptionsPage", "release"))
        self.label_27.setText(_translate("ClassicalExtrasOptionsPage", "into tags:"))
        self.cea_tag_4.setToolTip(_translate("ClassicalExtrasOptionsPage", "Enter comma-separated list of tags"))
        self.cea_cond_4.setText(_translate("ClassicalExtrasOptionsPage", "Conditional?"))
        self.toolButton_5.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click to edit sources"))
        self.toolButton_5.setText(_translate("ClassicalExtrasOptionsPage", "Source from:"))
        self.cea_source_5.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click button to edit. See notes above."))
        self.cea_source_5.setItemText(1, _translate("ClassicalExtrasOptionsPage", "album_soloists, album_conductors, album_ensembles"))
        self.cea_source_5.setItemText(2, _translate("ClassicalExtrasOptionsPage", "soloists, conductors, ensembles, album_composers, composers"))
        self.cea_source_5.setItemText(3, _translate("ClassicalExtrasOptionsPage", "album_soloists"))
        self.cea_source_5.setItemText(4, _translate("ClassicalExtrasOptionsPage", "album_conductors"))
        self.cea_source_5.setItemText(5, _translate("ClassicalExtrasOptionsPage", "album_ensembles"))
        self.cea_source_5.setItemText(6, _translate("ClassicalExtrasOptionsPage", "album_composers"))
        self.cea_source_5.setItemText(7, _translate("ClassicalExtrasOptionsPage", "album_composer_lastnames"))
        self.cea_source_5.setItemText(8, _translate("ClassicalExtrasOptionsPage", "soloists"))
        self.cea_source_5.setItemText(9, _translate("ClassicalExtrasOptionsPage", "soloist_names"))
        self.cea_source_5.setItemText(10, _translate("ClassicalExtrasOptionsPage", "ensembles"))
        self.cea_source_5.setItemText(11, _translate("ClassicalExtrasOptionsPage", "ensemble_names"))
        self.cea_source_5.setItemText(12, _translate("ClassicalExtrasOptionsPage", "composers"))
        self.cea_source_5.setItemText(13, _translate("ClassicalExtrasOptionsPage", "arrangers"))
        self.cea_source_5.setItemText(14, _translate("ClassicalExtrasOptionsPage", "orchestrators"))
        self.cea_source_5.setItemText(15, _translate("ClassicalExtrasOptionsPage", "conductors"))
        self.cea_source_5.setItemText(16, _translate("ClassicalExtrasOptionsPage", "chorusmasters"))
        self.cea_source_5.setItemText(17, _translate("ClassicalExtrasOptionsPage", "leaders"))
        self.cea_source_5.setItemText(18, _translate("ClassicalExtrasOptionsPage", "support_performers"))
        self.cea_source_5.setItemText(19, _translate("ClassicalExtrasOptionsPage", "work_type"))
        self.cea_source_5.setItemText(20, _translate("ClassicalExtrasOptionsPage", "release"))
        self.label_29.setText(_translate("ClassicalExtrasOptionsPage", "into tags:"))
        self.cea_tag_5.setToolTip(_translate("ClassicalExtrasOptionsPage", "Enter comma-separated list of tags"))
        self.cea_cond_5.setText(_translate("ClassicalExtrasOptionsPage", "Conditional?"))
        self.toolButton_6.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click to edit sources"))
        self.toolButton_6.setText(_translate("ClassicalExtrasOptionsPage", "Source from:"))
        self.cea_source_6.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click button to edit. See notes above."))
        self.cea_source_6.setItemText(1, _translate("ClassicalExtrasOptionsPage", "album_soloists, album_conductors, album_ensembles"))
        self.cea_source_6.setItemText(2, _translate("ClassicalExtrasOptionsPage", "soloists, conductors, ensembles, album_composers, composers"))
        self.cea_source_6.setItemText(3, _translate("ClassicalExtrasOptionsPage", "album_soloists"))
        self.cea_source_6.setItemText(4, _translate("ClassicalExtrasOptionsPage", "album_conductors"))
        self.cea_source_6.setItemText(5, _translate("ClassicalExtrasOptionsPage", "album_ensembles"))
        self.cea_source_6.setItemText(6, _translate("ClassicalExtrasOptionsPage", "album_composers"))
        self.cea_source_6.setItemText(7, _translate("ClassicalExtrasOptionsPage", "album_composer_lastnames"))
        self.cea_source_6.setItemText(8, _translate("ClassicalExtrasOptionsPage", "soloists"))
        self.cea_source_6.setItemText(9, _translate("ClassicalExtrasOptionsPage", "soloist_names"))
        self.cea_source_6.setItemText(10, _translate("ClassicalExtrasOptionsPage", "ensembles"))
        self.cea_source_6.setItemText(11, _translate("ClassicalExtrasOptionsPage", "ensemble_names"))
        self.cea_source_6.setItemText(12, _translate("ClassicalExtrasOptionsPage", "composers"))
        self.cea_source_6.setItemText(13, _translate("ClassicalExtrasOptionsPage", "arrangers"))
        self.cea_source_6.setItemText(14, _translate("ClassicalExtrasOptionsPage", "orchestrators"))
        self.cea_source_6.setItemText(15, _translate("ClassicalExtrasOptionsPage", "conductors"))
        self.cea_source_6.setItemText(16, _translate("ClassicalExtrasOptionsPage", "chorusmasters"))
        self.cea_source_6.setItemText(17, _translate("ClassicalExtrasOptionsPage", "leaders"))
        self.cea_source_6.setItemText(18, _translate("ClassicalExtrasOptionsPage", "support_performers"))
        self.cea_source_6.setItemText(19, _translate("ClassicalExtrasOptionsPage", "work_type"))
        self.cea_source_6.setItemText(20, _translate("ClassicalExtrasOptionsPage", "release"))
        self.label_31.setText(_translate("ClassicalExtrasOptionsPage", "into tags:"))
        self.cea_tag_6.setToolTip(_translate("ClassicalExtrasOptionsPage", "Enter comma-separated list of tags"))
        self.cea_cond_6.setText(_translate("ClassicalExtrasOptionsPage", "Conditional?"))
        self.toolButton_7.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click to edit sources"))
        self.toolButton_7.setText(_translate("ClassicalExtrasOptionsPage", "Source from:"))
        self.cea_source_7.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click button to edit. See notes above."))
        self.cea_source_7.setItemText(1, _translate("ClassicalExtrasOptionsPage", "album_soloists, album_conductors, album_ensembles"))
        self.cea_source_7.setItemText(2, _translate("ClassicalExtrasOptionsPage", "soloists, conductors, ensembles, album_composers, composers"))
        self.cea_source_7.setItemText(3, _translate("ClassicalExtrasOptionsPage", "album_soloists"))
        self.cea_source_7.setItemText(4, _translate("ClassicalExtrasOptionsPage", "album_conductors"))
        self.cea_source_7.setItemText(5, _translate("ClassicalExtrasOptionsPage", "album_ensembles"))
        self.cea_source_7.setItemText(6, _translate("ClassicalExtrasOptionsPage", "album_composers"))
        self.cea_source_7.setItemText(7, _translate("ClassicalExtrasOptionsPage", "album_composer_lastnames"))
        self.cea_source_7.setItemText(8, _translate("ClassicalExtrasOptionsPage", "soloists"))
        self.cea_source_7.setItemText(9, _translate("ClassicalExtrasOptionsPage", "soloist_names"))
        self.cea_source_7.setItemText(10, _translate("ClassicalExtrasOptionsPage", "ensembles"))
        self.cea_source_7.setItemText(11, _translate("ClassicalExtrasOptionsPage", "ensemble_names"))
        self.cea_source_7.setItemText(12, _translate("ClassicalExtrasOptionsPage", "composers"))
        self.cea_source_7.setItemText(13, _translate("ClassicalExtrasOptionsPage", "arrangers"))
        self.cea_source_7.setItemText(14, _translate("ClassicalExtrasOptionsPage", "orchestrators"))
        self.cea_source_7.setItemText(15, _translate("ClassicalExtrasOptionsPage", "conductors"))
        self.cea_source_7.setItemText(16, _translate("ClassicalExtrasOptionsPage", "chorusmasters"))
        self.cea_source_7.setItemText(17, _translate("ClassicalExtrasOptionsPage", "leaders"))
        self.cea_source_7.setItemText(18, _translate("ClassicalExtrasOptionsPage", "support_performers"))
        self.cea_source_7.setItemText(19, _translate("ClassicalExtrasOptionsPage", "work_type"))
        self.cea_source_7.setItemText(20, _translate("ClassicalExtrasOptionsPage", "release"))
        self.label_33.setText(_translate("ClassicalExtrasOptionsPage", "into tags:"))
        self.cea_tag_7.setToolTip(_translate("ClassicalExtrasOptionsPage", "Enter comma-separated list of tags"))
        self.cea_cond_7.setText(_translate("ClassicalExtrasOptionsPage", "Conditional?"))
        self.toolButton_8.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click to edit sources"))
        self.toolButton_8.setText(_translate("ClassicalExtrasOptionsPage", "Source from:"))
        self.cea_source_8.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click button to edit. See notes above."))
        self.cea_source_8.setItemText(1, _translate("ClassicalExtrasOptionsPage", "album_soloists, album_conductors, album_ensembles"))
        self.cea_source_8.setItemText(2, _translate("ClassicalExtrasOptionsPage", "soloists, conductors, ensembles, album_composers, composers"))
        self.cea_source_8.setItemText(3, _translate("ClassicalExtrasOptionsPage", "album_soloists"))
        self.cea_source_8.setItemText(4, _translate("ClassicalExtrasOptionsPage", "album_conductors"))
        self.cea_source_8.setItemText(5, _translate("ClassicalExtrasOptionsPage", "album_ensembles"))
        self.cea_source_8.setItemText(6, _translate("ClassicalExtrasOptionsPage", "album_composers"))
        self.cea_source_8.setItemText(7, _translate("ClassicalExtrasOptionsPage", "album_composer_lastnames"))
        self.cea_source_8.setItemText(8, _translate("ClassicalExtrasOptionsPage", "soloists"))
        self.cea_source_8.setItemText(9, _translate("ClassicalExtrasOptionsPage", "soloist_names"))
        self.cea_source_8.setItemText(10, _translate("ClassicalExtrasOptionsPage", "ensembles"))
        self.cea_source_8.setItemText(11, _translate("ClassicalExtrasOptionsPage", "ensemble_names"))
        self.cea_source_8.setItemText(12, _translate("ClassicalExtrasOptionsPage", "composers"))
        self.cea_source_8.setItemText(13, _translate("ClassicalExtrasOptionsPage", "arrangers"))
        self.cea_source_8.setItemText(14, _translate("ClassicalExtrasOptionsPage", "orchestrators"))
        self.cea_source_8.setItemText(15, _translate("ClassicalExtrasOptionsPage", "conductors"))
        self.cea_source_8.setItemText(16, _translate("ClassicalExtrasOptionsPage", "chorusmasters"))
        self.cea_source_8.setItemText(17, _translate("ClassicalExtrasOptionsPage", "leaders"))
        self.cea_source_8.setItemText(18, _translate("ClassicalExtrasOptionsPage", "support_performers"))
        self.cea_source_8.setItemText(19, _translate("ClassicalExtrasOptionsPage", "work_type"))
        self.cea_source_8.setItemText(20, _translate("ClassicalExtrasOptionsPage", "release"))
        self.label_35.setText(_translate("ClassicalExtrasOptionsPage", "into tags:"))
        self.cea_tag_8.setToolTip(_translate("ClassicalExtrasOptionsPage", "Enter comma-separated list of tags"))
        self.cea_cond_8.setText(_translate("ClassicalExtrasOptionsPage", "Conditional?"))
        self.toolButton_9.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click to edit sources"))
        self.toolButton_9.setText(_translate("ClassicalExtrasOptionsPage", "Source from:"))
        self.cea_source_9.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click button to edit. See notes above."))
        self.cea_source_9.setItemText(1, _translate("ClassicalExtrasOptionsPage", "album_soloists, album_conductors, album_ensembles"))
        self.cea_source_9.setItemText(2, _translate("ClassicalExtrasOptionsPage", "soloists, conductors, ensembles, album_composers, composers"))
        self.cea_source_9.setItemText(3, _translate("ClassicalExtrasOptionsPage", "album_soloists"))
        self.cea_source_9.setItemText(4, _translate("ClassicalExtrasOptionsPage", "album_conductors"))
        self.cea_source_9.setItemText(5, _translate("ClassicalExtrasOptionsPage", "album_ensembles"))
        self.cea_source_9.setItemText(6, _translate("ClassicalExtrasOptionsPage", "album_composers"))
        self.cea_source_9.setItemText(7, _translate("ClassicalExtrasOptionsPage", "album_composer_lastnames"))
        self.cea_source_9.setItemText(8, _translate("ClassicalExtrasOptionsPage", "soloists"))
        self.cea_source_9.setItemText(9, _translate("ClassicalExtrasOptionsPage", "soloist_names"))
        self.cea_source_9.setItemText(10, _translate("ClassicalExtrasOptionsPage", "ensembles"))
        self.cea_source_9.setItemText(11, _translate("ClassicalExtrasOptionsPage", "ensemble_names"))
        self.cea_source_9.setItemText(12, _translate("ClassicalExtrasOptionsPage", "composers"))
        self.cea_source_9.setItemText(13, _translate("ClassicalExtrasOptionsPage", "arrangers"))
        self.cea_source_9.setItemText(14, _translate("ClassicalExtrasOptionsPage", "orchestrators"))
        self.cea_source_9.setItemText(15, _translate("ClassicalExtrasOptionsPage", "conductors"))
        self.cea_source_9.setItemText(16, _translate("ClassicalExtrasOptionsPage", "chorusmasters"))
        self.cea_source_9.setItemText(17, _translate("ClassicalExtrasOptionsPage", "leaders"))
        self.cea_source_9.setItemText(18, _translate("ClassicalExtrasOptionsPage", "support_performers"))
        self.cea_source_9.setItemText(19, _translate("ClassicalExtrasOptionsPage", "work_type"))
        self.cea_source_9.setItemText(20, _translate("ClassicalExtrasOptionsPage", "release"))
        self.label_53.setText(_translate("ClassicalExtrasOptionsPage", "into tags:"))
        self.cea_tag_9.setToolTip(_translate("ClassicalExtrasOptionsPage", "Enter comma-separated list of tags"))
        self.cea_cond_9.setText(_translate("ClassicalExtrasOptionsPage", "Conditional?"))
        self.toolButton_10.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click to edit sources"))
        self.toolButton_10.setText(_translate("ClassicalExtrasOptionsPage", "Source from:"))
        self.cea_source_10.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click button to edit. See notes above."))
        self.cea_source_10.setItemText(1, _translate("ClassicalExtrasOptionsPage", "album_soloists, album_conductors, album_ensembles"))
        self.cea_source_10.setItemText(2, _translate("ClassicalExtrasOptionsPage", "soloists, conductors, ensembles, album_composers, composers"))
        self.cea_source_10.setItemText(3, _translate("ClassicalExtrasOptionsPage", "album_soloists"))
        self.cea_source_10.setItemText(4, _translate("ClassicalExtrasOptionsPage", "album_conductors"))
        self.cea_source_10.setItemText(5, _translate("ClassicalExtrasOptionsPage", "album_ensembles"))
        self.cea_source_10.setItemText(6, _translate("ClassicalExtrasOptionsPage", "album_composers"))
        self.cea_source_10.setItemText(7, _translate("ClassicalExtrasOptionsPage", "album_composer_lastnames"))
        self.cea_source_10.setItemText(8, _translate("ClassicalExtrasOptionsPage", "soloists"))
        self.cea_source_10.setItemText(9, _translate("ClassicalExtrasOptionsPage", "soloist_names"))
        self.cea_source_10.setItemText(10, _translate("ClassicalExtrasOptionsPage", "ensembles"))
        self.cea_source_10.setItemText(11, _translate("ClassicalExtrasOptionsPage", "ensemble_names"))
        self.cea_source_10.setItemText(12, _translate("ClassicalExtrasOptionsPage", "composers"))
        self.cea_source_10.setItemText(13, _translate("ClassicalExtrasOptionsPage", "arrangers"))
        self.cea_source_10.setItemText(14, _translate("ClassicalExtrasOptionsPage", "orchestrators"))
        self.cea_source_10.setItemText(15, _translate("ClassicalExtrasOptionsPage", "conductors"))
        self.cea_source_10.setItemText(16, _translate("ClassicalExtrasOptionsPage", "chorusmasters"))
        self.cea_source_10.setItemText(17, _translate("ClassicalExtrasOptionsPage", "leaders"))
        self.cea_source_10.setItemText(18, _translate("ClassicalExtrasOptionsPage", "support_performers"))
        self.cea_source_10.setItemText(19, _translate("ClassicalExtrasOptionsPage", "work_type"))
        self.cea_source_10.setItemText(20, _translate("ClassicalExtrasOptionsPage", "release"))
        self.label_55.setText(_translate("ClassicalExtrasOptionsPage", "into tags:"))
        self.cea_tag_10.setToolTip(_translate("ClassicalExtrasOptionsPage", "Enter comma-separated list of tags"))
        self.cea_cond_10.setText(_translate("ClassicalExtrasOptionsPage", "Conditional?"))
        self.toolButton_11.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click to edit sources"))
        self.toolButton_11.setText(_translate("ClassicalExtrasOptionsPage", "Source from:"))
        self.cea_source_11.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click button to edit. See notes above."))
        self.cea_source_11.setItemText(1, _translate("ClassicalExtrasOptionsPage", "album_soloists, album_conductors, album_ensembles"))
        self.cea_source_11.setItemText(2, _translate("ClassicalExtrasOptionsPage", "soloists, conductors, ensembles, album_composers, composers"))
        self.cea_source_11.setItemText(3, _translate("ClassicalExtrasOptionsPage", "album_soloists"))
        self.cea_source_11.setItemText(4, _translate("ClassicalExtrasOptionsPage", "album_conductors"))
        self.cea_source_11.setItemText(5, _translate("ClassicalExtrasOptionsPage", "album_ensembles"))
        self.cea_source_11.setItemText(6, _translate("ClassicalExtrasOptionsPage", "album_composers"))
        self.cea_source_11.setItemText(7, _translate("ClassicalExtrasOptionsPage", "album_composer_lastnames"))
        self.cea_source_11.setItemText(8, _translate("ClassicalExtrasOptionsPage", "soloists"))
        self.cea_source_11.setItemText(9, _translate("ClassicalExtrasOptionsPage", "soloist_names"))
        self.cea_source_11.setItemText(10, _translate("ClassicalExtrasOptionsPage", "ensembles"))
        self.cea_source_11.setItemText(11, _translate("ClassicalExtrasOptionsPage", "ensemble_names"))
        self.cea_source_11.setItemText(12, _translate("ClassicalExtrasOptionsPage", "composers"))
        self.cea_source_11.setItemText(13, _translate("ClassicalExtrasOptionsPage", "arrangers"))
        self.cea_source_11.setItemText(14, _translate("ClassicalExtrasOptionsPage", "orchestrators"))
        self.cea_source_11.setItemText(15, _translate("ClassicalExtrasOptionsPage", "conductors"))
        self.cea_source_11.setItemText(16, _translate("ClassicalExtrasOptionsPage", "chorusmasters"))
        self.cea_source_11.setItemText(17, _translate("ClassicalExtrasOptionsPage", "leaders"))
        self.cea_source_11.setItemText(18, _translate("ClassicalExtrasOptionsPage", "support_performers"))
        self.cea_source_11.setItemText(19, _translate("ClassicalExtrasOptionsPage", "work_type"))
        self.cea_source_11.setItemText(20, _translate("ClassicalExtrasOptionsPage", "release"))
        self.label_57.setText(_translate("ClassicalExtrasOptionsPage", "into tags:"))
        self.cea_tag_11.setToolTip(_translate("ClassicalExtrasOptionsPage", "Enter comma-separated list of tags"))
        self.cea_cond_11.setText(_translate("ClassicalExtrasOptionsPage", "Conditional?"))
        self.toolButton_12.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click to edit sources"))
        self.toolButton_12.setText(_translate("ClassicalExtrasOptionsPage", "Source from:"))
        self.cea_source_12.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click button to edit. See notes above."))
        self.cea_source_12.setItemText(1, _translate("ClassicalExtrasOptionsPage", "album_soloists, album_conductors, album_ensembles"))
        self.cea_source_12.setItemText(2, _translate("ClassicalExtrasOptionsPage", "soloists, conductors, ensembles, album_composers, composers"))
        self.cea_source_12.setItemText(3, _translate("ClassicalExtrasOptionsPage", "album_soloists"))
        self.cea_source_12.setItemText(4, _translate("ClassicalExtrasOptionsPage", "album_conductors"))
        self.cea_source_12.setItemText(5, _translate("ClassicalExtrasOptionsPage", "album_ensembles"))
        self.cea_source_12.setItemText(6, _translate("ClassicalExtrasOptionsPage", "album_composers"))
        self.cea_source_12.setItemText(7, _translate("ClassicalExtrasOptionsPage", "album_composer_lastnames"))
        self.cea_source_12.setItemText(8, _translate("ClassicalExtrasOptionsPage", "soloists"))
        self.cea_source_12.setItemText(9, _translate("ClassicalExtrasOptionsPage", "soloist_names"))
        self.cea_source_12.setItemText(10, _translate("ClassicalExtrasOptionsPage", "ensembles"))
        self.cea_source_12.setItemText(11, _translate("ClassicalExtrasOptionsPage", "ensemble_names"))
        self.cea_source_12.setItemText(12, _translate("ClassicalExtrasOptionsPage", "composers"))
        self.cea_source_12.setItemText(13, _translate("ClassicalExtrasOptionsPage", "arrangers"))
        self.cea_source_12.setItemText(14, _translate("ClassicalExtrasOptionsPage", "orchestrators"))
        self.cea_source_12.setItemText(15, _translate("ClassicalExtrasOptionsPage", "conductors"))
        self.cea_source_12.setItemText(16, _translate("ClassicalExtrasOptionsPage", "chorusmasters"))
        self.cea_source_12.setItemText(17, _translate("ClassicalExtrasOptionsPage", "leaders"))
        self.cea_source_12.setItemText(18, _translate("ClassicalExtrasOptionsPage", "support_performers"))
        self.cea_source_12.setItemText(19, _translate("ClassicalExtrasOptionsPage", "work_type"))
        self.cea_source_12.setItemText(20, _translate("ClassicalExtrasOptionsPage", "release"))
        self.label_59.setText(_translate("ClassicalExtrasOptionsPage", "into tags:"))
        self.cea_tag_12.setToolTip(_translate("ClassicalExtrasOptionsPage", "Enter comma-separated list of tags"))
        self.cea_cond_12.setText(_translate("ClassicalExtrasOptionsPage", "Conditional?"))
        self.toolButton_13.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click to edit sources"))
        self.toolButton_13.setText(_translate("ClassicalExtrasOptionsPage", "Source from:"))
        self.cea_source_13.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click button to edit. See notes above."))
        self.cea_source_13.setItemText(1, _translate("ClassicalExtrasOptionsPage", "album_soloists, album_conductors, album_ensembles"))
        self.cea_source_13.setItemText(2, _translate("ClassicalExtrasOptionsPage", "soloists, conductors, ensembles, album_composers, composers"))
        self.cea_source_13.setItemText(3, _translate("ClassicalExtrasOptionsPage", "album_soloists"))
        self.cea_source_13.setItemText(4, _translate("ClassicalExtrasOptionsPage", "album_conductors"))
        self.cea_source_13.setItemText(5, _translate("ClassicalExtrasOptionsPage", "album_ensembles"))
        self.cea_source_13.setItemText(6, _translate("ClassicalExtrasOptionsPage", "album_composers"))
        self.cea_source_13.setItemText(7, _translate("ClassicalExtrasOptionsPage", "album_composer_lastnames"))
        self.cea_source_13.setItemText(8, _translate("ClassicalExtrasOptionsPage", "soloists"))
        self.cea_source_13.setItemText(9, _translate("ClassicalExtrasOptionsPage", "soloist_names"))
        self.cea_source_13.setItemText(10, _translate("ClassicalExtrasOptionsPage", "ensembles"))
        self.cea_source_13.setItemText(11, _translate("ClassicalExtrasOptionsPage", "ensemble_names"))
        self.cea_source_13.setItemText(12, _translate("ClassicalExtrasOptionsPage", "composers"))
        self.cea_source_13.setItemText(13, _translate("ClassicalExtrasOptionsPage", "arrangers"))
        self.cea_source_13.setItemText(14, _translate("ClassicalExtrasOptionsPage", "orchestrators"))
        self.cea_source_13.setItemText(15, _translate("ClassicalExtrasOptionsPage", "conductors"))
        self.cea_source_13.setItemText(16, _translate("ClassicalExtrasOptionsPage", "chorusmasters"))
        self.cea_source_13.setItemText(17, _translate("ClassicalExtrasOptionsPage", "leaders"))
        self.cea_source_13.setItemText(18, _translate("ClassicalExtrasOptionsPage", "support_performers"))
        self.cea_source_13.setItemText(19, _translate("ClassicalExtrasOptionsPage", "work_type"))
        self.cea_source_13.setItemText(20, _translate("ClassicalExtrasOptionsPage", "release"))
        self.label_61.setText(_translate("ClassicalExtrasOptionsPage", "into tags:"))
        self.cea_tag_13.setToolTip(_translate("ClassicalExtrasOptionsPage", "Enter comma-separated list of tags"))
        self.cea_cond_13.setText(_translate("ClassicalExtrasOptionsPage", "Conditional?"))
        self.toolButton_14.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click to edit sources"))
        self.toolButton_14.setText(_translate("ClassicalExtrasOptionsPage", "Source from:"))
        self.cea_source_14.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click button to edit. See notes above."))
        self.cea_source_14.setItemText(1, _translate("ClassicalExtrasOptionsPage", "album_soloists, album_conductors, album_ensembles"))
        self.cea_source_14.setItemText(2, _translate("ClassicalExtrasOptionsPage", "soloists, conductors, ensembles, album_composers, composers"))
        self.cea_source_14.setItemText(3, _translate("ClassicalExtrasOptionsPage", "album_soloists"))
        self.cea_source_14.setItemText(4, _translate("ClassicalExtrasOptionsPage", "album_conductors"))
        self.cea_source_14.setItemText(5, _translate("ClassicalExtrasOptionsPage", "album_ensembles"))
        self.cea_source_14.setItemText(6, _translate("ClassicalExtrasOptionsPage", "album_composers"))
        self.cea_source_14.setItemText(7, _translate("ClassicalExtrasOptionsPage", "album_composer_lastnames"))
        self.cea_source_14.setItemText(8, _translate("ClassicalExtrasOptionsPage", "soloists"))
        self.cea_source_14.setItemText(9, _translate("ClassicalExtrasOptionsPage", "soloist_names"))
        self.cea_source_14.setItemText(10, _translate("ClassicalExtrasOptionsPage", "ensembles"))
        self.cea_source_14.setItemText(11, _translate("ClassicalExtrasOptionsPage", "ensemble_names"))
        self.cea_source_14.setItemText(12, _translate("ClassicalExtrasOptionsPage", "composers"))
        self.cea_source_14.setItemText(13, _translate("ClassicalExtrasOptionsPage", "arrangers"))
        self.cea_source_14.setItemText(14, _translate("ClassicalExtrasOptionsPage", "orchestrators"))
        self.cea_source_14.setItemText(15, _translate("ClassicalExtrasOptionsPage", "conductors"))
        self.cea_source_14.setItemText(16, _translate("ClassicalExtrasOptionsPage", "chorusmasters"))
        self.cea_source_14.setItemText(17, _translate("ClassicalExtrasOptionsPage", "leaders"))
        self.cea_source_14.setItemText(18, _translate("ClassicalExtrasOptionsPage", "support_performers"))
        self.cea_source_14.setItemText(19, _translate("ClassicalExtrasOptionsPage", "work_type"))
        self.cea_source_14.setItemText(20, _translate("ClassicalExtrasOptionsPage", "release"))
        self.label_63.setText(_translate("ClassicalExtrasOptionsPage", "into tags:"))
        self.cea_tag_14.setToolTip(_translate("ClassicalExtrasOptionsPage", "Enter comma-separated list of tags"))
        self.cea_cond_14.setText(_translate("ClassicalExtrasOptionsPage", "Conditional?"))
        self.toolButton_15.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click to edit sources"))
        self.toolButton_15.setText(_translate("ClassicalExtrasOptionsPage", "Source from:"))
        self.cea_source_15.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click button to edit. See notes above."))
        self.cea_source_15.setItemText(1, _translate("ClassicalExtrasOptionsPage", "album_soloists, album_conductors, album_ensembles"))
        self.cea_source_15.setItemText(2, _translate("ClassicalExtrasOptionsPage", "soloists, conductors, ensembles, album_composers, composers"))
        self.cea_source_15.setItemText(3, _translate("ClassicalExtrasOptionsPage", "album_soloists"))
        self.cea_source_15.setItemText(4, _translate("ClassicalExtrasOptionsPage", "album_conductors"))
        self.cea_source_15.setItemText(5, _translate("ClassicalExtrasOptionsPage", "album_ensembles"))
        self.cea_source_15.setItemText(6, _translate("ClassicalExtrasOptionsPage", "album_composers"))
        self.cea_source_15.setItemText(7, _translate("ClassicalExtrasOptionsPage", "album_composer_lastnames"))
        self.cea_source_15.setItemText(8, _translate("ClassicalExtrasOptionsPage", "soloists"))
        self.cea_source_15.setItemText(9, _translate("ClassicalExtrasOptionsPage", "soloist_names"))
        self.cea_source_15.setItemText(10, _translate("ClassicalExtrasOptionsPage", "ensembles"))
        self.cea_source_15.setItemText(11, _translate("ClassicalExtrasOptionsPage", "ensemble_names"))
        self.cea_source_15.setItemText(12, _translate("ClassicalExtrasOptionsPage", "composers"))
        self.cea_source_15.setItemText(13, _translate("ClassicalExtrasOptionsPage", "arrangers"))
        self.cea_source_15.setItemText(14, _translate("ClassicalExtrasOptionsPage", "orchestrators"))
        self.cea_source_15.setItemText(15, _translate("ClassicalExtrasOptionsPage", "conductors"))
        self.cea_source_15.setItemText(16, _translate("ClassicalExtrasOptionsPage", "chorusmasters"))
        self.cea_source_15.setItemText(17, _translate("ClassicalExtrasOptionsPage", "leaders"))
        self.cea_source_15.setItemText(18, _translate("ClassicalExtrasOptionsPage", "support_performers"))
        self.cea_source_15.setItemText(19, _translate("ClassicalExtrasOptionsPage", "work_type"))
        self.cea_source_15.setItemText(20, _translate("ClassicalExtrasOptionsPage", "release"))
        self.label_65.setText(_translate("ClassicalExtrasOptionsPage", "into tags:"))
        self.cea_tag_15.setToolTip(_translate("ClassicalExtrasOptionsPage", "Enter comma-separated list of tags"))
        self.cea_cond_15.setText(_translate("ClassicalExtrasOptionsPage", "Conditional?"))
        self.toolButton_16.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click to edit sources"))
        self.toolButton_16.setText(_translate("ClassicalExtrasOptionsPage", "Source from:"))
        self.cea_source_16.setToolTip(_translate("ClassicalExtrasOptionsPage", "Click button to edit. See notes above."))
        self.cea_source_16.setItemText(1, _translate("ClassicalExtrasOptionsPage", "album_soloists, album_conductors, album_ensembles"))
        self.cea_source_16.setItemText(2, _translate("ClassicalExtrasOptionsPage", "soloists, conductors, ensembles, album_composers, composers"))
        self.cea_source_16.setItemText(3, _translate("ClassicalExtrasOptionsPage", "album_soloists"))
        self.cea_source_16.setItemText(4, _translate("ClassicalExtrasOptionsPage", "album_conductors"))
        self.cea_source_16.setItemText(5, _translate("ClassicalExtrasOptionsPage", "album_ensembles"))
        self.cea_source_16.setItemText(6, _translate("ClassicalExtrasOptionsPage", "album_composers"))
        self.cea_source_16.setItemText(7, _translate("ClassicalExtrasOptionsPage", "album_composer_lastnames"))
        self.cea_source_16.setItemText(8, _translate("ClassicalExtrasOptionsPage", "soloists"))
        self.cea_source_16.setItemText(9, _translate("ClassicalExtrasOptionsPage", "soloist_names"))
        self.cea_source_16.setItemText(10, _translate("ClassicalExtrasOptionsPage", "ensembles"))
        self.cea_source_16.setItemText(11, _translate("ClassicalExtrasOptionsPage", "ensemble_names"))
        self.cea_source_16.setItemText(12, _translate("ClassicalExtrasOptionsPage", "composers"))
        self.cea_source_16.setItemText(13, _translate("ClassicalExtrasOptionsPage", "arrangers"))
        self.cea_source_16.setItemText(14, _translate("ClassicalExtrasOptionsPage", "orchestrators"))
        self.cea_source_16.setItemText(15, _translate("ClassicalExtrasOptionsPage", "conductors"))
        self.cea_source_16.setItemText(16, _translate("ClassicalExtrasOptionsPage", "chorusmasters"))
        self.cea_source_16.setItemText(17, _translate("ClassicalExtrasOptionsPage", "leaders"))
        self.cea_source_16.setItemText(18, _translate("ClassicalExtrasOptionsPage", "support_performers"))
        self.cea_source_16.setItemText(19, _translate("ClassicalExtrasOptionsPage", "work_type"))
        self.cea_source_16.setItemText(20, _translate("ClassicalExtrasOptionsPage", "release"))
        self.label_67.setText(_translate("ClassicalExtrasOptionsPage", "into tags:"))
        self.cea_tag_16.setToolTip(_translate("ClassicalExtrasOptionsPage", "Enter comma-separated list of tags"))
        self.cea_cond_16.setText(_translate("ClassicalExtrasOptionsPage", "Conditional?"))
        self.label_42.setText(_translate("ClassicalExtrasOptionsPage", "(If source is empty, tag will be left unchanged)                                                                                                                                        "))
        self.label_17.setText(_translate("ClassicalExtrasOptionsPage", "(Conditional tags will only be filled if previously empty)"))
        self.cea_tag_sort.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Select to include sort-tags, where available. See<span style=\" font-style:italic;\"> &quot;What\'s this?&quot;</span>  for more details.</p></body></html>"))
        self.cea_tag_sort.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>If a sort tag is associated with the source tag then the sort names will be placed in a sort tag corresponding to the destination tag. Note that the only explicit sort tags written by Picard are for artist, albumartist and composer. Piacrd also writes hidden variables \'_artists_sort\' and \'albumartists_sort\' (note the plurals - these are the sort tags for multi-valued alternatives \'artists\' and \'_albumartists\'). To be consistent with this approach, the plugin writes hidden variables for other tags - e.g. \'_arranger_sort\'. The plugin also writes hidden sort variables for the various hidden artist variables - e.g. \'_cwp_librettists\' has a matching sort variable \'_cwp_librettists_sort\'. Therefore most artist-type sources <span style=\" font-weight:600;\">will</span> have a sort tag/variable associated with them and these will be placed in a destination sort tag if this option is selected -<span style=\" font-weight:600;\"> in other words, selecting this option will cause most destination tags to have associated sort tags</span>.<span style=\" font-weight:600;\"> Furthermore, any hidden sort variables associated with tags which are not listed explicitly in the tag mapping section will also be written out as tags</span> (i.e. even if the related tags are not included as destination tags). Note, however, that composite sources (e.g. &quot; ensemble_names + \\;  + conductors&quot;) do not have sort tags associated with them.</p><p><br/></p><p>If this option is not selected, no additional sort tags will be written, but the hidden variables will still be available, so if a sort tag is required explicitly, just map the sort tag directly - e.g. map \'conductors_sort\' to \'conductor_sort\'.</p></body></html>"))
        self.cea_tag_sort.setText(_translate("ClassicalExtrasOptionsPage", "Also populate sort tags"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Tag_mapping), _translate("ClassicalExtrasOptionsPage", "Tag mapping"))
        self.label_110.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">General</span></p></body></html>"))
        self.ce_no_run.setText(_translate("ClassicalExtrasOptionsPage", "Do not run Classical Extras for tracks where no pre-existing file is detected (warning tag will be written)"))
        self.label_111.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Artists (only effective if \"Artists\" section enabled)</span></p></body></html>"))
        self.advanced_artists.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Separate multiple names by commas. Do not use any quotation marks.</p></body></html>"))
        self.advanced_artists.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Permits the listing of strings by which ensembles of different types may be identified. This is used by the plugin to place performer details in the relevant hidden variables and thus make them available for use in the &quot;Tag mapping&quot; tab as sources for any required tags. </p><p>If it is important that only whole words are to be matched, be sure to include a space after the string.</p></body></html>"))
        self.label_112.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Ensemble strings</span> (separate names by commas)</p></body></html>"))
        self.cea_orchestras_2.setText(_translate("ClassicalExtrasOptionsPage", "Orchestras"))
        self.cea_choirs_2.setText(_translate("ClassicalExtrasOptionsPage", "Choirs"))
        self.cea_groups_2.setText(_translate("ClassicalExtrasOptionsPage", "Groups (i.e. other ensembles such as quartets etc.)"))
        self.label_113.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Works and parts (only effective if \"Works and parts\" section enabled)</span></p></body></html>"))
        self.label_4.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Sometimes MB lookups fail. Unfortunately Picard (currently) has no automatic &quot;retry&quot; function. The plugin will attempt to retry for the specified number of attempts. If it still fails, the hidden variable _cwp_error will be set with a message; if error logging is checked in section 4, an error message will be written to the log and the contents of _cwp_error will be written out to a special tag called &quot;An_error_has_occurred&quot; which should appear prominently in the bottom pane of Picard. The problem may be resolved by refreshing, otherwise there may be a problem with the MB database availability. It is unlikely to be a software problem with the plugin.</p></body></html>"))
        self.label_4.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Max number of re-tries to access works (in case of server errors)*</p></body></html>"))
        self.label_120.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Allow blank part names for arrangements and part recordings if arrangement/partial label is provided</p></body></html>"))
        self.label_114.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">Removal of common text between parent and child works</span></p></body></html>"))
        self.label_90.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Minimum number of similar words required before eliminating. Use zero for no elimination.<br/>(Punctuation and accents etc. will be ignored in word comparison)</p></body></html>"))
        self.label_89.setText(_translate("ClassicalExtrasOptionsPage", "NB Parent name text at the start of a work which is followed by punctuation in the work name will always be stripped regardless of this setting."))
        self.run_options_3a.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>This subsection contains various parameters affecting the processing of strings in titles. Because titles are free-form, not all circumstances can be anticipated. Detailed documentation of these is beyond the scope of this Readme as the effects can be quite complex and subtle and may require an understanding of the plugin code (which is of course open-source) to acsertain them. If pure canonical works are used (&quot;Use only metadata from canonical works&quot; and, if necessary, &quot;Full MusicBrainz work hierarchy&quot; on the Works and parts tab, section 2) then this processing should be irrelevant, but no text from titles will be included. Some explanations are given below:</p><p>    &quot;Proximity of new words&quot;. When using extended metadata - i.e. &quot;metadata enhanced with title text&quot;, the plugin will attempt to remove similar words between the canonical work name (in MusicBrainz) and the title before extending the canonical name. After removing such words, a rather &quot;bitty&quot; result may occur. To avoid this, any new words with the specified proximity will have the words between them (or up to the end) included even if they repeat words in the work name.</p><p>    &quot;Prefixes&quot;. When using &quot;metadata from titles&quot; or extended metadata, the structure of the works in MusicBrainz is used to infer the structure in the title text, so strings that are repeated between tracks which are part of the same MusicBrainz work will be treated as &quot;higher level&quot;. This can lead to anomolies if, for instance, the titles are &quot;Work name: Part 1&quot;, &quot;Work name: Part 2&quot;, &quot;Part&quot; will be treated as part of the parent work name. Specifying such words in &quot;Prefixes&quot; will prevent this.</p><p>    &quot;Synonyms&quot;. These words will be considered equivalent when comparing work name and title text. Thus if one word appears in the work name, that and its synonym will be removed from the title in extending the metadata (subject to the proximity setting above).</p><p>    &quot;Replacements&quot;. These words/phrases will be replaced in the title text in extended metadata, regardless of the text in the work name.</p></body></html>"))
        self.label_115.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">How title metadata should be included in extended metadata</span><span style=\" font-size:10pt;\"> (use cautiously - read documentation)</span><br/><span style=\" font-style:italic;\">(Only applies if &quot;Use canonical work metadata enhanced with title text&quot; selected on &quot;Works and parts&quot; tab)</span></p></body></html>"))
        self.label_6.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Proximity of new words (to each other) to trigger in-fill with existing words (default = 2)</p></body></html>"))
        self.label_7.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Proximity of new words (to start or end) to trigger in-fill with existing words (default =1)</p></body></html>"))
        self.label_5.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Treat hyphenated words as two words for comparison purposes</p></body></html>"))
        self.label_8.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Proportion of a string to be matched to a (usually larger) string for it to be considered essentially similar (default = 66%)</p></body></html>"))
        self.cwp_substring_match.setSuffix(_translate("ClassicalExtrasOptionsPage", "%"))
        self.label_92.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600; font-style:italic;\">Prepositions/conjunctions and prefixes</span><span style=\" font-weight:600;\"><br/></span>DO NOT USE ANY COMMAS OR QUOTE MARKS (apostophes in words are acceptable)</p></body></html>"))
        self.label_91.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Prepositions &amp; conjunctions: these are words that will not be regarded as providing additional information (not treated as \'new\' words) unless they precede a new word.<br/>Use lower case only, comma separated</p></body></html>"))
        self.cwp_removewords_2.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Prefixes to be ignored in comparison (case insensitive, comma separated)<br/>To prevent a prefix from being ignored when extending metadata with title info, precede it with a space. <br/>To ensure only whole words are removed, follow with a space.</p></body></html>"))
        self.cwp_removewords.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Separate multiple names by commas. Do not use any quotation marks.</p></body></html>"))
        self.cwp_synonyms_2.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600; font-style:italic;\">Synonyms and replacements</span> - must be written as tuples separated by forward slashes - e.g (a,b) / (c,d,e) - a tuple may have two or more synonyms.</p><p>N.B. The matching is case-insensitive. Roman numerals will be treated as synonyms of arabic numerals in any event, so no need to enter these.</p><p>The last member of the tuple should be the canonical form (i.e. the one to which others are converted for comparison or replacement) and <span style=\" text-decoration: underline;\">must be a normal strin</span>g (not a regex). <span style=\" font-weight:600;\">See readme for full details</span>.<br/><span style=\" font-weight:600; font-style:italic;\">Unless entering a regular expression, use backslash \\ to escape any regex metacharacters, namely \\ ^ $ . | ? * + ( ) [ ] { <br/>Also escape commas , and forward slashes /. Do not enclose strings in quote marks.</span></p><p>Enter SYNONYM tuples below - each item in a tuple will be treated as similar when comparing works/parts and titles. The text in tags will be unaltered.</p></body></html>"))
        self.label_16.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Enter REMOVALS/REPLACEMENTS below - these will result in the &quot;extended&quot; text in tags being changed<br/>Put the word(s), phrase(s), or regular exprerssion(s) in the first part(s) of the tuple. The replacement text (or nothing - to remove) goes in the last member of the tuple.</p><p>N.B. Replacement text will operate BEFORE synonyms are considered.</p></body></html>"))
        self.cwp_replacements.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Entries must be 2-tuples, e.g. (Replace this, with this). Separate multiple tuples by forward slash. Do not use any quotation marks. Spaces are acceptable. The first item of a tuple may be a regular expression - enclose it with double exclamation marks - e.g.(!!regex here!!, replacement text here).</p></body></html>"))
        self.label_116.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Genres etc.</span> (only required if Muso-specific options are used for genres/periods)</p></body></html>"))
        self.label_85.setText(_translate("ClassicalExtrasOptionsPage", "Path to Muso reference database:"))
        self.label_84.setText(_translate("ClassicalExtrasOptionsPage", "Name of Muso reference database"))
        self.label_86.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">RESTART PICARD AFTER CHANGING THESE</span></p></body></html>"))
        self.label_117.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Logging options</span>*</p></body></html>"))
        self.groupBox_6.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>These options are in addition to the options chosen in Picard\'s &quot;Help-&gt;View error/debug log&quot; settings. They only affect messages written by this plugin. To enable debug messages to be shown, the flag needs to be set here and &quot;Debug mode&quot; needs to be turned on in the log. It is strongly advised to keep the &quot;debug&quot; and &quot;info&quot; flags unchecked unless debugging is required as they slow up processing significantly and may even cause Picard to crash on large releases. The &quot;error&quot; and &quot;warning&quot; flags should be left checked, unless it is required to suppress messages written out to tags (the default is to write messages to the tags 001_errors and 002_warnings).</p></body></html>"))
        self.log_error.setText(_translate("ClassicalExtrasOptionsPage", "Error"))
        self.log_warning.setText(_translate("ClassicalExtrasOptionsPage", "Warning"))
        self.log_debug.setText(_translate("ClassicalExtrasOptionsPage", "Debug"))
        self.groupBox_50.setTitle(_translate("ClassicalExtrasOptionsPage", "Custom logging"))
        self.log_basic.setText(_translate("ClassicalExtrasOptionsPage", "Basic"))
        self.log_info.setText(_translate("ClassicalExtrasOptionsPage", "Full"))
        self.label_118.setText(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p><span style=\" font-weight:600;\">Classical Extras Special Tags</span></p></body></html>"))
        self.groupBox_33.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>This can be used so that the user has a record of the version of Classical Extras which generated the tags and which options were selected to achieve the resulting tags. Note that the tags will be blanked first so this will only show the last options used on a particular file. The same tag can be used for both sets of options, resulting in a multi-valued tag. </p></body></html>"))
        self.groupBox_33.setTitle(_translate("ClassicalExtrasOptionsPage", "Save plugin details and options in a tag?*"))
        self.label_41.setText(_translate("ClassicalExtrasOptionsPage", "Tag name for plugin version"))
        self.label_36.setText(_translate("ClassicalExtrasOptionsPage", "Tag name for artist/mapping/misc. options"))
        self.label_38.setText(_translate("ClassicalExtrasOptionsPage", "Tag name for work/genre options"))
        self.groupBox_10.setWhatsThis(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>If options have previously been saved (see above), selecting these will cause the saved options to be used in preference to the displayed options. The displayed options will not be affected and will be used if no saved options are present. The default is for no over-ride. If artist options over-ride is chosen, then tag map detail options may be included or not in the override.</p><p><br/></p><p>The last checkbox, &quot;Overwrite options in Options Pages&quot;, is for <span style=\" font-weight:600;\">VERY CAREFUL USE ONLY</span>. It will cause any options read from the saved tags (if the relevant box has been ticked) to over-write the options on the plugin Options Page UI. The intended use of this is if for some reason the user\'s preferred options have been erased/reverted to default - by using this option, the previously-used choices from a reliable filed album can be used to populate the Options Page. The box will automatically be unticked after loading/refreshing one album, to prevent inadvertant use. Far better is to make a <span style=\" font-weight:600;\">backup copy</span> of the picard.ini file.</p></body></html>"))
        self.groupBox_10.setTitle(_translate("ClassicalExtrasOptionsPage", "Over-ride plugin options displayed in Options Pages with options from local file tags (previously saved using method in box above)?*"))
        self.cea_override.setText(_translate("ClassicalExtrasOptionsPage", "Artist options"))
        self.cwp_override.setText(_translate("ClassicalExtrasOptionsPage", "Work options"))
        self.ce_genres_override.setText(_translate("ClassicalExtrasOptionsPage", "Genres etc. options"))
        self.ce_tagmap_override.setToolTip(_translate("ClassicalExtrasOptionsPage", "<html><head/><body><p>Will not over-ride displayed options unless artist options over-ride is also selected</p></body></html>"))
        self.ce_tagmap_override.setText(_translate("ClassicalExtrasOptionsPage", "Tag mapping options"))
        self.ce_options_overwrite.setText(_translate("ClassicalExtrasOptionsPage", "Overwrite options in Options Pages (READ WARNINGS in Readme)"))
        self.label_121.setText(_translate("ClassicalExtrasOptionsPage", "Note that the above saved options include the related \"advanced\" options on this tab as well as the options on each of the main tabs."))
        self.label_83.setText(_translate("ClassicalExtrasOptionsPage", "* ASTERISKED OPTIONS ARE NOT SAVED IN FILE TAGS"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Advanced), _translate("ClassicalExtrasOptionsPage", "Advanced"))
        self.textBrowser_2.setHtml(_translate("ClassicalExtrasOptionsPage", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600; text-decoration: underline;\">General description</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Classical Extras provides tagging enhancements for Picard and, in particular, utilises MusicBrainz’s hierarchy of works to provide work/movement tags. All options are set through a user interface in Picard options-&gt;plugins. This interface provides separate sections to enhance artist/performer tags, works and parts, genres and also allows for a generalised &quot;tag mapping&quot; (simple scripting). While it is designed to cater for the complexities of classical music tagging, it may also be useful for other music which has more than just basic song/artist/album data. <br /><br />The options screen provides five tabs for users to control the tags produced: <br /><br />1. Artists: Options as to whether artist tags will contain standard MB names, aliases or as-credited names. Ability to include and annotate names for specialist roles (chorus master, arranger, lyricist etc.). Ability to read lyrics tags on the file which has been loaded and assign them to track and album levels if required. (Note: Picard will not normally process incoming file tags). <br /><br />2. Works and parts: The plugin will build a hierarchy of works and parts (e.g. Work -&gt; Part -&gt; Movement or Opera -&gt; Act -&gt; Number) based on the works in MusicBrainz\'s database. These can then be displayed in tags in a variety of ways according to user preferences. Furthermore partial recordings, medleys, arrangements and collections of works are all handled according to user choices. There is a processing overhead for this at present because MusicBrainz limits look-ups to one per second. <br /><br />3. Genres etc.: Options are available to customise the source and display of information relating to genres, instruments, keys, work dates and periods. Additional capabilities are provided for users of Muso (or others who provide the relevant XML files) to use pre-existing databases of classical genres, classical composers and classical periods. <br /><br />4. Tag mapping: in some ways, this is a simple substitute for some of Picard\'s scripting capability. The main advantage is that the plugin will remember what tag mapping you use for each release (or even track). <br /><br />5. Advanced: Various options to control the detailed processing of the above. <br /><br />All user options can be saved on a per-album (or even per-track) basis so that tweaks can be used to deal with inconsistencies in the MusicBrainz data (e.g. include English titles from the track listing where the MusicBrainz works are in the composer\'s language and/or script). Also existing file tags can be processed (not possible in native Picard). <br /><br />See the readme file </span><a href=\"https://github.com/MetaTunes/picard-plugins/tree/metabrainz/2.0.2/plugins/classical_extras\"><span style=\" font-size:8pt; text-decoration: underline; color:#0000ff;\">on GitHub here</span></a><span style=\" font-size:8pt;\"> for full details.</span></p></body></html>"))
        self.textBrowser_3.setHtml(_translate("ClassicalExtrasOptionsPage", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt; font-weight:600;\">Please see the </span><a href=\"https://github.com/MetaTunes/picard-plugins/tree/metabrainz/2.0.2/plugins/classical_extras\"><span style=\" font-size:12pt; font-weight:600; text-decoration: underline; color:#0000ff;\">readme file</span></a><span style=\" font-size:12pt; font-weight:600;\"> or</span><span style=\" font-size:14pt; font-weight:600;\"> </span><a href=\"https://highmossergate.co.uk/digitalsymphony/\"><span style=\" font-size:14pt; text-decoration: underline; color:#0000ff;\">my website</span></a><span style=\" font-size:14pt; font-weight:600;\"> </span><span style=\" font-size:12pt; font-weight:600;\">for  full details of this plugin and how to use it.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">This help page now has only general information.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">There are extensive tooltips and &quot;What\'s This&quot; popups (right click for them)</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Help), _translate("ClassicalExtrasOptionsPage", "Help"))

